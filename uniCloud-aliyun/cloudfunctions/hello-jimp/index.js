(()=>{var r={6536:(r,i,a)=>{"use strict";const{block_height:o,block_width:s,getHumanImgs2:l,getEmptyImg2:u}=a(2630);const{getNamedFnt2:v}=a(1124);const b=a(2326);const y=v("ms-yahei").log3(`font1`).then(b.loadFont.bind(b)).log3(`font2`),x=l().log3(`humanImgs`),A=u().log3(`emptyImg`);i.draw=async function draw({msg:r="写点什么好呢？\n小同学"}){let i=r.split("\n").map((r=>r.split("")));let a=o*i.length,l=Math.max.apply(Math,i.map((r=>r.length)))*s;console.log(`canvas ${l} x ${a}`);let u=await y,v=await x,E=await A;let M=E.clone().resize(l,a);console.log("before matrix2");let L=hashMatrix(i,v.length);console.log("matrix2",L.map((r=>"["+r.join(", ")+"]")));i.forEach(((r,i)=>{r.forEach(((r,a)=>{let l=L[i][a];console.log(`render image-${l} on ${i}-${a}`);M.composite(v[l],a*s,i*o,{mode:b.BLEND_MULTIPLY,opacitySource:1,opacityDest:1});M.composite(E.clone().resize(40,40,b.RESIZE_BICUBIC).print(u,1,1,{text:r,alignmentX:b.HORIZONTAL_ALIGN_LEFT,alignmentY:b.VERTICAL_ALIGN_MIDDLE}).rotate(-40),a*s+29,i*o,{mode:b.BLEND_MULTIPLY,opacitySource:1,opacityDest:1})}))}));return M};function hashMatrix(r,i){let a=r.map((r=>r.map((r=>0))));for(let o=0;o<a.length;o++){let s=a[o];for(let a=0;a<s.length;a++){let l;while(true){l=Math.floor(Math.random()*i);if(o>0){if(a>0&&r[o-1][a-1]==l)continue;if(r[o-1][a]==l||r[o-1][a+1]==l)continue}if(a>0&&s[a-1]==l)continue;break}s[a]=l}}return a}},7388:()=>{"use strict";const r=Promise.prototype;r.log=function(r=console.log,i){if(typeof r=="string")return this.log(((...i)=>console.log(r,...i)));let a=this.then((i=>{try{r(i)}finally{return i}}));if(i)a=a.catch((r=>{try{i(r)}finally{throw r}}));return a};r.elog=function(r=console.error){return this.catch((i=>{try{r(i)}finally{throw i}}))};r.log2=function(r){return this.log((i=>console.log(`Succeed-[${r}]:`,i))).elog((i=>console.error(`Fail-[${r}]:`,i)))};r.log3=function(r){return this.log((i=>console.log(`Succeed-[${r}]:`))).elog((i=>console.error(`Fail-[${r}]:`)))};r.makeSafe=function(){return this.then((r=>r),(r=>{console.log(``,r);return{}}))}},1124:(r,i,a)=>{"use strict";const o=a(9550),s=a(9419);async function getFnt2(r,i){let a=i.map(((i,a)=>{let o=a==0?`${r}.fnt`:`${r}${a}.png`;if(typeof i=="string")i={url:i};return s.get2(i.url,{name:o,...i})}));let o=await Promise.all(a);return o[0]}i.getFnt2=getFnt2;async function getNamedFnt2(r){let i=o[r];if(!i){r="ms-yahei";i=o[r]}return await getFnt2(r,i)}i.getNamedFnt2=getNamedFnt2},2630:(r,i,a)=>{"use strict";const o=i.block_height=214,s=i.block_width=109;const l=a(7147),u=a(9419),v=a(3384),b=a(2326);const y=Promise.resolve(Buffer.from(v["persons.png"],"base64")).then((async r=>{let i=await b.read(r);console.log("image",i);let a=Array(33).fill(0).map(((r,a)=>{var l=a%9,u=(a-l)/9;return i.clone().crop(l*(195+s)+57,u*(150+o)+29,s,o)}));return a}));i.getHumanImgs2=async()=>await y;const x=Promise.resolve(Buffer.from(v["empty.png"],"base64")).then(b.read.bind(b));i.getEmptyImg2=async()=>await x},9550:r=>{"use strict";r.exports={setofont:["https://vkceyugu.cdn.bspapp.com/VKCEYUGU-7ead79ba-e9c6-4108-8939-f1fc77cb2d31/f51b8a3a-ff14-4a3a-bade-2b018c1488f3.fnt","https://vkceyugu.cdn.bspapp.com/VKCEYUGU-7ead79ba-e9c6-4108-8939-f1fc77cb2d31/adc50fbe-6f11-4445-a943-5a26eba87311.png","https://vkceyugu.cdn.bspapp.com/VKCEYUGU-7ead79ba-e9c6-4108-8939-f1fc77cb2d31/29042100-ce16-42f0-a1e1-b0479d565f8a.png"],"ms-yahei":[{url:"https://vkceyugu.cdn.bspapp.com/VKCEYUGU-7ead79ba-e9c6-4108-8939-f1fc77cb2d31/cf3f20ed-9c76-4cce-9be1-cb8afa23555c.fnt",size:931044},{url:"https://vkceyugu.cdn.bspapp.com/VKCEYUGU-7ead79ba-e9c6-4108-8939-f1fc77cb2d31/38e82b93-44a6-4f91-b3aa-4446cad8cd87.png",size:2488534},{url:"https://vkceyugu.cdn.bspapp.com/VKCEYUGU-7ead79ba-e9c6-4108-8939-f1fc77cb2d31/2985792e-83e0-4522-a859-ec6f8ded29b6.png",size:2566417},{url:"https://vkceyugu.cdn.bspapp.com/VKCEYUGU-7ead79ba-e9c6-4108-8939-f1fc77cb2d31/264f6e48-9601-462c-81bd-e4266fb666f1.png",size:540446}]}},9419:(r,i,a)=>{"use strict";const o=a(7147);const s={},l={};let u="/tmp/";function findName(r){return s[r]||(s[r]=encodeURIComponent(r))}function buildChecker({size:r,checker:i}={}){let a=[];if(r!==undefined){a.push((i=>{let a=o.statSync(i).size;return a==r?0:`size not match(${i}, ${a} / ${r})`}))}if(i)a.push(i);return r=>{for(var i=0;i<a.length;i++){let o=a[i];let s=o(r);if(s)return s}return}}async function realGet2(r,{name:i,size:a,checker:s,folder:l,timeout:v=1e4}={}){console.log(`build Promise for ${r}`);i=i||findName(r);if(!l)l=u;if(!o.existsSync(l))o.mkdirSync(l);const b=fullPath(l,i);let y=buildChecker({size:a,checker:s});if(o.existsSync(b)){let r=y(b);if(!r)return b;console.log(`cached file expires: ${r} `)}uniCloud.logger.info(`start downloading ${i} from ${r}`);let x=await uniCloud.httpclient.request(r,{timeout:v,writeStream:o.createWriteStream(b)});uniCloud.logger.info(`finish downloading ${i} from ${r}`,x.status);if(x.status!=200){uniCloud.logger.error(`${x.status} fail to download: ${r}`);o.rm(b);throw`download fail: ${r}`}let A=y(b);if(!A)return b;console.log(`downloaded file not match. url: ${r}; error: ${A}`);o.rm(b);throw`downloaded file ${r} does not pass. ${A}`}i.get2=async(r,i={})=>await(l[r]||(l[r]=realGet2(r,i)));function fullPath(r,i){return r+(r.endsWith("/")?"":"/")+i}i.setFolder=r=>{console.log(`change work folder to ${r}`);if(!o.existsSync(r))o.mkdirSync(r);u=r};i.setFolder("/tmp/net-files")},924:r=>{function _arrayLikeToArray(r,i){if(i==null||i>r.length)i=r.length;for(var a=0,o=new Array(i);a<i;a++){o[a]=r[a]}return o}r.exports=_arrayLikeToArray;r.exports["default"]=r.exports,r.exports.__esModule=true},8144:r=>{function _arrayWithHoles(r){if(Array.isArray(r))return r}r.exports=_arrayWithHoles;r.exports["default"]=r.exports,r.exports.__esModule=true},9601:(r,i,a)=>{var o=a(924);function _arrayWithoutHoles(r){if(Array.isArray(r))return o(r)}r.exports=_arrayWithoutHoles;r.exports["default"]=r.exports,r.exports.__esModule=true},1871:r=>{function _assertThisInitialized(r){if(r===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return r}r.exports=_assertThisInitialized;r.exports["default"]=r.exports,r.exports.__esModule=true},6986:r=>{function _classCallCheck(r,i){if(!(r instanceof i)){throw new TypeError("Cannot call a class as a function")}}r.exports=_classCallCheck;r.exports["default"]=r.exports,r.exports.__esModule=true},5210:(r,i,a)=>{var o=a(2665);var s=a(7439);function _construct(i,a,l){if(s()){r.exports=_construct=Reflect.construct;r.exports["default"]=r.exports,r.exports.__esModule=true}else{r.exports=_construct=function _construct(r,i,a){var s=[null];s.push.apply(s,i);var l=Function.bind.apply(r,s);var u=new l;if(a)o(u,a.prototype);return u};r.exports["default"]=r.exports,r.exports.__esModule=true}return _construct.apply(null,arguments)}r.exports=_construct;r.exports["default"]=r.exports,r.exports.__esModule=true},6671:r=>{function _defineProperties(r,i){for(var a=0;a<i.length;a++){var o=i[a];o.enumerable=o.enumerable||false;o.configurable=true;if("value"in o)o.writable=true;Object.defineProperty(r,o.key,o)}}function _createClass(r,i,a){if(i)_defineProperties(r.prototype,i);if(a)_defineProperties(r,a);return r}r.exports=_createClass;r.exports["default"]=r.exports,r.exports.__esModule=true},7400:r=>{function _defineProperty(r,i,a){if(i in r){Object.defineProperty(r,i,{value:a,enumerable:true,configurable:true,writable:true})}else{r[i]=a}return r}r.exports=_defineProperty;r.exports["default"]=r.exports,r.exports.__esModule=true},5533:r=>{function _extends(){r.exports=_extends=Object.assign||function(r){for(var i=1;i<arguments.length;i++){var a=arguments[i];for(var o in a){if(Object.prototype.hasOwnProperty.call(a,o)){r[o]=a[o]}}}return r};r.exports["default"]=r.exports,r.exports.__esModule=true;return _extends.apply(this,arguments)}r.exports=_extends;r.exports["default"]=r.exports,r.exports.__esModule=true},7516:r=>{function _getPrototypeOf(i){r.exports=_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(r){return r.__proto__||Object.getPrototypeOf(r)};r.exports["default"]=r.exports,r.exports.__esModule=true;return _getPrototypeOf(i)}r.exports=_getPrototypeOf;r.exports["default"]=r.exports,r.exports.__esModule=true},9640:(r,i,a)=>{var o=a(2665);function _inherits(r,i){if(typeof i!=="function"&&i!==null){throw new TypeError("Super expression must either be null or a function")}r.prototype=Object.create(i&&i.prototype,{constructor:{value:r,writable:true,configurable:true}});if(i)o(r,i)}r.exports=_inherits;r.exports["default"]=r.exports,r.exports.__esModule=true},2810:r=>{function _interopRequireDefault(r){return r&&r.__esModule?r:{default:r}}r.exports=_interopRequireDefault;r.exports["default"]=r.exports,r.exports.__esModule=true},2914:(r,i,a)=>{var o=a(8612)["default"];function _getRequireWildcardCache(r){if(typeof WeakMap!=="function")return null;var i=new WeakMap;var a=new WeakMap;return(_getRequireWildcardCache=function _getRequireWildcardCache(r){return r?a:i})(r)}function _interopRequireWildcard(r,i){if(!i&&r&&r.__esModule){return r}if(r===null||o(r)!=="object"&&typeof r!=="function"){return{default:r}}var a=_getRequireWildcardCache(i);if(a&&a.has(r)){return a.get(r)}var s={};var l=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in r){if(u!=="default"&&Object.prototype.hasOwnProperty.call(r,u)){var v=l?Object.getOwnPropertyDescriptor(r,u):null;if(v&&(v.get||v.set)){Object.defineProperty(s,u,v)}else{s[u]=r[u]}}}s["default"]=r;if(a){a.set(r,s)}return s}r.exports=_interopRequireWildcard;r.exports["default"]=r.exports,r.exports.__esModule=true},7439:r=>{function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})));return true}catch(r){return false}}r.exports=_isNativeReflectConstruct;r.exports["default"]=r.exports,r.exports.__esModule=true},8562:r=>{function _iterableToArray(r){if(typeof Symbol!=="undefined"&&r[Symbol.iterator]!=null||r["@@iterator"]!=null)return Array.from(r)}r.exports=_iterableToArray;r.exports["default"]=r.exports,r.exports.__esModule=true},6118:r=>{function _iterableToArrayLimit(r,i){var a=r==null?null:typeof Symbol!=="undefined"&&r[Symbol.iterator]||r["@@iterator"];if(a==null)return;var o=[];var s=true;var l=false;var u,v;try{for(a=a.call(r);!(s=(u=a.next()).done);s=true){o.push(u.value);if(i&&o.length===i)break}}catch(r){l=true;v=r}finally{try{if(!s&&a["return"]!=null)a["return"]()}finally{if(l)throw v}}return o}r.exports=_iterableToArrayLimit;r.exports["default"]=r.exports,r.exports.__esModule=true},9526:r=>{function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}r.exports=_nonIterableRest;r.exports["default"]=r.exports,r.exports.__esModule=true},2411:r=>{function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}r.exports=_nonIterableSpread;r.exports["default"]=r.exports,r.exports.__esModule=true},1101:(r,i,a)=>{var o=a(8612)["default"];var s=a(1871);function _possibleConstructorReturn(r,i){if(i&&(o(i)==="object"||typeof i==="function")){return i}else if(i!==void 0){throw new TypeError("Derived constructors may only return object or undefined")}return s(r)}r.exports=_possibleConstructorReturn;r.exports["default"]=r.exports,r.exports.__esModule=true},2665:r=>{function _setPrototypeOf(i,a){r.exports=_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(r,i){r.__proto__=i;return r};r.exports["default"]=r.exports,r.exports.__esModule=true;return _setPrototypeOf(i,a)}r.exports=_setPrototypeOf;r.exports["default"]=r.exports,r.exports.__esModule=true},6966:(r,i,a)=>{var o=a(8144);var s=a(6118);var l=a(2047);var u=a(9526);function _slicedToArray(r,i){return o(r)||s(r,i)||l(r,i)||u()}r.exports=_slicedToArray;r.exports["default"]=r.exports,r.exports.__esModule=true},2653:(r,i,a)=>{var o=a(9601);var s=a(8562);var l=a(2047);var u=a(2411);function _toConsumableArray(r){return o(r)||s(r)||l(r)||u()}r.exports=_toConsumableArray;r.exports["default"]=r.exports,r.exports.__esModule=true},8612:r=>{function _typeof(i){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){r.exports=_typeof=function _typeof(r){return typeof r};r.exports["default"]=r.exports,r.exports.__esModule=true}else{r.exports=_typeof=function _typeof(r){return r&&typeof Symbol==="function"&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r};r.exports["default"]=r.exports,r.exports.__esModule=true}return _typeof(i)}r.exports=_typeof;r.exports["default"]=r.exports,r.exports.__esModule=true},2047:(r,i,a)=>{var o=a(924);function _unsupportedIterableToArray(r,i){if(!r)return;if(typeof r==="string")return o(r,i);var a=Object.prototype.toString.call(r).slice(8,-1);if(a==="Object"&&r.constructor)a=r.constructor.name;if(a==="Map"||a==="Set")return Array.from(r);if(a==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return o(r,i)}r.exports=_unsupportedIterableToArray;r.exports["default"]=r.exports,r.exports.__esModule=true},7316:(r,i,a)=>{r.exports=a(1204)},2486:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var s=o(a(7400));var l=o(a(5989));var u=a(9801);var v="image/bmp";var b="image/x-ms-bmp";function toAGBR(r){return(0,u.scan)(r,0,0,r.bitmap.width,r.bitmap.height,(function(r,i,a){var o=this.bitmap.data[a+0];var s=this.bitmap.data[a+1];var l=this.bitmap.data[a+2];var u=this.bitmap.data[a+3];this.bitmap.data[a+0]=u;this.bitmap.data[a+1]=l;this.bitmap.data[a+2]=s;this.bitmap.data[a+3]=o})).bitmap}function fromAGBR(r){return(0,u.scan)({bitmap:r},0,0,r.width,r.height,(function(i,a,o){var s=this.bitmap.data[o+0];var l=this.bitmap.data[o+1];var u=this.bitmap.data[o+2];var v=this.bitmap.data[o+3];this.bitmap.data[o+0]=v;this.bitmap.data[o+1]=u;this.bitmap.data[o+2]=l;this.bitmap.data[o+3]=r.is_with_alpha?s:255})).bitmap}var y=function decode(r){return fromAGBR(l["default"].decode(r))};var x=function encode(r){return l["default"].encode(toAGBR(r)).data};var A=function _default(){var r,i;return{mime:(0,s["default"])({},v,["bmp"]),constants:{MIME_BMP:v,MIME_X_MS_BMP:b},decoders:(r={},(0,s["default"])(r,v,y),(0,s["default"])(r,b,y),r),encoders:(i={},(0,s["default"])(i,v,x),(0,s["default"])(i,b,x),i)}};i["default"]=A;r.exports=i.default},9460:(r,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i.srcOver=srcOver;i.dstOver=dstOver;i.multiply=multiply;i.add=add;i.screen=screen;i.overlay=overlay;i.darken=darken;i.lighten=lighten;i.hardLight=hardLight;i.difference=difference;i.exclusion=exclusion;function srcOver(r,i){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;r.a*=a;var o=i.a+r.a-i.a*r.a;var s=(r.r*r.a+i.r*i.a*(1-r.a))/o;var l=(r.g*r.a+i.g*i.a*(1-r.a))/o;var u=(r.b*r.a+i.b*i.a*(1-r.a))/o;return{r:s,g:l,b:u,a:o}}function dstOver(r,i){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;r.a*=a;var o=i.a+r.a-i.a*r.a;var s=(i.r*i.a+r.r*r.a*(1-i.a))/o;var l=(i.g*i.a+r.g*r.a*(1-i.a))/o;var u=(i.b*i.a+r.b*r.a*(1-i.a))/o;return{r:s,g:l,b:u,a:o}}function multiply(r,i){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;r.a*=a;var o=i.a+r.a-i.a*r.a;var s=r.r*r.a;var l=r.g*r.a;var u=r.b*r.a;var v=i.r*i.a;var b=i.g*i.a;var y=i.b*i.a;var x=(s*v+s*(1-i.a)+v*(1-r.a))/o;var A=(l*b+l*(1-i.a)+b*(1-r.a))/o;var E=(u*y+u*(1-i.a)+y*(1-r.a))/o;return{r:x,g:A,b:E,a:o}}function add(r,i){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;r.a*=a;var o=i.a+r.a-i.a*r.a;var s=r.r*r.a;var l=r.g*r.a;var u=r.b*r.a;var v=i.r*i.a;var b=i.g*i.a;var y=i.b*i.a;var x=(s+v)/o;var A=(l+b)/o;var E=(u+y)/o;return{r:x,g:A,b:E,a:o}}function screen(r,i){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;r.a*=a;var o=i.a+r.a-i.a*r.a;var s=r.r*r.a;var l=r.g*r.a;var u=r.b*r.a;var v=i.r*i.a;var b=i.g*i.a;var y=i.b*i.a;var x=(s*i.a+v*r.a-s*v+s*(1-i.a)+v*(1-r.a))/o;var A=(l*i.a+b*r.a-l*b+l*(1-i.a)+b*(1-r.a))/o;var E=(u*i.a+y*r.a-u*y+u*(1-i.a)+y*(1-r.a))/o;return{r:x,g:A,b:E,a:o}}function overlay(r,i){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;r.a*=a;var o=i.a+r.a-i.a*r.a;var s=r.r*r.a;var l=r.g*r.a;var u=r.b*r.a;var v=i.r*i.a;var b=i.g*i.a;var y=i.b*i.a;var x=(2*v<=i.a?2*s*v+s*(1-i.a)+v*(1-r.a):s*(1+i.a)+v*(1+r.a)-2*v*s-i.a*r.a)/o;var A=(2*b<=i.a?2*l*b+l*(1-i.a)+b*(1-r.a):l*(1+i.a)+b*(1+r.a)-2*b*l-i.a*r.a)/o;var E=(2*y<=i.a?2*u*y+u*(1-i.a)+y*(1-r.a):u*(1+i.a)+y*(1+r.a)-2*y*u-i.a*r.a)/o;return{r:x,g:A,b:E,a:o}}function darken(r,i){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;r.a*=a;var o=i.a+r.a-i.a*r.a;var s=r.r*r.a;var l=r.g*r.a;var u=r.b*r.a;var v=i.r*i.a;var b=i.g*i.a;var y=i.b*i.a;var x=(Math.min(s*i.a,v*r.a)+s*(1-i.a)+v*(1-r.a))/o;var A=(Math.min(l*i.a,b*r.a)+l*(1-i.a)+b*(1-r.a))/o;var E=(Math.min(u*i.a,y*r.a)+u*(1-i.a)+y*(1-r.a))/o;return{r:x,g:A,b:E,a:o}}function lighten(r,i){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;r.a*=a;var o=i.a+r.a-i.a*r.a;var s=r.r*r.a;var l=r.g*r.a;var u=r.b*r.a;var v=i.r*i.a;var b=i.g*i.a;var y=i.b*i.a;var x=(Math.max(s*i.a,v*r.a)+s*(1-i.a)+v*(1-r.a))/o;var A=(Math.max(l*i.a,b*r.a)+l*(1-i.a)+b*(1-r.a))/o;var E=(Math.max(u*i.a,y*r.a)+u*(1-i.a)+y*(1-r.a))/o;return{r:x,g:A,b:E,a:o}}function hardLight(r,i){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;r.a*=a;var o=i.a+r.a-i.a*r.a;var s=r.r*r.a;var l=r.g*r.a;var u=r.b*r.a;var v=i.r*i.a;var b=i.g*i.a;var y=i.b*i.a;var x=(2*s<=r.a?2*s*v+s*(1-i.a)+v*(1-r.a):s*(1+i.a)+v*(1+r.a)-2*v*s-i.a*r.a)/o;var A=(2*l<=r.a?2*l*b+l*(1-i.a)+b*(1-r.a):l*(1+i.a)+b*(1+r.a)-2*b*l-i.a*r.a)/o;var E=(2*u<=r.a?2*u*y+u*(1-i.a)+y*(1-r.a):u*(1+i.a)+y*(1+r.a)-2*y*u-i.a*r.a)/o;return{r:x,g:A,b:E,a:o}}function difference(r,i){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;r.a*=a;var o=i.a+r.a-i.a*r.a;var s=r.r*r.a;var l=r.g*r.a;var u=r.b*r.a;var v=i.r*i.a;var b=i.g*i.a;var y=i.b*i.a;var x=(s+v-2*Math.min(s*i.a,v*r.a))/o;var A=(l+b-2*Math.min(l*i.a,b*r.a))/o;var E=(u+y-2*Math.min(u*i.a,y*r.a))/o;return{r:x,g:A,b:E,a:o}}function exclusion(r,i){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;r.a*=a;var o=i.a+r.a-i.a*r.a;var s=r.r*r.a;var l=r.g*r.a;var u=r.b*r.a;var v=i.r*i.a;var b=i.g*i.a;var y=i.b*i.a;var x=(s*i.a+v*r.a-2*s*v+s*(1-i.a)+v*(1-r.a))/o;var A=(l*i.a+b*r.a-2*l*b+l*(1-i.a)+b*(1-r.a))/o;var E=(u*i.a+y*r.a-2*u*y+u*(1-i.a)+y*(1-r.a))/o;return{r:x,g:A,b:E,a:o}}},5021:(r,i,a)=>{"use strict";var o=a(2914);Object.defineProperty(i,"__esModule",{value:true});i["default"]=composite;var s=a(9801);var l=o(a(3410));var u=o(a(9460));function composite(r,i,a){var o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};var v=arguments.length>4?arguments[4]:undefined;if(typeof o==="function"){v=o;o={}}if(!(r instanceof this.constructor)){return s.throwError.call(this,"The source must be a Jimp image",v)}if(typeof i!=="number"||typeof a!=="number"){return s.throwError.call(this,"x and y must be numbers",v)}var b=o,y=b.mode,x=b.opacitySource,A=b.opacityDest;if(!y){y=l.BLEND_SOURCE_OVER}if(typeof x!=="number"||x<0||x>1){x=1}if(typeof A!=="number"||A<0||A>1){A=1}var E=u[y];i=Math.round(i);a=Math.round(a);var M=this;if(A!==1){M.opacity(A)}r.scanQuiet(0,0,r.bitmap.width,r.bitmap.height,(function(r,o,s){var u=M.getPixelIndex(i+r,a+o,l.EDGE_CROP);var v=E({r:this.bitmap.data[s+0]/255,g:this.bitmap.data[s+1]/255,b:this.bitmap.data[s+2]/255,a:this.bitmap.data[s+3]/255},{r:M.bitmap.data[u+0]/255,g:M.bitmap.data[u+1]/255,b:M.bitmap.data[u+2]/255,a:M.bitmap.data[u+3]/255},x);M.bitmap.data[u+0]=this.constructor.limit255(v.r*255);M.bitmap.data[u+1]=this.constructor.limit255(v.g*255);M.bitmap.data[u+2]=this.constructor.limit255(v.b*255);M.bitmap.data[u+3]=this.constructor.limit255(v.a*255)}));if((0,s.isNodePattern)(v)){v.call(this,null,this)}return this}r.exports=i.default},3410:(r,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i.EDGE_CROP=i.EDGE_WRAP=i.EDGE_EXTEND=i.BLEND_EXCLUSION=i.BLEND_DIFFERENCE=i.BLEND_HARDLIGHT=i.BLEND_LIGHTEN=i.BLEND_DARKEN=i.BLEND_OVERLAY=i.BLEND_SCREEN=i.BLEND_ADD=i.BLEND_MULTIPLY=i.BLEND_DESTINATION_OVER=i.BLEND_SOURCE_OVER=i.VERTICAL_ALIGN_BOTTOM=i.VERTICAL_ALIGN_MIDDLE=i.VERTICAL_ALIGN_TOP=i.HORIZONTAL_ALIGN_RIGHT=i.HORIZONTAL_ALIGN_CENTER=i.HORIZONTAL_ALIGN_LEFT=i.AUTO=void 0;var a=-1;i.AUTO=a;var o=1;i.HORIZONTAL_ALIGN_LEFT=o;var s=2;i.HORIZONTAL_ALIGN_CENTER=s;var l=4;i.HORIZONTAL_ALIGN_RIGHT=l;var u=8;i.VERTICAL_ALIGN_TOP=u;var v=16;i.VERTICAL_ALIGN_MIDDLE=v;var b=32;i.VERTICAL_ALIGN_BOTTOM=b;var y="srcOver";i.BLEND_SOURCE_OVER=y;var x="dstOver";i.BLEND_DESTINATION_OVER=x;var A="multiply";i.BLEND_MULTIPLY=A;var E="add";i.BLEND_ADD=E;var M="screen";i.BLEND_SCREEN=M;var L="overlay";i.BLEND_OVERLAY=L;var P="darken";i.BLEND_DARKEN=P;var T="lighten";i.BLEND_LIGHTEN=T;var I="hardLight";i.BLEND_HARDLIGHT=I;var O="difference";i.BLEND_DIFFERENCE=O;var S="exclusion";i.BLEND_EXCLUSION=S;var k=1;i.EDGE_EXTEND=k;var D=2;i.EDGE_WRAP=D;var z=3;i.EDGE_CROP=z},4164:(r,i,a)=>{"use strict";var o=a(2914);var s=a(2810);Object.defineProperty(i,"__esModule",{value:true});i.addConstants=addConstants;i.addJimpMethods=addJimpMethods;i.jimpEvMethod=jimpEvMethod;i.jimpEvChange=jimpEvChange;Object.defineProperty(i,"addType",{enumerable:true,get:function get(){return H.addType}});i["default"]=void 0;var l=s(a(5210));var u=s(a(6966));var v=s(a(6986));var b=s(a(6671));var y=s(a(1101));var x=s(a(7516));var A=s(a(1871));var E=s(a(9640));var M=s(a(7400));var L=s(a(8612));var P=s(a(7147));var T=s(a(1017));var I=s(a(2361));var O=a(9801);var S=s(a(4370));var k=s(a(191));var D=s(a(7129));var z=s(a(3959));var R=s(a(5338));var B=s(a(3581));var V=s(a(5021));var j=s(a(9818));var H=o(a(5219));var U=a(688);var _=o(a(3410));var G="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_";var J=[NaN,NaN];for(var Z=2;Z<65;Z++){var K=(0,S["default"])(S["default"].BIN,G.slice(0,Z))(new Array(64+1).join("1"));J.push(K.length)}function noop(){}function isArrayBuffer(r){return Object.prototype.toString.call(r).toLowerCase().indexOf("arraybuffer")>-1}function bufferFromArrayBuffer(r){var i=Buffer.alloc(r.byteLength);var a=new Uint8Array(r);for(var o=0;o<i.length;++o){i[o]=a[o]}return i}function loadFromURL(r,i){(0,B["default"])(r,(function(a,o,s){if(a){return i(a)}if("headers"in o&&"location"in o.headers){r.url=o.headers.location;return loadFromURL(r,i)}if((0,L["default"])(s)==="object"&&Buffer.isBuffer(s)){return i(null,s)}var l="Could not load Buffer from <"+r.url+"> "+"(HTTP: "+o.statusCode+")";return new Error(l)}))}function loadBufferFromPath(r,i){if(P["default"]&&typeof P["default"].readFile==="function"&&!r.match(/^(http|ftp)s?:\/\/./)){P["default"].readFile(r,i)}else{loadFromURL({url:r},i)}}function isRawRGBAData(r){return r&&(0,L["default"])(r)==="object"&&typeof r.width==="number"&&typeof r.height==="number"&&(Buffer.isBuffer(r.data)||r.data instanceof Uint8Array||typeof Uint8ClampedArray==="function"&&r.data instanceof Uint8ClampedArray)&&(r.data.length===r.width*r.height*4||r.data.length===r.width*r.height*3)}function makeRGBABufferFromRGB(r){if(r.length%3!==0){throw new Error("Buffer length is incorrect")}var i=Buffer.allocUnsafe(r.length/3*4);var a=0;for(var o=0;o<r.length;o++){i[a]=r[o];if((o+1)%3===0){i[++a]=255}a++}return i}var Q={data:null,width:null,height:null};var $=function(r){(0,E["default"])(Jimp,r);function Jimp(){var r;for(var i=arguments.length,a=new Array(i),o=0;o<i;o++){a[o]=arguments[o]}(0,v["default"])(this,Jimp);r=(0,y["default"])(this,(0,x["default"])(Jimp).call(this));(0,M["default"])((0,A["default"])(r),"bitmap",Q);(0,M["default"])((0,A["default"])(r),"_background",0);(0,M["default"])((0,A["default"])(r),"_originalMime",Jimp.MIME_PNG);(0,M["default"])((0,A["default"])(r),"_exif",null);(0,M["default"])((0,A["default"])(r),"_rgba",true);(0,M["default"])((0,A["default"])(r),"writeAsync",(function(i){return(0,j["default"])(r.write,(0,A["default"])(r),i)}));(0,M["default"])((0,A["default"])(r),"getBase64Async",(function(i){return(0,j["default"])(r.getBase64,(0,A["default"])(r),i)}));(0,M["default"])((0,A["default"])(r),"getBuffer",U.getBuffer);(0,M["default"])((0,A["default"])(r),"getBufferAsync",U.getBufferAsync);(0,M["default"])((0,A["default"])(r),"getPixelColour",r.getPixelColor);(0,M["default"])((0,A["default"])(r),"setPixelColour",r.setPixelColor);var s=(0,A["default"])(r);var l=noop;if(isArrayBuffer(a[0])){a[0]=bufferFromArrayBuffer(a[0])}function finish(){for(var r=arguments.length,i=new Array(r),a=0;a<r;a++){i[a]=arguments[a]}var o=i[0];var u=o||{};u.methodName="constructor";setTimeout((function(){var r;if(o&&l===noop){s.emitError("constructor",o)}else if(!o){s.emitMulti("constructor","initialized")}(r=l).call.apply(r,[s].concat(i))}),1)}if(typeof a[0]==="number"&&typeof a[1]==="number"||parseInt(a[0],10)&&parseInt(a[1],10)){var u=parseInt(a[0],10);var b=parseInt(a[1],10);l=a[2];if(typeof a[2]==="number"){r._background=a[2];l=a[3]}if(typeof a[2]==="string"){r._background=Jimp.cssColorToHex(a[2]);l=a[3]}if(typeof l==="undefined"){l=noop}if(typeof l!=="function"){return(0,y["default"])(r,O.throwError.call((0,A["default"])(r),"cb must be a function",finish))}r.bitmap={data:Buffer.alloc(u*b*4),width:u,height:b};for(var E=0;E<r.bitmap.data.length;E+=4){r.bitmap.data.writeUInt32BE(r._background,E)}finish(null,(0,A["default"])(r))}else if((0,L["default"])(a[0])==="object"&&a[0].url){l=a[1]||noop;if(typeof l!=="function"){return(0,y["default"])(r,O.throwError.call((0,A["default"])(r),"cb must be a function",finish))}loadFromURL(a[0],(function(i,o){if(i){return O.throwError.call((0,A["default"])(r),i,finish)}r.parseBitmap(o,a[0].url,finish)}))}else if(a[0]instanceof Jimp){var P=a[0];l=a[1];if(typeof l==="undefined"){l=noop}if(typeof l!=="function"){return(0,y["default"])(r,O.throwError.call((0,A["default"])(r),"cb must be a function",finish))}r.bitmap={data:Buffer.from(P.bitmap.data),width:P.bitmap.width,height:P.bitmap.height};r._quality=P._quality;r._deflateLevel=P._deflateLevel;r._deflateStrategy=P._deflateStrategy;r._filterType=P._filterType;r._rgba=P._rgba;r._background=P._background;r._originalMime=P._originalMime;finish(null,(0,A["default"])(r))}else if(isRawRGBAData(a[0])){var T=a[0];l=a[1]||noop;var I=T.width*T.height*4===T.data.length;var S=I?Buffer.from(T.data):makeRGBABufferFromRGB(T.data);r.bitmap={data:S,width:T.width,height:T.height};finish(null,(0,A["default"])(r))}else if(typeof a[0]==="string"){var k=a[0];l=a[1];if(typeof l==="undefined"){l=noop}if(typeof l!=="function"){return(0,y["default"])(r,O.throwError.call((0,A["default"])(r),"cb must be a function",finish))}loadBufferFromPath(k,(function(i,a){if(i){return O.throwError.call((0,A["default"])(r),i,finish)}r.parseBitmap(a,k,finish)}))}else if((0,L["default"])(a[0])==="object"&&Buffer.isBuffer(a[0])){var D=a[0];l=a[1];if(typeof l!=="function"){return(0,y["default"])(r,O.throwError.call((0,A["default"])(r),"cb must be a function",finish))}r.parseBitmap(D,null,finish)}else{l=a[a.length-1];if(typeof l!=="function"){l=a[a.length-2];if(typeof l!=="function"){l=noop}}var z=Jimp.__extraConstructors.find((function(r){return r.test.apply(r,a)}));if(z){new Promise((function(i,o){var s;return(s=z.run).call.apply(s,[(0,A["default"])(r),i,o].concat(a))})).then((function(){return finish(null,(0,A["default"])(r))}))["catch"](finish)}else{return(0,y["default"])(r,O.throwError.call((0,A["default"])(r),"No matching constructor overloading was found. "+"Please see the docs for how to call the Jimp constructor.",finish))}}return r}(0,b["default"])(Jimp,[{key:"parseBitmap",value:function parseBitmap(r,i,a){U.parseBitmap.call(this,r,null,a)}},{key:"rgba",value:function rgba(r,i){if(typeof r!=="boolean"){return O.throwError.call(this,"bool must be a boolean, true for RGBA or false for RGB",i)}this._rgba=r;if((0,O.isNodePattern)(i)){i.call(this,null,this)}return this}},{key:"emitMulti",value:function emitMulti(r,i){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};a=Object.assign(a,{methodName:r,eventName:i});this.emit("any",a);if(r){this.emit(r,a)}this.emit(i,a)}},{key:"emitError",value:function emitError(r,i){this.emitMulti(r,"error",i)}},{key:"getHeight",value:function getHeight(){return this.bitmap.height}},{key:"getWidth",value:function getWidth(){return this.bitmap.width}},{key:"inspect",value:function inspect(){return"<Jimp "+(this.bitmap===Q?"pending...":this.bitmap.width+"x"+this.bitmap.height)+">"}},{key:"toString",value:function toString(){return"[object Jimp]"}},{key:"getMIME",value:function getMIME(){var r=this._originalMime||Jimp.MIME_PNG;return r}},{key:"getExtension",value:function getExtension(){var r=this.getMIME();return H.getExtension(r)}},{key:"write",value:function write(r,i){var a=this;if(!P["default"]||!P["default"].createWriteStream){throw new Error("Cant access the filesystem. You can use the getBase64 method.")}if(typeof r!=="string"){return O.throwError.call(this,"path must be a string",i)}if(typeof i==="undefined"){i=noop}if(typeof i!=="function"){return O.throwError.call(this,"cb must be a function",i)}var o=H.getType(r)||this.getMIME();var s=T["default"].parse(r);if(s.dir){k["default"].sync(s.dir)}this.getBuffer(o,(function(o,s){if(o){return O.throwError.call(a,o,i)}var l=P["default"].createWriteStream(r);l.on("open",(function(){l.write(s);l.end()})).on("error",(function(r){return O.throwError.call(a,r,i)}));l.on("finish",(function(){i.call(a,null,a)}))}));return this}},{key:"getBase64",value:function getBase64(r,i){if(r===Jimp.AUTO){r=this.getMIME()}if(typeof r!=="string"){return O.throwError.call(this,"mime must be a string",i)}if(typeof i!=="function"){return O.throwError.call(this,"cb must be a function",i)}this.getBuffer(r,(function(a,o){if(a){return O.throwError.call(this,a,i)}var s="data:"+r+";base64,"+o.toString("base64");i.call(this,null,s)}));return this}},{key:"hash",value:function hash(r,i){r=r||64;if(typeof r==="function"){i=r;r=64}if(typeof r!=="number"){return O.throwError.call(this,"base must be a number",i)}if(r<2||r>64){return O.throwError.call(this,"base must be a number between 2 and 64",i)}var hash=this.pHash();hash=(0,S["default"])(S["default"].BIN,G.slice(0,r))(hash);while(hash.length<J[r]){hash="0"+hash}if((0,O.isNodePattern)(i)){i.call(this,null,hash)}return hash}},{key:"pHash",value:function pHash(){var pHash=new R["default"];return pHash.getHash(this)}},{key:"distanceFromHash",value:function distanceFromHash(r){var i=new R["default"];var a=i.getHash(this);return i.distance(a,r)}},{key:"getPixelIndex",value:function getPixelIndex(r,i,a,o){var s;var l;if(typeof a==="function"&&typeof o==="undefined"){o=a;a=null}if(!a){a=Jimp.EDGE_EXTEND}if(typeof r!=="number"||typeof i!=="number"){return O.throwError.call(this,"x and y must be numbers",o)}r=Math.round(r);i=Math.round(i);s=r;l=i;if(a===Jimp.EDGE_EXTEND){if(r<0)s=0;if(r>=this.bitmap.width)s=this.bitmap.width-1;if(i<0)l=0;if(i>=this.bitmap.height)l=this.bitmap.height-1}if(a===Jimp.EDGE_WRAP){if(r<0){s=this.bitmap.width+r}if(r>=this.bitmap.width){s=r%this.bitmap.width}if(i<0){s=this.bitmap.height+i}if(i>=this.bitmap.height){l=i%this.bitmap.height}}var u=this.bitmap.width*l+s<<2;if(s<0||s>=this.bitmap.width){u=-1}if(l<0||l>=this.bitmap.height){u=-1}if((0,O.isNodePattern)(o)){o.call(this,null,u)}return u}},{key:"getPixelColor",value:function getPixelColor(r,i,a){if(typeof r!=="number"||typeof i!=="number")return O.throwError.call(this,"x and y must be numbers",a);r=Math.round(r);i=Math.round(i);var o=this.getPixelIndex(r,i);var s=this.bitmap.data.readUInt32BE(o);if((0,O.isNodePattern)(a)){a.call(this,null,s)}return s}},{key:"setPixelColor",value:function setPixelColor(r,i,a,o){if(typeof r!=="number"||typeof i!=="number"||typeof a!=="number")return O.throwError.call(this,"hex, x and y must be numbers",o);i=Math.round(i);a=Math.round(a);var s=this.getPixelIndex(i,a);this.bitmap.data.writeUInt32BE(r,s);if((0,O.isNodePattern)(o)){o.call(this,null,this)}return this}},{key:"hasAlpha",value:function hasAlpha(){for(var r=0;r<this.bitmap.height;r++){for(var i=0;i<this.bitmap.width;i++){var a=this.bitmap.width*r+i<<2;var o=this.bitmap.data[a+3];if(o!==255){return true}}}return false}},{key:"scanIterator",value:function scanIterator(r,i,a,o){if(typeof r!=="number"||typeof i!=="number"){return O.throwError.call(this,"x and y must be numbers")}if(typeof a!=="number"||typeof o!=="number"){return O.throwError.call(this,"w and h must be numbers")}return(0,O.scanIterator)(this,r,i,a,o)}}]);return Jimp}(I["default"]);function addConstants(r){var i=arguments.length>1&&arguments[1]!==undefined?arguments[1]:$;Object.entries(r).forEach((function(r){var a=(0,u["default"])(r,2),o=a[0],s=a[1];i[o]=s}))}function addJimpMethods(r){var i=arguments.length>1&&arguments[1]!==undefined?arguments[1]:$;Object.entries(r).forEach((function(r){var a=(0,u["default"])(r,2),o=a[0],s=a[1];i.prototype[o]=s}))}addConstants(_);addJimpMethods({composite:V["default"]});$.__extraConstructors=[];$.appendConstructorOption=function(r,i,a){$.__extraConstructors.push({name:r,test:i,run:a})};$.read=function(){for(var r=arguments.length,i=new Array(r),a=0;a<r;a++){i[a]=arguments[a]}return new Promise((function(r,a){(0,l["default"])($,i.concat([function(i,o){if(i)a(i);else r(o)}]))}))};$.create=$.read;$.rgbaToInt=function(r,i,a,o,s){if(typeof r!=="number"||typeof i!=="number"||typeof a!=="number"||typeof o!=="number"){return O.throwError.call(this,"r, g, b and a must be numbers",s)}if(r<0||r>255){return O.throwError.call(this,"r must be between 0 and 255",s)}if(i<0||i>255){O.throwError.call(this,"g must be between 0 and 255",s)}if(a<0||a>255){return O.throwError.call(this,"b must be between 0 and 255",s)}if(o<0||o>255){return O.throwError.call(this,"a must be between 0 and 255",s)}r=Math.round(r);a=Math.round(a);i=Math.round(i);o=Math.round(o);var l=r*Math.pow(256,3)+i*Math.pow(256,2)+a*Math.pow(256,1)+o*Math.pow(256,0);if((0,O.isNodePattern)(s)){s.call(this,null,l)}return l};$.intToRGBA=function(r,i){if(typeof r!=="number"){return O.throwError.call(this,"i must be a number",i)}var a={};a.r=Math.floor(r/Math.pow(256,3));a.g=Math.floor((r-a.r*Math.pow(256,3))/Math.pow(256,2));a.b=Math.floor((r-a.r*Math.pow(256,3)-a.g*Math.pow(256,2))/Math.pow(256,1));a.a=Math.floor((r-a.r*Math.pow(256,3)-a.g*Math.pow(256,2)-a.b*Math.pow(256,1))/Math.pow(256,0));if((0,O.isNodePattern)(i)){i.call(this,null,a)}return a};$.cssColorToHex=function(r){r=r||0;if(typeof r==="number")return Number(r);return parseInt((0,z["default"])(r).toHex8(),16)};$.limit255=function(r){r=Math.max(r,0);r=Math.min(r,255);return r};$.diff=function(r,i){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:.1;if(!(r instanceof $)||!(i instanceof $))return O.throwError.call(this,"img1 and img2 must be an Jimp images");var o=r.bitmap;var s=i.bitmap;if(o.width!==s.width||o.height!==s.height){if(o.width*o.height>s.width*s.height){r=r.cloneQuiet().resize(s.width,s.height)}else{i=i.cloneQuiet().resize(o.width,o.height)}}if(typeof a!=="number"||a<0||a>1){return O.throwError.call(this,"threshold must be a number between 0 and 1")}var l=new $(o.width,o.height,4294967295);var u=(0,D["default"])(o.data,s.data,l.bitmap.data,l.bitmap.width,l.bitmap.height,{threshold:a});return{percent:u/(l.bitmap.width*l.bitmap.height),image:l}};$.distance=function(r,i){var a=new R["default"];var o=a.getHash(r);var s=a.getHash(i);return a.distance(o,s)};$.compareHashes=function(r,i){var a=new R["default"];return a.distance(r,i)};$.colorDiff=function(r,i){var a=function pow(r){return Math.pow(r,2)};var o=Math.max;var s=255*255*3;if(r.a!==0&&!r.a){r.a=255}if(i.a!==0&&!i.a){i.a=255}return(o(a(r.r-i.r),a(r.r-i.r-r.a+i.a))+o(a(r.g-i.g),a(r.g-i.g-r.a+i.a))+o(a(r.b-i.b),a(r.b-i.b-r.a+i.a)))/s};function jimpEvMethod(r,i,a){var o="before-"+i;var s=i.replace(/e$/,"")+"ed";$.prototype[r]=function(){var i;for(var l=arguments.length,u=new Array(l),v=0;v<l;v++){u[v]=arguments[v]}var b=u[a.length-1];var y=this;if(typeof b==="function"){i=function wrappedCb(){for(var i=arguments.length,a=new Array(i),o=0;o<i;o++){a[o]=arguments[o]}var l=a[0],u=a[1];if(l){y.emitError(r,l)}else{y.emitMulti(r,s,(0,M["default"])({},r,u))}b.apply(this,a)};u[u.length-1]=i}else{i=false}this.emitMulti(r,o);var x;try{x=a.apply(this,u);if(!i){this.emitMulti(r,s,(0,M["default"])({},r,x))}}catch(i){i.methodName=r;this.emitError(r,i)}return x};$.prototype[r+"Quiet"]=a}jimpEvMethod("clone","clone",(function(r){var i=new $(this);if((0,O.isNodePattern)(r)){r.call(i,null,i)}return i}));function jimpEvChange(r,i){jimpEvMethod(r,"change",i)}jimpEvChange("background",(function(r,i){if(typeof r!=="number"){return O.throwError.call(this,"hex must be a hexadecimal rgba value",i)}this._background=r;if((0,O.isNodePattern)(i)){i.call(this,null,this)}return this}));jimpEvChange("scan",(function(r,i,a,o,s,l){if(typeof r!=="number"||typeof i!=="number"){return O.throwError.call(this,"x and y must be numbers",l)}if(typeof a!=="number"||typeof o!=="number"){return O.throwError.call(this,"w and h must be numbers",l)}if(typeof s!=="function"){return O.throwError.call(this,"f must be a function",l)}var u=(0,O.scan)(this,r,i,a,o,s);if((0,O.isNodePattern)(l)){l.call(this,null,u)}return u}));if(process.env.ENVIRONMENT==="BROWSER"){var tt;if(typeof window!=="undefined"&&(typeof window==="undefined"?"undefined":(0,L["default"])(window))==="object"){tt=window}if(typeof self!=="undefined"&&(typeof self==="undefined"?"undefined":(0,L["default"])(self))==="object"){tt=self}tt.Jimp=$;tt.Buffer=Buffer}var et=$;i["default"]=et},5338:r=>{"use strict";function ImagePHash(r,i){this.size=this.size||r;this.smallerSize=this.smallerSize||i;initCoefficients(this.size)}ImagePHash.prototype.size=32;ImagePHash.prototype.smallerSize=8;ImagePHash.prototype.distance=function(r,i){var a=0;for(var o=0;o<r.length;o++){if(r[o]!==i[o]){a++}}return a/r.length};ImagePHash.prototype.getHash=function(r){r=r.clone().resize(this.size,this.size);r.grayscale();var i=[];for(var a=0;a<r.bitmap.width;a++){i[a]=[];for(var o=0;o<r.bitmap.height;o++){i[a][o]=intToRGBA(r.getPixelColor(a,o)).b}}var s=applyDCT(i,this.size);var l=0;for(var u=0;u<this.smallerSize;u++){for(var v=0;v<this.smallerSize;v++){l+=s[u][v]}}var b=l/(this.smallerSize*this.smallerSize);var y="";for(var x=0;x<this.smallerSize;x++){for(var A=0;A<this.smallerSize;A++){y+=s[x][A]>b?"1":"0"}}return y};function intToRGBA(r){var i={};i.r=Math.floor(r/Math.pow(256,3));i.g=Math.floor((r-i.r*Math.pow(256,3))/Math.pow(256,2));i.b=Math.floor((r-i.r*Math.pow(256,3)-i.g*Math.pow(256,2))/Math.pow(256,1));i.a=Math.floor((r-i.r*Math.pow(256,3)-i.g*Math.pow(256,2)-i.b*Math.pow(256,1))/Math.pow(256,0));return i}var i=[];function initCoefficients(r){for(var a=1;a<r;a++){i[a]=1}i[0]=1/Math.sqrt(2)}function applyDCT(r,a){var o=a;var s=[];for(var l=0;l<o;l++){s[l]=[];for(var u=0;u<o;u++){var v=0;for(var b=0;b<o;b++){for(var y=0;y<o;y++){v+=Math.cos((2*b+1)/(2*o)*l*Math.PI)*Math.cos((2*y+1)/(2*o)*u*Math.PI)*r[b][y]}}v*=i[l]*i[u]/4;s[l][u]=v}}return s}r.exports=ImagePHash},3581:(r,i,a)=>{"use strict";var o=a(2810);var s=o(a(7400));var l=o(a(5533));function ownKeys(r,i){var a=Object.keys(r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(r);if(i)o=o.filter((function(i){return Object.getOwnPropertyDescriptor(r,i).enumerable}));a.push.apply(a,o)}return a}function _objectSpread(r){for(var i=1;i<arguments.length;i++){var a=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(a,true).forEach((function(i){(0,s["default"])(r,i,a[i])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(r,Object.getOwnPropertyDescriptors(a))}else{ownKeys(a).forEach((function(i){Object.defineProperty(r,i,Object.getOwnPropertyDescriptor(a,i))}))}}return r}if(process.browser||process.env.ENVIRONMENT==="BROWSER"||typeof process.versions.electron!=="undefined"&&process.type==="renderer"&&typeof XMLHttpRequest==="function"){r.exports=function(r,i){var a=new XMLHttpRequest;a.open("GET",r.url,true);a.responseType="arraybuffer";a.addEventListener("load",(function(){if(a.status<400){try{var o=Buffer.from(this.response);i(null,a,o)}catch(a){return i(new Error("Response is not a buffer for url "+r.url+". Error: "+a.message))}}else{i(new Error("HTTP Status "+a.status+" for url "+r.url))}}));a.addEventListener("error",(function(r){i(r)}));a.send()}}else{r.exports=function(r,i){var o=(0,l["default"])({},r);var s=a(1293);s(_objectSpread({compression:true},o),(function(r,a){if(r===null){i(null,a,a.body)}else{i(r)}}))}}},688:(r,i,a)=>{"use strict";var o=a(2914);var s=a(2810);Object.defineProperty(i,"__esModule",{value:true});i.parseBitmap=parseBitmap;i.getBuffer=getBuffer;i.getBufferAsync=getBufferAsync;var l=s(a(6966));var u=s(a(9936));var v=s(a(575));var b=a(9801);var y=o(a(3410));var x=o(a(5219));var A=s(a(9818));function getMIMEFromBuffer(r,i){var a=(0,u["default"])(r);if(a){return a.mime}if(i){return x.getType(i)}return null}function getExifOrientation(r){return r._exif&&r._exif.tags&&r._exif.tags.Orientation||1}function getExifOrientationTransformation(r){var i=r.getWidth();var a=r.getHeight();switch(getExifOrientation(r)){case 1:return null;case 2:return function(r,a){return[i-r-1,a]};case 3:return function(r,o){return[i-r-1,a-o-1]};case 4:return function(r,i){return[r,a-i-1]};case 5:return function(r,i){return[i,r]};case 6:return function(r,i){return[i,a-r-1]};case 7:return function(r,o){return[i-o-1,a-r-1]};case 8:return function(r,a){return[i-a-1,r]};default:return null}}function transformBitmap(r,i,a,o){var s=r.bitmap.data;var u=r.bitmap.width;var v=Buffer.alloc(s.length);for(var b=0;b<i;b++){for(var y=0;y<a;y++){var x=o(b,y),A=(0,l["default"])(x,2),E=A[0],M=A[1];var L=i*y+b<<2;var P=u*M+E<<2;var T=s.readUInt32BE(P);v.writeUInt32BE(T,L)}}r.bitmap.data=v;r.bitmap.width=i;r.bitmap.height=a}function exifRotate(r){if(getExifOrientation(r)<2)return;var i=getExifOrientationTransformation(r);var a=getExifOrientation(r)>4;var o=a?r.bitmap.height:r.bitmap.width;var s=a?r.bitmap.width:r.bitmap.height;transformBitmap(r,o,s,i)}function parseBitmap(r,i,a){var o=getMIMEFromBuffer(r,i);if(typeof o!=="string"){return a(new Error("Could not find MIME for Buffer <"+i+">"))}this._originalMime=o.toLowerCase();try{var s=this.getMIME();if(this.constructor.decoders[s]){this.bitmap=this.constructor.decoders[s](r)}else{return b.throwError.call(this,"Unsupported MIME type: "+s,a)}}catch(r){return a.call(this,r,this)}try{this._exif=v["default"].create(r).parse();exifRotate(this)}catch(r){}a.call(this,null,this);return this}function compositeBitmapOverBackground(r,i){return new r(i.bitmap.width,i.bitmap.height,i._background).composite(i,0,0).bitmap}function getBuffer(r,i){if(r===y.AUTO){r=this.getMIME()}if(typeof r!=="string"){return b.throwError.call(this,"mime must be a string",i)}if(typeof i!=="function"){return b.throwError.call(this,"cb must be a function",i)}r=r.toLowerCase();if(this._rgba&&this.constructor.hasAlpha[r]){this.bitmap.data=Buffer.from(this.bitmap.data)}else{this.bitmap.data=compositeBitmapOverBackground(this.constructor,this).data}if(this.constructor.encoders[r]){var a=this.constructor.encoders[r](this);i.call(this,null,a)}else{i.call(this,"Unsupported MIME type: "+r)}return this}function getBufferAsync(r){return(0,A["default"])(getBuffer,this,r)}},5219:(r,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i.getExtension=i.getType=i.addType=void 0;var a={};var o=function findType(r){return Object.entries(a).find((function(i){return i[1].includes(r)}))||[]};var s=function addType(r,i){a[r]=i};i.addType=s;var l=function getType(r){var i=r.split("/").slice(-1);var a=i[i.length-1].split(".").pop();var s=o(a);return s[0]};i.getType=l;var u=function getExtension(r){return(a[r.toLowerCase()]||[])[0]};i.getExtension=u},9818:(r,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var a=function promisify(r,i){for(var a=arguments.length,o=new Array(a>2?a-2:0),s=2;s<a;s++){o[s-2]=arguments[s]}return new Promise((function(a,s){o.push((function(r,i){if(r){s(r)}a(i)}));r.bind(i).apply(void 0,o)}))};var o=a;i["default"]=o;r.exports=i.default},3706:(r,i,a)=>{"use strict";var o=a(2914);var s=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=configure;var l=s(a(2653));var u=s(a(7400));var v=s(a(6966));var b=o(a(4164));function ownKeys(r,i){var a=Object.keys(r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(r);if(i)o=o.filter((function(i){return Object.getOwnPropertyDescriptor(r,i).enumerable}));a.push.apply(a,o)}return a}function _objectSpread(r){for(var i=1;i<arguments.length;i++){var a=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(a,true).forEach((function(i){(0,u["default"])(r,i,a[i])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(r,Object.getOwnPropertyDescriptors(a))}else{ownKeys(a).forEach((function(i){Object.defineProperty(r,i,Object.getOwnPropertyDescriptor(a,i))}))}}return r}function configure(r){var i=arguments.length>1&&arguments[1]!==undefined?arguments[1]:b["default"];var a={hasAlpha:{},encoders:{},decoders:{},class:{},constants:{}};function addToConfig(r){Object.entries(r).forEach((function(r){var i=(0,v["default"])(r,2),o=i[0],s=i[1];a[o]=_objectSpread({},a[o],{},s)}))}function addImageType(r){var i=r();if(Array.isArray(i.mime)){b.addType.apply(void 0,(0,l["default"])(i.mime))}else{Object.entries(i.mime).forEach((function(r){return b.addType.apply(void 0,(0,l["default"])(r))}))}delete i.mime;addToConfig(i)}function addPlugin(r){var i=r(b.jimpEvChange)||{};if(!i["class"]&&!i.constants){addToConfig({class:i})}else{addToConfig(i)}}if(r.types){r.types.forEach(addImageType);i.decoders=_objectSpread({},i.decoders,{},a.decoders);i.encoders=_objectSpread({},i.encoders,{},a.encoders);i.hasAlpha=_objectSpread({},i.hasAlpha,{},a.hasAlpha)}if(r.plugins){r.plugins.forEach(addPlugin)}(0,b.addJimpMethods)(a["class"],i);(0,b.addConstants)(a.constants,i);return b["default"]}r.exports=i.default},8564:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var s=o(a(7400));var l=o(a(9063));var u=a(7509);var v="image/gif";var b=function _default(){return{mime:(0,s["default"])({},v,["gif"]),constants:{MIME_GIF:v},decoders:(0,s["default"])({},v,(function(r){var i=new l["default"].GifReader(r);var a=Buffer.alloc(i.width*i.height*4);i.decodeAndBlitFrameRGBA(0,a);return{data:a,width:i.width,height:i.height}})),encoders:(0,s["default"])({},v,(function(r){var i=new u.BitmapImage(r.bitmap);u.GifUtil.quantizeDekker(i,256);var a=new u.GifFrame(i);var o=new u.GifCodec;return o.encodeGif([a],{}).then((function(r){return r.buffer}))}))}};i["default"]=b;r.exports=i.default},1523:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var s=o(a(7400));var l=o(a(7199));var u=a(9801);var v="image/jpeg";var b=function _default(){return{mime:(0,s["default"])({},v,["jpeg","jpg","jpe"]),constants:{MIME_JPEG:v},decoders:(0,s["default"])({},v,l["default"].decode),encoders:(0,s["default"])({},v,(function(r){return l["default"].encode(r.bitmap,r._quality).data})),class:{_quality:100,quality:function quality(r,i){if(typeof r!=="number"){return u.throwError.call(this,"n must be a number",i)}if(r<0||r>100){return u.throwError.call(this,"n must be a number 0 - 100",i)}this._quality=Math.round(r);if((0,u.isNodePattern)(i)){i.call(this,null,this)}return this}}}};i["default"]=b;r.exports=i.default},8651:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var s=o(a(8612));var l=a(9801);var u=function _default(){return{blit:function blit(r,i,a,o,u,v,b,y){if(!(r instanceof this.constructor)){return l.throwError.call(this,"The source must be a Jimp image",y)}if(typeof i!=="number"||typeof a!=="number"){return l.throwError.call(this,"x and y must be numbers",y)}if(typeof o==="function"){y=o;o=0;u=0;v=r.bitmap.width;b=r.bitmap.height}else if((0,s["default"])(o)===(0,s["default"])(u)&&(0,s["default"])(u)===(0,s["default"])(v)&&(0,s["default"])(v)===(0,s["default"])(b)){o=o||0;u=u||0;v=v||r.bitmap.width;b=b||r.bitmap.height}else{return l.throwError.call(this,"srcx, srcy, srcw, srch must be numbers",y)}i=Math.round(i);a=Math.round(a);o=Math.round(o);u=Math.round(u);v=Math.round(v);b=Math.round(b);var x=this.bitmap.width;var A=this.bitmap.height;var E=this;r.scanQuiet(o,u,v,b,(function(r,s,l){var v=i+r-o;var b=a+s-u;if(v>=0&&b>=0&&x-v>0&&A-b>0){var y=E.getPixelIndex(v,b);var M={r:this.bitmap.data[l],g:this.bitmap.data[l+1],b:this.bitmap.data[l+2],a:this.bitmap.data[l+3]};var L={r:E.bitmap.data[y],g:E.bitmap.data[y+1],b:E.bitmap.data[y+2],a:E.bitmap.data[y+3]};E.bitmap.data[y]=(M.a*(M.r-L.r)-L.r+255>>8)+L.r;E.bitmap.data[y+1]=(M.a*(M.g-L.g)-L.g+255>>8)+L.g;E.bitmap.data[y+2]=(M.a*(M.b-L.b)-L.b+255>>8)+L.b;E.bitmap.data[y+3]=this.constructor.limit255(L.a+M.a)}}));if((0,l.isNodePattern)(y)){y.call(this,null,this)}return this}}};i["default"]=u;r.exports=i.default},2409:(r,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i.shgTable=i.mulTable=void 0;var a=[1,57,41,21,203,34,97,73,227,91,149,62,105,45,39,137,241,107,3,173,39,71,65,238,219,101,187,87,81,151,141,133,249,117,221,209,197,187,177,169,5,153,73,139,133,127,243,233,223,107,103,99,191,23,177,171,165,159,77,149,9,139,135,131,253,245,119,231,224,109,211,103,25,195,189,23,45,175,171,83,81,79,155,151,147,9,141,137,67,131,129,251,123,30,235,115,113,221,217,53,13,51,50,49,193,189,185,91,179,175,43,169,83,163,5,79,155,19,75,147,145,143,35,69,17,67,33,65,255,251,247,243,239,59,29,229,113,111,219,27,213,105,207,51,201,199,49,193,191,47,93,183,181,179,11,87,43,85,167,165,163,161,159,157,155,77,19,75,37,73,145,143,141,35,138,137,135,67,33,131,129,255,63,250,247,61,121,239,237,117,29,229,227,225,111,55,109,216,213,211,209,207,205,203,201,199,197,195,193,48,190,47,93,185,183,181,179,178,176,175,173,171,85,21,167,165,41,163,161,5,79,157,78,154,153,19,75,149,74,147,73,144,143,71,141,140,139,137,17,135,134,133,66,131,65,129,1];i.mulTable=a;var o=[0,9,10,10,14,12,14,14,16,15,16,15,16,15,15,17,18,17,12,18,16,17,17,19,19,18,19,18,18,19,19,19,20,19,20,20,20,20,20,20,15,20,19,20,20,20,21,21,21,20,20,20,21,18,21,21,21,21,20,21,17,21,21,21,22,22,21,22,22,21,22,21,19,22,22,19,20,22,22,21,21,21,22,22,22,18,22,22,21,22,22,23,22,20,23,22,22,23,23,21,19,21,21,21,23,23,23,22,23,23,21,23,22,23,18,22,23,20,22,23,23,23,21,22,20,22,21,22,24,24,24,24,24,22,21,24,23,23,24,21,24,23,24,22,24,24,22,24,24,22,23,24,24,24,20,23,22,23,24,24,24,24,24,24,24,23,21,23,22,23,24,24,24,22,24,24,24,23,22,24,24,25,23,25,25,23,24,25,25,24,22,25,25,25,24,23,24,25,25,25,25,25,25,25,25,25,25,25,25,23,25,23,24,25,25,25,25,25,25,25,25,25,24,22,25,25,23,25,25,20,24,25,24,25,25,22,24,25,24,25,24,25,25,24,25,25,25,25,22,25,25,25,24,25,24,25,18];i.shgTable=o},2902:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);var s=a(2409);var l=function _default(){return{blur:function blur(r,i){if(typeof r!=="number")return o.throwError.call(this,"r must be a number",i);if(r<1)return o.throwError.call(this,"r must be greater than 0",i);var a;var l;var u;var v;var b;var y;var x;var A;var E;var M;var L;var P;var T;var I;var O=this.bitmap.width-1;var S=this.bitmap.height-1;var k=r+1;var D=s.mulTable[r];var z=s.shgTable[r];var R=[];var B=[];var V=[];var j=[];var H=[];var U=[];var _=2;while(_-- >0){P=0;T=0;for(y=0;y<this.bitmap.height;y++){a=this.bitmap.data[T]*k;l=this.bitmap.data[T+1]*k;u=this.bitmap.data[T+2]*k;v=this.bitmap.data[T+3]*k;for(x=1;x<=r;x++){A=T+((x>O?O:x)<<2);a+=this.bitmap.data[A++];l+=this.bitmap.data[A++];u+=this.bitmap.data[A++];v+=this.bitmap.data[A]}for(b=0;b<this.bitmap.width;b++){R[P]=a;B[P]=l;V[P]=u;j[P]=v;if(y===0){H[b]=((A=b+k)<O?A:O)<<2;U[b]=(A=b-r)>0?A<<2:0}E=T+H[b];M=T+U[b];a+=this.bitmap.data[E++]-this.bitmap.data[M++];l+=this.bitmap.data[E++]-this.bitmap.data[M++];u+=this.bitmap.data[E++]-this.bitmap.data[M++];v+=this.bitmap.data[E]-this.bitmap.data[M];P++}T+=this.bitmap.width<<2}for(b=0;b<this.bitmap.width;b++){L=b;a=R[L]*k;l=B[L]*k;u=V[L]*k;v=j[L]*k;for(x=1;x<=r;x++){L+=x>S?0:this.bitmap.width;a+=R[L];l+=B[L];u+=V[L];v+=j[L]}P=b<<2;for(y=0;y<this.bitmap.height;y++){I=v*D>>>z;this.bitmap.data[P+3]=I;if(I>255){this.bitmap.data[P+3]=255}if(I>0){I=255/I;this.bitmap.data[P]=(a*D>>>z)*I;this.bitmap.data[P+1]=(l*D>>>z)*I;this.bitmap.data[P+2]=(u*D>>>z)*I}else{this.bitmap.data[P+2]=0;this.bitmap.data[P+1]=0;this.bitmap.data[P]=0}if(b===0){H[y]=((A=y+k)<S?A:S)*this.bitmap.width;U[y]=(A=y-r)>0?A*this.bitmap.width:0}E=b+H[y];M=b+U[y];a+=R[E]-R[M];l+=B[E]-B[M];u+=V[E]-V[M];v+=j[E]-j[M];P+=this.bitmap.width<<2}}}if((0,o.isNodePattern)(i)){i.call(this,null,this)}return this}}};i["default"]=l;r.exports=i.default},4656:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);var s=function _default(){return{circle:function circle(){var r=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var i=arguments.length>1?arguments[1]:undefined;if(typeof r==="function"){i=r;r={}}var a=r.radius||(this.bitmap.width>this.bitmap.height?this.bitmap.height:this.bitmap.width)/2;var s={x:typeof r.x==="number"?r.x:this.bitmap.width/2,y:typeof r.y==="number"?r.y:this.bitmap.height/2};this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(r,i,o){var l=Math.sqrt(Math.pow(r-s.x,2)+Math.pow(i-s.y,2));if(a-l<=0){this.bitmap.data[o+3]=0}else if(a-l<1){this.bitmap.data[o+3]=255*(a-l)}}));if((0,o.isNodePattern)(i)){i.call(this,null,this)}return this}}};i["default"]=s;r.exports=i.default},3013:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var s=o(a(2653));var l=o(a(3959));var u=a(9801);function applyKernel(r,i,a,o){var s=[0,0,0];var l=(i.length-1)/2;for(var u=0;u<i.length;u+=1){for(var v=0;v<i[u].length;v+=1){var b=r.getPixelIndex(a+u-l,o+v-l);s[0]+=r.bitmap.data[b]*i[u][v];s[1]+=r.bitmap.data[b+1]*i[u][v];s[2]+=r.bitmap.data[b+2]*i[u][v]}}return s}var v=function isDef(r){return typeof r!=="undefined"&&r!==null};function greyscale(r){this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(r,i,a){var o=parseInt(.2126*this.bitmap.data[a]+.7152*this.bitmap.data[a+1]+.0722*this.bitmap.data[a+2],10);this.bitmap.data[a]=o;this.bitmap.data[a+1]=o;this.bitmap.data[a+2]=o}));if((0,u.isNodePattern)(r)){r.call(this,null,this)}return this}function mix(r,i){var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:50;return{r:(i.r-r.r)*(a/100)+r.r,g:(i.g-r.g)*(a/100)+r.g,b:(i.b-r.b)*(a/100)+r.b}}function colorFn(r,i){var a=this;if(!r||!Array.isArray(r)){return u.throwError.call(this,"actions must be an array",i)}r=r.map((function(r){if(r.apply==="xor"||r.apply==="mix"){r.params[0]=(0,l["default"])(r.params[0]).toRgb()}return r}));this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(o,v,b){var y={r:a.bitmap.data[b],g:a.bitmap.data[b+1],b:a.bitmap.data[b+2]};var x=function colorModifier(r,i){return a.constructor.limit255(y[r]+i)};r.forEach((function(r){if(r.apply==="mix"){y=mix(y,r.params[0],r.params[1])}else if(r.apply==="tint"){y=mix(y,{r:255,g:255,b:255},r.params[0])}else if(r.apply==="shade"){y=mix(y,{r:0,g:0,b:0},r.params[0])}else if(r.apply==="xor"){y={r:y.r^r.params[0].r,g:y.g^r.params[0].g,b:y.b^r.params[0].b}}else if(r.apply==="red"){y.r=x("r",r.params[0])}else if(r.apply==="green"){y.g=x("g",r.params[0])}else if(r.apply==="blue"){y.b=x("b",r.params[0])}else{var o;if(r.apply==="hue"){r.apply="spin"}y=(0,l["default"])(y);if(!y[r.apply]){return u.throwError.call(a,"action "+r.apply+" not supported",i)}y=(o=y)[r.apply].apply(o,(0,s["default"])(r.params)).toRgb()}}));a.bitmap.data[b]=y.r;a.bitmap.data[b+1]=y.g;a.bitmap.data[b+2]=y.b}));if((0,u.isNodePattern)(i)){i.call(this,null,this)}return this}var b=function _default(){return{brightness:function brightness(r,i){if(typeof r!=="number"){return u.throwError.call(this,"val must be numbers",i)}if(r<-1||r>+1){return u.throwError.call(this,"val must be a number between -1 and +1",i)}this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(i,a,o){if(r<0){this.bitmap.data[o]=this.bitmap.data[o]*(1+r);this.bitmap.data[o+1]=this.bitmap.data[o+1]*(1+r);this.bitmap.data[o+2]=this.bitmap.data[o+2]*(1+r)}else{this.bitmap.data[o]=this.bitmap.data[o]+(255-this.bitmap.data[o])*r;this.bitmap.data[o+1]=this.bitmap.data[o+1]+(255-this.bitmap.data[o+1])*r;this.bitmap.data[o+2]=this.bitmap.data[o+2]+(255-this.bitmap.data[o+2])*r}}));if((0,u.isNodePattern)(i)){i.call(this,null,this)}return this},contrast:function contrast(r,i){if(typeof r!=="number"){return u.throwError.call(this,"val must be numbers",i)}if(r<-1||r>+1){return u.throwError.call(this,"val must be a number between -1 and +1",i)}var a=(r+1)/(1-r);function adjust(r){r=Math.floor(a*(r-127)+127);return r<0?0:r>255?255:r}this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(r,i,a){this.bitmap.data[a]=adjust(this.bitmap.data[a]);this.bitmap.data[a+1]=adjust(this.bitmap.data[a+1]);this.bitmap.data[a+2]=adjust(this.bitmap.data[a+2])}));if((0,u.isNodePattern)(i)){i.call(this,null,this)}return this},posterize:function posterize(r,i){if(typeof r!=="number"){return u.throwError.call(this,"n must be numbers",i)}if(r<2){r=2}this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(i,a,o){this.bitmap.data[o]=Math.floor(this.bitmap.data[o]/255*(r-1))/(r-1)*255;this.bitmap.data[o+1]=Math.floor(this.bitmap.data[o+1]/255*(r-1))/(r-1)*255;this.bitmap.data[o+2]=Math.floor(this.bitmap.data[o+2]/255*(r-1))/(r-1)*255}));if((0,u.isNodePattern)(i)){i.call(this,null,this)}return this},greyscale:greyscale,grayscale:greyscale,opacity:function opacity(r,i){if(typeof r!=="number")return u.throwError.call(this,"f must be a number",i);if(r<0||r>1)return u.throwError.call(this,"f must be a number from 0 to 1",i);this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(i,a,o){var s=this.bitmap.data[o+3]*r;this.bitmap.data[o+3]=s}));if((0,u.isNodePattern)(i)){i.call(this,null,this)}return this},sepia:function sepia(r){this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(r,i,a){var o=this.bitmap.data[a];var s=this.bitmap.data[a+1];var l=this.bitmap.data[a+2];o=o*.393+s*.769+l*.189;s=o*.349+s*.686+l*.168;l=o*.272+s*.534+l*.131;this.bitmap.data[a]=o<255?o:255;this.bitmap.data[a+1]=s<255?s:255;this.bitmap.data[a+2]=l<255?l:255}));if((0,u.isNodePattern)(r)){r.call(this,null,this)}return this},fade:function fade(r,i){if(typeof r!=="number"){return u.throwError.call(this,"f must be a number",i)}if(r<0||r>1){return u.throwError.call(this,"f must be a number from 0 to 1",i)}this.opacity(1-r);if((0,u.isNodePattern)(i)){i.call(this,null,this)}return this},convolution:function convolution(r,i,a){if(typeof i==="function"&&typeof a==="undefined"){a=i;i=null}if(!i){i=this.constructor.EDGE_EXTEND}var o=Buffer.from(this.bitmap.data);var s=r.length;var l=r[0].length;var v=Math.floor(s/2);var b=Math.floor(l/2);var y=-v;var x=-b;var A;var E;var M;var L;var P;var T;var I;var O;var S;var k;this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(a,s,l){L=0;M=0;E=0;for(var u=y;u<=v;u++){for(var D=x;D<=b;D++){O=a+D;S=s+u;A=r[u+v][D+b];k=this.getPixelIndex(O,S,i);if(k===-1){I=0;T=0;P=0}else{P=this.bitmap.data[k+0];T=this.bitmap.data[k+1];I=this.bitmap.data[k+2]}E+=A*P;M+=A*T;L+=A*I}}if(E<0){E=0}if(M<0){M=0}if(L<0){L=0}if(E>255){E=255}if(M>255){M=255}if(L>255){L=255}o[l+0]=E;o[l+1]=M;o[l+2]=L}));this.bitmap.data=o;if((0,u.isNodePattern)(a)){a.call(this,null,this)}return this},opaque:function opaque(r){this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(r,i,a){this.bitmap.data[a+3]=255}));if((0,u.isNodePattern)(r)){r.call(this,null,this)}return this},pixelate:function pixelate(r,i,a,o,s,l){if(typeof i==="function"){l=i;s=null;o=null;a=null;i=null}else{if(typeof r!=="number"){return u.throwError.call(this,"size must be a number",l)}if(v(i)&&typeof i!=="number"){return u.throwError.call(this,"x must be a number",l)}if(v(a)&&typeof a!=="number"){return u.throwError.call(this,"y must be a number",l)}if(v(o)&&typeof o!=="number"){return u.throwError.call(this,"w must be a number",l)}if(v(s)&&typeof s!=="number"){return u.throwError.call(this,"h must be a number",l)}}var b=[[1/16,2/16,1/16],[2/16,4/16,2/16],[1/16,2/16,1/16]];i=i||0;a=a||0;o=v(o)?o:this.bitmap.width-i;s=v(s)?s:this.bitmap.height-a;var y=this.cloneQuiet();this.scanQuiet(i,a,o,s,(function(i,a,o){i=r*Math.floor(i/r);a=r*Math.floor(a/r);var s=applyKernel(y,b,i,a);this.bitmap.data[o]=s[0];this.bitmap.data[o+1]=s[1];this.bitmap.data[o+2]=s[2]}));if((0,u.isNodePattern)(l)){l.call(this,null,this)}return this},convolute:function convolute(r,i,a,o,s,l){if(!Array.isArray(r))return u.throwError.call(this,"the kernel must be an array",l);if(typeof i==="function"){l=i;i=null;a=null;o=null;s=null}else{if(v(i)&&typeof i!=="number"){return u.throwError.call(this,"x must be a number",l)}if(v(a)&&typeof a!=="number"){return u.throwError.call(this,"y must be a number",l)}if(v(o)&&typeof o!=="number"){return u.throwError.call(this,"w must be a number",l)}if(v(s)&&typeof s!=="number"){return u.throwError.call(this,"h must be a number",l)}}var b=(r.length-1)/2;i=v(i)?i:b;a=v(a)?a:b;o=v(o)?o:this.bitmap.width-i;s=v(s)?s:this.bitmap.height-a;var y=this.cloneQuiet();this.scanQuiet(i,a,o,s,(function(i,a,o){var s=applyKernel(y,r,i,a);this.bitmap.data[o]=this.constructor.limit255(s[0]);this.bitmap.data[o+1]=this.constructor.limit255(s[1]);this.bitmap.data[o+2]=this.constructor.limit255(s[2])}));if((0,u.isNodePattern)(l)){l.call(this,null,this)}return this},color:colorFn,colour:colorFn}};i["default"]=b;r.exports=i.default},2276:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);var s=function _default(){return{contain:function contain(r,i,a,s,l){if(typeof r!=="number"||typeof i!=="number"){return o.throwError.call(this,"w and h must be numbers",l)}if(typeof a==="string"){if(typeof s==="function"&&typeof l==="undefined")l=s;s=a;a=null}if(typeof a==="function"){if(typeof l==="undefined")l=a;s=null;a=null}if(typeof s==="function"&&typeof l==="undefined"){l=s;s=null}a=a||this.constructor.HORIZONTAL_ALIGN_CENTER|this.constructor.VERTICAL_ALIGN_MIDDLE;var u=a&(1<<3)-1;var v=a>>3;if(!(u!==0&&!(u&u-1)||v!==0&&!(v&v-1))){return o.throwError.call(this,"only use one flag per alignment direction",l)}var b=u>>1;var y=v>>1;var x=r/i>this.bitmap.width/this.bitmap.height?i/this.bitmap.height:r/this.bitmap.width;var A=this.cloneQuiet().scale(x,s);this.resize(r,i,s);this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(r,i,a){this.bitmap.data.writeUInt32BE(this._background,a)}));this.blit(A,(this.bitmap.width-A.bitmap.width)/2*b,(this.bitmap.height-A.bitmap.height)/2*y);if((0,o.isNodePattern)(l)){l.call(this,null,this)}return this}}};i["default"]=s;r.exports=i.default},4324:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);var s=function _default(){return{cover:function cover(r,i,a,s,l){if(typeof r!=="number"||typeof i!=="number"){return o.throwError.call(this,"w and h must be numbers",l)}if(a&&typeof a==="function"&&typeof l==="undefined"){l=a;a=null;s=null}else if(typeof s==="function"&&typeof l==="undefined"){l=s;s=null}a=a||this.constructor.HORIZONTAL_ALIGN_CENTER|this.constructor.VERTICAL_ALIGN_MIDDLE;var u=a&(1<<3)-1;var v=a>>3;if(!(u!==0&&!(u&u-1)||v!==0&&!(v&v-1)))return o.throwError.call(this,"only use one flag per alignment direction",l);var b=u>>1;var y=v>>1;var x=r/i>this.bitmap.width/this.bitmap.height?r/this.bitmap.width:i/this.bitmap.height;this.scale(x,s);this.crop((this.bitmap.width-r)/2*b,(this.bitmap.height-i)/2*y,r,i);if((0,o.isNodePattern)(l)){l.call(this,null,this)}return this}}};i["default"]=s;r.exports=i.default},9565:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=pluginCrop;var s=o(a(8612));var l=a(9801);function pluginCrop(r){r("crop",(function(r,i,a,o,s){if(typeof r!=="number"||typeof i!=="number")return l.throwError.call(this,"x and y must be numbers",s);if(typeof a!=="number"||typeof o!=="number")return l.throwError.call(this,"w and h must be numbers",s);r=Math.round(r);i=Math.round(i);a=Math.round(a);o=Math.round(o);if(r===0&&a===this.bitmap.width){var u=a*i+r<<2;var v=u+o*a<<2;this.bitmap.data=this.bitmap.data.slice(u,v)}else{var b=Buffer.allocUnsafe(a*o*4);var y=0;this.scanQuiet(r,i,a,o,(function(r,i,a){var o=this.bitmap.data.readUInt32BE(a,true);b.writeUInt32BE(o,y,true);y+=4}));this.bitmap.data=b}this.bitmap.width=a;this.bitmap.height=o;if((0,l.isNodePattern)(s)){s.call(this,null,this)}return this}));return{class:{autocrop:function autocrop(){var r=this.bitmap.width;var i=this.bitmap.height;var a=1;var o;var u=0;var v=2e-4;var b=true;var y=false;var x={north:false,south:false,east:false,west:false};for(var A=arguments.length,E=new Array(A),M=0;M<A;M++){E[M]=arguments[M]}for(var L=0,P=E.length;L<P;L++){if(typeof E[L]==="number"){v=E[L]}if(typeof E[L]==="boolean"){b=E[L]}if(typeof E[L]==="function"){o=E[L]}if((0,s["default"])(E[L])==="object"){var T=E[L];if(typeof T.tolerance!=="undefined"){v=T.tolerance}if(typeof T.cropOnlyFrames!=="undefined"){b=T.cropOnlyFrames}if(typeof T.cropSymmetric!=="undefined"){y=T.cropSymmetric}if(typeof T.leaveBorder!=="undefined"){u=T.leaveBorder}if(typeof T.ignoreSides!=="undefined"){x=T.ignoreSides}}}var I=this.getPixelColor(0,0);var O=this.constructor.intToRGBA(I);var S=0;var k=0;var D=0;var z=0;I=this.getPixelColor(0,0);if(!x.north){t:for(var R=0;R<i-a;R++){for(var B=0;B<r;B++){var V=this.getPixelColor(B,R);var j=this.constructor.intToRGBA(V);if(this.constructor.colorDiff(O,j)>v){break t}}S++}}I=this.getPixelColor(r,0);if(!x.east){t:for(var H=0;H<r-a;H++){for(var U=0+S;U<i;U++){var _=this.getPixelColor(H,U);var G=this.constructor.intToRGBA(_);if(this.constructor.colorDiff(O,G)>v){break t}}k++}}I=this.getPixelColor(0,i);if(!x.south){t:for(var J=i-1;J>=S+a;J--){for(var Z=r-k-1;Z>=0;Z--){var K=this.getPixelColor(Z,J);var Q=this.constructor.intToRGBA(K);if(this.constructor.colorDiff(O,Q)>v){break t}}D++}}I=this.getPixelColor(r,i);if(!x.west){t:for(var $=r-1;$>=0+k+a;$--){for(var tt=i-1;tt>=0+S;tt--){var et=this.getPixelColor($,tt);var rt=this.constructor.intToRGBA(et);if(this.constructor.colorDiff(O,rt)>v){break t}}z++}}var it=false;z-=u;k-=u;S-=u;D-=u;if(y){var nt=Math.min(k,z);var at=Math.min(S,D);z=nt;k=nt;S=at;D=at}z=z>=0?z:0;k=k>=0?k:0;S=S>=0?S:0;D=D>=0?D:0;var ot=r-(z+k);var st=i-(D+S);if(b){it=k!==0&&S!==0&&z!==0&&D!==0}else{it=k!==0||S!==0||z!==0||D!==0}if(it){this.crop(k,S,ot,st)}if((0,l.isNodePattern)(o)){o.call(this,null,this)}return this}}}}r.exports=i.default},7678:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var s=o(a(8612));var l=a(9801);var u=function _default(){return{displace:function displace(r,i,a){if((0,s["default"])(r)!=="object"||r.constructor!==this.constructor){return l.throwError.call(this,"The source must be a Jimp image",a)}if(typeof i!=="number"){return l.throwError.call(this,"factor must be a number",a)}var o=this.cloneQuiet();this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(a,s,l){var u=r.bitmap.data[l]/256*i;u=Math.round(u);var v=this.getPixelIndex(a+u,s);this.bitmap.data[v]=o.bitmap.data[l];this.bitmap.data[v+1]=o.bitmap.data[l+1];this.bitmap.data[v+2]=o.bitmap.data[l+2]}));if((0,l.isNodePattern)(a)){a.call(this,null,this)}return this}}};i["default"]=u;r.exports=i.default},5194:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);function dither(r){var i=[1,9,3,11,13,5,15,7,4,12,2,10,16,8,14,6];this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(r,a,o){var s=((a&3)<<2)+r%4;var l=i[s];this.bitmap.data[o]=Math.min(this.bitmap.data[o]+l,255);this.bitmap.data[o+1]=Math.min(this.bitmap.data[o+1]+l,255);this.bitmap.data[o+2]=Math.min(this.bitmap.data[o+2]+l,255)}));if((0,o.isNodePattern)(r)){r.call(this,null,this)}return this}var s=function _default(){return{dither565:dither,dither16:dither}};i["default"]=s;r.exports=i.default},4969:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);var s=function _default(){return{fisheye:function fisheye(){var r=this;var i=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{r:2.5};var a=arguments.length>1?arguments[1]:undefined;if(typeof i==="function"){a=i;i={r:2.5}}var s=this.cloneQuiet();var l=s.bitmap,u=l.width,v=l.height;s.scanQuiet(0,0,u,v,(function(a,o){var l=a/u;var b=o/v;var y=Math.sqrt(Math.pow(l-.5,2)+Math.pow(b-.5,2));var x=2*Math.pow(y,i.r);var A=(l-.5)/y;var E=(b-.5)/y;var M=Math.round((x*A+.5)*u);var L=Math.round((x*E+.5)*v);var P=s.getPixelColor(M,L);r.setPixelColor(P,a,o)}));this.setPixelColor(s.getPixelColor(u/2,v/2),u/2,v/2);if((0,o.isNodePattern)(a)){a.call(this,null,this)}return this}}};i["default"]=s;r.exports=i.default},328:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);function flipFn(r,i,a){if(typeof r!=="boolean"||typeof i!=="boolean")return o.throwError.call(this,"horizontal and vertical must be Booleans",a);var s=Buffer.alloc(this.bitmap.data.length);this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(a,o,l){var u=r?this.bitmap.width-1-a:a;var v=i?this.bitmap.height-1-o:o;var b=this.bitmap.width*v+u<<2;var y=this.bitmap.data.readUInt32BE(l);s.writeUInt32BE(y,b)}));this.bitmap.data=Buffer.from(s);if((0,o.isNodePattern)(a)){a.call(this,null,this)}return this}var s=function _default(){return{flip:flipFn,mirror:flipFn}};i["default"]=s;r.exports=i.default},9357:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);var s=function _default(){return{gaussian:function gaussian(r,i){if(typeof r!=="number"){return o.throwError.call(this,"r must be a number",i)}if(r<1){return o.throwError.call(this,"r must be greater than 0",i)}var a=Math.ceil(r*2.57);var s=a*2+1;var l=r*r*2;var u=l*Math.PI;var v=[];for(var b=0;b<s;b++){v[b]=[];for(var y=0;y<s;y++){var x=Math.pow(y-a,2)+Math.pow(b-a,2);v[b][y]=Math.exp(-x/l)/u}}for(var A=0;A<this.bitmap.height;A++){for(var E=0;E<this.bitmap.width;E++){var M=0;var L=0;var P=0;var T=0;var I=0;for(var O=0;O<s;O++){for(var S=0;S<s;S++){var k=Math.min(this.bitmap.width-1,Math.max(0,S+E-a));var D=Math.min(this.bitmap.height-1,Math.max(0,O+A-a));var z=v[O][S];var R=D*this.bitmap.width+k<<2;M+=this.bitmap.data[R]*z;L+=this.bitmap.data[R+1]*z;P+=this.bitmap.data[R+2]*z;T+=this.bitmap.data[R+3]*z;I+=z}var B=A*this.bitmap.width+E<<2;this.bitmap.data[B]=Math.round(M/I);this.bitmap.data[B+1]=Math.round(L/I);this.bitmap.data[B+2]=Math.round(P/I);this.bitmap.data[B+3]=Math.round(T/I)}}}if((0,o.isNodePattern)(i)){i.call(this,null,this)}return this}}};i["default"]=s;r.exports=i.default},5934:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);var s=function _default(){return{invert:function invert(r){this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(r,i,a){this.bitmap.data[a]=255-this.bitmap.data[a];this.bitmap.data[a+1]=255-this.bitmap.data[a+1];this.bitmap.data[a+2]=255-this.bitmap.data[a+2]}));if((0,o.isNodePattern)(r)){r.call(this,null,this)}return this}}};i["default"]=s;r.exports=i.default},2537:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);var s=function _default(){return{mask:function mask(r){var i=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var a=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var s=arguments.length>3?arguments[3]:undefined;if(!(r instanceof this.constructor)){return o.throwError.call(this,"The source must be a Jimp image",s)}if(typeof i!=="number"||typeof a!=="number"){return o.throwError.call(this,"x and y must be numbers",s)}i=Math.round(i);a=Math.round(a);var l=this.bitmap.width;var u=this.bitmap.height;var v=this;r.scanQuiet(0,0,r.bitmap.width,r.bitmap.height,(function(r,o,s){var b=i+r;var y=a+o;if(b>=0&&y>=0&&b<l&&y<u){var x=v.getPixelIndex(b,y);var A=this.bitmap.data;var E=(A[s+0]+A[s+1]+A[s+2])/3;v.bitmap.data[x+3]*=E/255}}));if((0,o.isNodePattern)(s)){s.call(this,null,this)}return this}}};i["default"]=s;r.exports=i.default},238:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);function histogram(){var r={r:new Array(256).fill(0),g:new Array(256).fill(0),b:new Array(256).fill(0)};this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(i,a,o){r.r[this.bitmap.data[o+0]]++;r.g[this.bitmap.data[o+1]]++;r.b[this.bitmap.data[o+2]]++}));return r}var s=function normalize(r,i,a){return(r-i)*255/(a-i)};var l=function getBounds(r){return[r.findIndex((function(r){return r>0})),255-r.slice().reverse().findIndex((function(r){return r>0}))]};var u=function _default(){return{normalize:function normalize(r){var i=histogram.call(this);var a={r:l(i.r),g:l(i.g),b:l(i.b)};this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(r,i,o){var l=this.bitmap.data[o+0];var u=this.bitmap.data[o+1];var v=this.bitmap.data[o+2];this.bitmap.data[o+0]=s(l,a.r[0],a.r[1]);this.bitmap.data[o+1]=s(u,a.g[0],a.g[1]);this.bitmap.data[o+2]=s(v,a.b[0],a.b[1])}));if((0,o.isNodePattern)(r)){r.call(this,null,this)}return this}}};i["default"]=u;r.exports=i.default},5277:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var s=o(a(8612));var l=o(a(2653));var u=o(a(1017));var v=o(a(1065));var b=a(9801);var y=a(4361);function xOffsetBasedOnAlignment(r,i,a,o,s){if(s===r.HORIZONTAL_ALIGN_LEFT){return 0}if(s===r.HORIZONTAL_ALIGN_CENTER){return(o-(0,y.measureText)(i,a))/2}return o-(0,y.measureText)(i,a)}function drawCharacter(r,i,a,o,s){if(s.width>0&&s.height>0){var l=i.pages[s.page];r.blit(l,a+s.xoffset,o+s.yoffset,s.x,s.y,s.width,s.height)}return r}function printText(r,i,a,o,s){for(var l=0;l<o.length;l++){var u=void 0;if(r.chars[o[l]]){u=o[l]}else if(/\s/.test(o[l])){u=""}else{u="?"}var v=r.chars[u]||{};var b=r.kernings[u];drawCharacter(this,r,i,a,v||{});var y=b&&b[o[l+1]]?b[o[l+1]]:0;i+=y+(v.xadvance||s)}}function splitLines(r,i,a){var o=i.split(" ");var s=[];var u=[];var v=0;o.forEach((function(i){var o=[].concat((0,l["default"])(u),[i]).join(" ");var b=(0,y.measureText)(r,o);if(b<=a){if(b>v){v=b}u.push(i)}else{s.push(u);u=[i]}}));s.push(u);return{lines:s,longestLine:v}}function loadPages(r,i,a){var o=a.map((function(a){return r.read(i+"/"+a)}));return Promise.all(o)}var x=process.env.DIRNAME||"".concat(__dirname,"/../");var A=function _default(){return{constants:{measureText:y.measureText,measureTextHeight:y.measureTextHeight,FONT_SANS_8_BLACK:u["default"].join(x,"fonts/open-sans/open-sans-8-black/open-sans-8-black.fnt"),FONT_SANS_10_BLACK:u["default"].join(x,"fonts/open-sans/open-sans-10-black/open-sans-10-black.fnt"),FONT_SANS_12_BLACK:u["default"].join(x,"fonts/open-sans/open-sans-12-black/open-sans-12-black.fnt"),FONT_SANS_14_BLACK:u["default"].join(x,"fonts/open-sans/open-sans-14-black/open-sans-14-black.fnt"),FONT_SANS_16_BLACK:u["default"].join(x,"fonts/open-sans/open-sans-16-black/open-sans-16-black.fnt"),FONT_SANS_32_BLACK:u["default"].join(x,"fonts/open-sans/open-sans-32-black/open-sans-32-black.fnt"),FONT_SANS_64_BLACK:u["default"].join(x,"fonts/open-sans/open-sans-64-black/open-sans-64-black.fnt"),FONT_SANS_128_BLACK:u["default"].join(x,"fonts/open-sans/open-sans-128-black/open-sans-128-black.fnt"),FONT_SANS_8_WHITE:u["default"].join(x,"fonts/open-sans/open-sans-8-white/open-sans-8-white.fnt"),FONT_SANS_16_WHITE:u["default"].join(x,"fonts/open-sans/open-sans-16-white/open-sans-16-white.fnt"),FONT_SANS_32_WHITE:u["default"].join(x,"fonts/open-sans/open-sans-32-white/open-sans-32-white.fnt"),FONT_SANS_64_WHITE:u["default"].join(x,"fonts/open-sans/open-sans-64-white/open-sans-64-white.fnt"),FONT_SANS_128_WHITE:u["default"].join(x,"fonts/open-sans/open-sans-128-white/open-sans-128-white.fnt"),loadFont:function loadFont(r,i){var a=this;if(typeof r!=="string")return b.throwError.call(this,"file must be a string",i);return new Promise((function(o,s){i=i||function(r,i){if(r)s(r);else o(i)};(0,v["default"])(r,(function(o,s){var l={};var v={};if(o){return b.throwError.call(a,o,i)}for(var y=0;y<s.chars.length;y++){l[String.fromCharCode(s.chars[y].id)]=s.chars[y]}for(var x=0;x<s.kernings.length;x++){var A=String.fromCharCode(s.kernings[x].first);v[A]=v[A]||{};v[A][String.fromCharCode(s.kernings[x].second)]=s.kernings[x].amount}loadPages(a,u["default"].dirname(r),s.pages).then((function(r){i(null,{chars:l,kernings:v,pages:r,common:s.common,info:s.info})}))}))}))}},class:{print:function print(r,i,a,o,l,u,v){var x=this;if(typeof l==="function"&&typeof v==="undefined"){v=l;l=Infinity}if(typeof l==="undefined"){l=Infinity}if(typeof u==="function"&&typeof v==="undefined"){v=u;u=Infinity}if(typeof u==="undefined"){u=Infinity}if((0,s["default"])(r)!=="object"){return b.throwError.call(this,"font must be a Jimp loadFont",v)}if(typeof i!=="number"||typeof a!=="number"||typeof l!=="number"){return b.throwError.call(this,"x, y and maxWidth must be numbers",v)}if(typeof l!=="number"){return b.throwError.call(this,"maxWidth must be a number",v)}if(typeof u!=="number"){return b.throwError.call(this,"maxHeight must be a number",v)}var A;var E;if((0,s["default"])(o)==="object"&&o.text!==null&&o.text!==undefined){A=o.alignmentX||this.constructor.HORIZONTAL_ALIGN_LEFT;E=o.alignmentY||this.constructor.VERTICAL_ALIGN_TOP;var M=o;o=M.text}else{A=this.constructor.HORIZONTAL_ALIGN_LEFT;E=this.constructor.VERTICAL_ALIGN_TOP;o=o.toString()}if(u!==Infinity&&E===this.constructor.VERTICAL_ALIGN_BOTTOM){a+=u-(0,y.measureTextHeight)(r,o,l)}else if(u!==Infinity&&E===this.constructor.VERTICAL_ALIGN_MIDDLE){a+=u/2-(0,y.measureTextHeight)(r,o,l)/2}var L=Object.entries(r.chars)[0][1].xadvance;var P=splitLines(r,o,l),T=P.lines,I=P.longestLine;T.forEach((function(o){var s=o.join(" ");var u=xOffsetBasedOnAlignment(x.constructor,r,s,l,A);printText.call(x,r,i+u,a,s,L);a+=r.common.lineHeight}));if((0,b.isNodePattern)(v)){v.call(this,null,this,{x:i+I,y:a})}return this}}}};i["default"]=A;r.exports=i.default},4361:(r,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i.measureText=measureText;i.measureTextHeight=measureTextHeight;function measureText(r,i){var a=0;for(var o=0;o<i.length;o++){if(r.chars[i[o]]){var s=r.kernings[i[o]]&&r.kernings[i[o]][i[o+1]]?r.kernings[i[o]][i[o+1]]:0;a+=(r.chars[i[o]].xadvance||0)+s}}return a}function measureTextHeight(r,i,a){var o=i.split(" ");var s="";var l=r.common.lineHeight;for(var u=0;u<o.length;u++){var v=s+o[u]+" ";var b=measureText(r,v);if(b>a&&u>0){l+=r.common.lineHeight;s=o[u]+" "}else{s=v}}return l}},4015:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var s=a(9801);var l=o(a(8724));var u=o(a(4975));var v=function _default(){return{constants:{RESIZE_NEAREST_NEIGHBOR:"nearestNeighbor",RESIZE_BILINEAR:"bilinearInterpolation",RESIZE_BICUBIC:"bicubicInterpolation",RESIZE_HERMITE:"hermiteInterpolation",RESIZE_BEZIER:"bezierInterpolation"},class:{resize:function resize(r,i,a,o){if(typeof r!=="number"||typeof i!=="number"){return s.throwError.call(this,"w and h must be numbers",o)}if(typeof a==="function"&&typeof o==="undefined"){o=a;a=null}if(r===this.constructor.AUTO&&i===this.constructor.AUTO){return s.throwError.call(this,"w and h cannot both be set to auto",o)}if(r===this.constructor.AUTO){r=this.bitmap.width*(i/this.bitmap.height)}if(i===this.constructor.AUTO){i=this.bitmap.height*(r/this.bitmap.width)}if(r<0||i<0){return s.throwError.call(this,"w and h must be positive numbers",o)}r=Math.round(r);i=Math.round(i);if(typeof u["default"][a]==="function"){var v={data:Buffer.alloc(r*i*4),width:r,height:i};u["default"][a](this.bitmap,v);this.bitmap=v}else{var b=this;var resize=new l["default"](this.bitmap.width,this.bitmap.height,r,i,true,true,(function(a){b.bitmap.data=Buffer.from(a);b.bitmap.width=r;b.bitmap.height=i}));resize.resize(this.bitmap.data)}if((0,s.isNodePattern)(o)){o.call(this,null,this)}return this}}}};i["default"]=v;r.exports=i.default},8724:r=>{"use strict";function Resize(r,i,a,o,s,l,u){this.widthOriginal=Math.abs(Math.floor(r)||0);this.heightOriginal=Math.abs(Math.floor(i)||0);this.targetWidth=Math.abs(Math.floor(a)||0);this.targetHeight=Math.abs(Math.floor(o)||0);this.colorChannels=s?4:3;this.interpolationPass=Boolean(l);this.resizeCallback=typeof u==="function"?u:function(){};this.targetWidthMultipliedByChannels=this.targetWidth*this.colorChannels;this.originalWidthMultipliedByChannels=this.widthOriginal*this.colorChannels;this.originalHeightMultipliedByChannels=this.heightOriginal*this.colorChannels;this.widthPassResultSize=this.targetWidthMultipliedByChannels*this.heightOriginal;this.finalResultSize=this.targetWidthMultipliedByChannels*this.targetHeight;this.initialize()}Resize.prototype.initialize=function(){if(this.widthOriginal>0&&this.heightOriginal>0&&this.targetWidth>0&&this.targetHeight>0){this.configurePasses()}else{throw new Error("Invalid settings specified for the resizer.")}};Resize.prototype.configurePasses=function(){if(this.widthOriginal===this.targetWidth){this.resizeWidth=this.bypassResizer}else{this.ratioWeightWidthPass=this.widthOriginal/this.targetWidth;if(this.ratioWeightWidthPass<1&&this.interpolationPass){this.initializeFirstPassBuffers(true);this.resizeWidth=this.colorChannels===4?this.resizeWidthInterpolatedRGBA:this.resizeWidthInterpolatedRGB}else{this.initializeFirstPassBuffers(false);this.resizeWidth=this.colorChannels===4?this.resizeWidthRGBA:this.resizeWidthRGB}}if(this.heightOriginal===this.targetHeight){this.resizeHeight=this.bypassResizer}else{this.ratioWeightHeightPass=this.heightOriginal/this.targetHeight;if(this.ratioWeightHeightPass<1&&this.interpolationPass){this.initializeSecondPassBuffers(true);this.resizeHeight=this.resizeHeightInterpolated}else{this.initializeSecondPassBuffers(false);this.resizeHeight=this.colorChannels===4?this.resizeHeightRGBA:this.resizeHeightRGB}}};Resize.prototype._resizeWidthInterpolatedRGBChannels=function(r,i){var a=i?4:3;var o=this.ratioWeightWidthPass;var s=this.widthBuffer;var l=0;var u=0;var v=0;var b=0;var y=0;var x;for(x=0;l<1/3;x+=a,l+=o){for(u=x,v=0;u<this.widthPassResultSize;v+=this.originalWidthMultipliedByChannels,u+=this.targetWidthMultipliedByChannels){s[u]=r[v];s[u+1]=r[v+1];s[u+2]=r[v+2];if(i)s[u+3]=r[v+3]}}l-=1/3;var A;for(A=this.widthOriginal-1;l<A;x+=a,l+=o){y=l%1;b=1-y;for(u=x,v=Math.floor(l)*a;u<this.widthPassResultSize;v+=this.originalWidthMultipliedByChannels,u+=this.targetWidthMultipliedByChannels){s[u+0]=r[v+0]*b+r[v+a+0]*y;s[u+1]=r[v+1]*b+r[v+a+1]*y;s[u+2]=r[v+2]*b+r[v+a+2]*y;if(i)s[u+3]=r[v+3]*b+r[v+a+3]*y}}for(A=this.originalWidthMultipliedByChannels-a;x<this.targetWidthMultipliedByChannels;x+=a){for(u=x,v=A;u<this.widthPassResultSize;v+=this.originalWidthMultipliedByChannels,u+=this.targetWidthMultipliedByChannels){s[u]=r[v];s[u+1]=r[v+1];s[u+2]=r[v+2];if(i)s[u+3]=r[v+3]}}return s};Resize.prototype._resizeWidthRGBChannels=function(r,i){var a=i?4:3;var o=this.ratioWeightWidthPass;var s=1/o;var l=this.originalWidthMultipliedByChannels-a+1;var u=this.targetWidthMultipliedByChannels-a+1;var v=this.outputWidthWorkBench;var b=this.widthBuffer;var y=this.outputWidthWorkBenchOpaquePixelsCount;var x=0;var A=0;var E=0;var M=0;var L=0;var P=0;var T=0;var I=1;var O=0;var S=0;var k=0;var D=0;do{for(L=0;L<this.originalHeightMultipliedByChannels;){v[L++]=0;v[L++]=0;v[L++]=0;if(i){v[L++]=0;y[L/a-1]=0}}x=o;do{A=1+E-M;I=Math.min(x,A);for(L=0,P=E;L<this.originalHeightMultipliedByChannels;P+=l){O=r[P];S=r[++P];k=r[++P];D=i?r[++P]:255;v[L++]+=(D?O:0)*I;v[L++]+=(D?S:0)*I;v[L++]+=(D?k:0)*I;if(i){v[L++]+=D*I;y[L/a-1]+=D?I:0}}if(x>=A){E+=a;M=E;x-=A}else{M+=x;break}}while(x>0&&E<this.originalWidthMultipliedByChannels);for(L=0,P=T;L<this.originalHeightMultipliedByChannels;P+=u){x=i?y[L/a]:1;I=i?x?1/x:0:s;b[P]=v[L++]*I;b[++P]=v[L++]*I;b[++P]=v[L++]*I;if(i)b[++P]=v[L++]*s}T+=a}while(T<this.targetWidthMultipliedByChannels);return b};Resize.prototype._resizeHeightRGBChannels=function(r,i){var a=this.ratioWeightHeightPass;var o=1/a;var s=this.outputHeightWorkBench;var l=this.heightBuffer;var u=this.outputHeightWorkBenchOpaquePixelsCount;var v=0;var b=0;var y=0;var x=0;var A=0;var E=0;var M=0;var L=1;var P=0;var T=0;var I=0;var O=0;do{for(A=0;A<this.targetWidthMultipliedByChannels;){s[A++]=0;s[A++]=0;s[A++]=0;if(i){s[A++]=0;u[A/4-1]=0}}v=a;do{b=1+y-x;L=Math.min(v,b);M=y;for(A=0;A<this.targetWidthMultipliedByChannels;){P=r[M++];T=r[M++];I=r[M++];O=i?r[M++]:255;s[A++]+=(O?P:0)*L;s[A++]+=(O?T:0)*L;s[A++]+=(O?I:0)*L;if(i){s[A++]+=O*L;u[A/4-1]+=O?L:0}}if(v>=b){y=M;x=y;v-=b}else{x+=v;break}}while(v>0&&y<this.widthPassResultSize);for(A=0;A<this.targetWidthMultipliedByChannels;){v=i?u[A/4]:1;L=i?v?1/v:0:o;l[E++]=Math.round(s[A++]*L);l[E++]=Math.round(s[A++]*L);l[E++]=Math.round(s[A++]*L);if(i){l[E++]=Math.round(s[A++]*o)}}}while(E<this.finalResultSize);return l};Resize.prototype.resizeWidthInterpolatedRGB=function(r){return this._resizeWidthInterpolatedRGBChannels(r,false)};Resize.prototype.resizeWidthInterpolatedRGBA=function(r){return this._resizeWidthInterpolatedRGBChannels(r,true)};Resize.prototype.resizeWidthRGB=function(r){return this._resizeWidthRGBChannels(r,false)};Resize.prototype.resizeWidthRGBA=function(r){return this._resizeWidthRGBChannels(r,true)};Resize.prototype.resizeHeightInterpolated=function(r){var i=this.ratioWeightHeightPass;var a=this.heightBuffer;var o=0;var s=0;var l=0;var u=0;var v=0;var b=0;var y=0;var x;for(;o<1/3;o+=i){for(l=0;l<this.targetWidthMultipliedByChannels;){a[s++]=Math.round(r[l++])}}o-=1/3;for(x=this.heightOriginal-1;o<x;o+=i){y=o%1;b=1-y;u=Math.floor(o)*this.targetWidthMultipliedByChannels;v=u+this.targetWidthMultipliedByChannels;for(l=0;l<this.targetWidthMultipliedByChannels;++l){a[s++]=Math.round(r[u++]*b+r[v++]*y)}}while(s<this.finalResultSize){for(l=0,u=x*this.targetWidthMultipliedByChannels;l<this.targetWidthMultipliedByChannels;++l){a[s++]=Math.round(r[u++])}}return a};Resize.prototype.resizeHeightRGB=function(r){return this._resizeHeightRGBChannels(r,false)};Resize.prototype.resizeHeightRGBA=function(r){return this._resizeHeightRGBChannels(r,true)};Resize.prototype.resize=function(r){this.resizeCallback(this.resizeHeight(this.resizeWidth(r)))};Resize.prototype.bypassResizer=function(r){return r};Resize.prototype.initializeFirstPassBuffers=function(r){this.widthBuffer=this.generateFloatBuffer(this.widthPassResultSize);if(!r){this.outputWidthWorkBench=this.generateFloatBuffer(this.originalHeightMultipliedByChannels);if(this.colorChannels>3){this.outputWidthWorkBenchOpaquePixelsCount=this.generateFloat64Buffer(this.heightOriginal)}}};Resize.prototype.initializeSecondPassBuffers=function(r){this.heightBuffer=this.generateUint8Buffer(this.finalResultSize);if(!r){this.outputHeightWorkBench=this.generateFloatBuffer(this.targetWidthMultipliedByChannels);if(this.colorChannels>3){this.outputHeightWorkBenchOpaquePixelsCount=this.generateFloat64Buffer(this.targetWidth)}}};Resize.prototype.generateFloatBuffer=function(r){try{return new Float32Array(r)}catch(r){return[]}};Resize.prototype.generateFloat64Buffer=function(r){try{return new Float64Array(r)}catch(r){return[]}};Resize.prototype.generateUint8Buffer=function(r){try{return new Uint8Array(r)}catch(r){return[]}};r.exports=Resize},4975:r=>{"use strict";r.exports={nearestNeighbor:function nearestNeighbor(r,i){var a=r.width;var o=r.height;var s=i.width;var l=i.height;var u=r.data;var v=i.data;for(var b=0;b<l;b++){for(var y=0;y<s;y++){var x=(b*s+y)*4;var A=Math.floor(b*o/l);var E=Math.floor(y*a/s);var M=(A*a+E)*4;v[x++]=u[M++];v[x++]=u[M++];v[x++]=u[M++];v[x++]=u[M++]}}},bilinearInterpolation:function bilinearInterpolation(r,i){var a=r.width;var o=r.height;var s=i.width;var l=i.height;var u=r.data;var v=i.data;var b=function interpolate(r,i,a,o,s){if(i===o){return a}return Math.round((r-i)*s+(o-r)*a)};var y=function assign(r,i,o,s,l,y,x,A){var E=(x*a+s)*4+i;var M=(x*a+l)*4+i;var L=b(o,s,u[E],l,u[M]);if(A===x){v[r+i]=L}else{E=(A*a+s)*4+i;M=(A*a+l)*4+i;var P=b(o,s,u[E],l,u[M]);v[r+i]=b(y,x,L,A,P)}};for(var x=0;x<l;x++){for(var A=0;A<s;A++){var E=(x*s+A)*4;var M=A*a/s;var L=Math.floor(M);var P=Math.min(Math.ceil(M),a-1);var T=x*o/l;var I=Math.floor(T);var O=Math.min(Math.ceil(T),o-1);y(E,0,M,L,P,T,I,O);y(E,1,M,L,P,T,I,O);y(E,2,M,L,P,T,I,O);y(E,3,M,L,P,T,I,O)}}},_interpolate2D:function _interpolate2D(r,i,a,o){var s=r.data;var l=i.data;var u=r.width;var v=r.height;var b=i.width;var y=i.height;var x=Math.max(1,Math.floor(u/b));var A=b*x;var E=Math.max(1,Math.floor(v/y));var M=y*E;var L=Buffer.alloc(A*v*4);for(var P=0;P<v;P++){for(var T=0;T<A;T++){var I=T*(u-1)/A;var O=Math.floor(I);var S=I-O;var k=(P*u+O)*4;var D=(P*A+T)*4;for(var z=0;z<4;z++){var R=k+z;var B=O>0?s[R-4]:2*s[R]-s[R+4];var V=s[R];var j=s[R+4];var H=O<u-2?s[R+8]:2*s[R+4]-s[R];L[D+z]=o(B,V,j,H,S)}}}var U=Buffer.alloc(A*M*4);for(var _=0;_<M;_++){for(var G=0;G<A;G++){var J=_*(v-1)/M;var Z=Math.floor(J);var K=J-Z;var Q=(Z*A+G)*4;var $=(_*A+G)*4;for(var tt=0;tt<4;tt++){var et=Q+tt;var rt=Z>0?L[et-A*4]:2*L[et]-L[et+A*4];var it=L[et];var nt=L[et+A*4];var at=Z<v-2?L[et+A*8]:2*L[et+A*4]-L[et];U[$+tt]=o(rt,it,nt,at,K)}}}var ot=x*E;if(ot>1){for(var st=0;st<y;st++){for(var lt=0;lt<b;lt++){var ut=0;var ft=0;var ht=0;var ct=0;var pt=0;for(var dt=0;dt<E;dt++){var mt=st*E+dt;for(var vt=0;vt<x;vt++){var gt=lt*x+vt;var bt=(mt*A+gt)*4;var yt=U[bt+3];if(yt){ut+=U[bt];ft+=U[bt+1];ht+=U[bt+2];pt++}ct+=yt}}var wt=(st*b+lt)*4;l[wt]=pt?Math.round(ut/pt):0;l[wt+1]=pt?Math.round(ft/pt):0;l[wt+2]=pt?Math.round(ht/pt):0;l[wt+3]=Math.round(ct/ot)}}}else{i.data=U}},bicubicInterpolation:function bicubicInterpolation(r,i,a){var o=function interpolateCubic(r,i,a,o,s){var l=o-a-r+i;var u=r-i-l;var v=a-r;var b=i;return Math.max(0,Math.min(255,l*(s*s*s)+u*(s*s)+v*s+b))};return this._interpolate2D(r,i,a,o)},hermiteInterpolation:function hermiteInterpolation(r,i,a){var o=function interpolateHermite(r,i,a,o,s){var l=i;var u=.5*(a-r);var v=r-2.5*i+2*a-.5*o;var b=.5*(o-r)+1.5*(i-a);return Math.max(0,Math.min(255,Math.round(((b*s+v)*s+u)*s+l)))};return this._interpolate2D(r,i,a,o)},bezierInterpolation:function bezierInterpolation(r,i,a){var o=function interpolateBezier(r,i,a,o,s){var l=i+(a-r)/4;var u=a-(o-i)/4;var v=1-s;var b=i*v*v*v;var y=3*l*v*v*s;var x=3*u*v*s*s;var A=a*s*s*s;return Math.max(0,Math.min(255,Math.round(b+y+x+A)))};return this._interpolate2D(r,i,a,o)}}},414:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);function advancedRotate(r,i){r%=360;var a=r*Math.PI/180;var o=Math.cos(a);var s=Math.sin(a);var l=this.bitmap.width;var u=this.bitmap.height;if(i===true||typeof i==="string"){l=Math.ceil(Math.abs(this.bitmap.width*o)+Math.abs(this.bitmap.height*s))+1;u=Math.ceil(Math.abs(this.bitmap.width*s)+Math.abs(this.bitmap.height*o))+1;if(l%2!==0){l++}if(u%2!==0){u++}var v=this.cloneQuiet();this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(r,i,a){this.bitmap.data.writeUInt32BE(this._background,a)}));var b=Math.max(l,u,this.bitmap.width,this.bitmap.height);this.resize(b,b,i);this.blit(v,this.bitmap.width/2-v.bitmap.width/2,this.bitmap.height/2-v.bitmap.height/2)}var y=this.bitmap.width;var x=this.bitmap.height;var A=Buffer.alloc(this.bitmap.data.length);function createTranslationFunction(r,i){return function(a,o){return{x:a+r,y:o+i}}}var E=createTranslationFunction(-(y/2),-(x/2));var M=createTranslationFunction(y/2+.5,x/2+.5);for(var L=1;L<=x;L++){for(var P=1;P<=y;P++){var T=E(P,L);var I=M(o*T.x-s*T.y,o*T.y+s*T.x);var O=y*(L-1)+P-1<<2;if(I.x>=0&&I.x<y&&I.y>=0&&I.y<x){var S=(y*(I.y|0)+I.x|0)<<2;var k=this.bitmap.data.readUInt32BE(S);A.writeUInt32BE(k,O)}else{A.writeUInt32BE(this._background,O)}}}this.bitmap.data=A;if(i===true||typeof i==="string"){var D=y/2-l/2;var z=x/2-u/2;this.crop(D,z,l,u)}}var s=function _default(){return{rotate:function rotate(r,i,a){if(typeof i==="undefined"||i===null){i=true}if(typeof i==="function"&&typeof a==="undefined"){a=i;i=true}if(typeof r!=="number"){return o.throwError.call(this,"deg must be a number",a)}if(typeof i!=="boolean"&&typeof i!=="string"){return o.throwError.call(this,"mode must be a boolean or a string",a)}advancedRotate.call(this,r,i,a);if((0,o.isNodePattern)(a)){a.call(this,null,this)}return this}}};i["default"]=s;r.exports=i.default},3679:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);var s=function _default(){return{scale:function scale(r,i,a){if(typeof r!=="number"){return o.throwError.call(this,"f must be a number",a)}if(r<0){return o.throwError.call(this,"f must be a positive number",a)}if(typeof i==="function"&&typeof a==="undefined"){a=i;i=null}var s=this.bitmap.width*r;var l=this.bitmap.height*r;this.resize(s,l,i);if((0,o.isNodePattern)(a)){a.call(this,null,this)}return this},scaleToFit:function scaleToFit(r,i,a,s){if(typeof r!=="number"||typeof i!=="number"){return o.throwError.call(this,"w and h must be numbers",s)}if(typeof a==="function"&&typeof s==="undefined"){s=a;a=null}var l=r/i>this.bitmap.width/this.bitmap.height?i/this.bitmap.height:r/this.bitmap.width;this.scale(l,a);if((0,o.isNodePattern)(s)){s.call(this,null,this)}return this}}};i["default"]=s;r.exports=i.default},8692:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);var s=function _default(){return{shadow:function shadow(){var r=this;var i=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var a=arguments.length>1?arguments[1]:undefined;if(typeof i==="function"){a=i;i={}}var s=i,l=s.opacity,u=l===void 0?.7:l,v=s.size,b=v===void 0?1.1:v,y=s.x,x=y===void 0?-25:y,A=s.y,E=A===void 0?25:A,M=s.blur,L=M===void 0?5:M;var P=this.clone();var shadow=this.clone();shadow.scan(0,0,shadow.bitmap.width,shadow.bitmap.height,(function(i,a,o){shadow.bitmap.data[o]=0;shadow.bitmap.data[o+1]=0;shadow.bitmap.data[o+2]=0;shadow.bitmap.data[o+3]=shadow.constructor.limit255(shadow.bitmap.data[o+3]*u);r.bitmap.data[o]=0;r.bitmap.data[o+1]=0;r.bitmap.data[o+2]=0;r.bitmap.data[o+3]=0}));shadow.resize(shadow.bitmap.width*b,shadow.bitmap.height*b).blur(L);this.composite(shadow,x,E);this.composite(P,0,0);if((0,o.isNodePattern)(a)){a.call(this,null,this)}return this}}};i["default"]=s;r.exports=i.default},9563:(r,i,a)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var o=a(9801);var s=function _default(){return{threshold:function threshold(r,i){var a=this;var s=r.max,l=r.replace,u=l===void 0?255:l,v=r.autoGreyscale,b=v===void 0?true:v;if(typeof s!=="number"){return o.throwError.call(this,"max must be a number",i)}if(typeof u!=="number"){return o.throwError.call(this,"replace must be a number",i)}if(typeof b!=="boolean"){return o.throwError.call(this,"autoGreyscale must be a boolean",i)}s=this.constructor.limit255(s);u=this.constructor.limit255(u);if(b){this.greyscale()}this.scanQuiet(0,0,this.bitmap.width,this.bitmap.height,(function(r,i,o){var l=a.bitmap.data[o]<s?a.bitmap.data[o]:u;a.bitmap.data[o]=l;a.bitmap.data[o+1]=l;a.bitmap.data[o+2]=l}));if((0,o.isNodePattern)(i)){i.call(this,null,this)}return this}}};i["default"]=s;r.exports=i.default},8577:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var s=o(a(2653));var l=a(1997);var u=o(a(8651));var v=o(a(2902));var b=o(a(4656));var y=o(a(3013));var x=o(a(2276));var A=o(a(4324));var E=o(a(9565));var M=o(a(7678));var L=o(a(5194));var P=o(a(4969));var T=o(a(328));var I=o(a(9357));var O=o(a(5934));var S=o(a(2537));var k=o(a(238));var D=o(a(5277));var z=o(a(4015));var R=o(a(414));var B=o(a(3679));var V=o(a(8692));var j=o(a(9563));var H=[u["default"],v["default"],b["default"],y["default"],x["default"],A["default"],E["default"],M["default"],L["default"],P["default"],T["default"],I["default"],O["default"],S["default"],k["default"],D["default"],z["default"],R["default"],B["default"],V["default"],j["default"]];var U=function _default(r){var i=H.map((function(i){var a=i(r)||{};if(!a["class"]&&!a.constants){a={class:a}}return a}));return l.mergeDeep.apply(void 0,(0,s["default"])(i))};i["default"]=U;r.exports=i.default},3976:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var s=o(a(7400));var l=a(6249);var u=a(9801);var v="image/png";var b=-1;var y=0;var x=1;var A=2;var E=3;var M=4;var L=function _default(){return{mime:(0,s["default"])({},v,["png"]),constants:{MIME_PNG:v,PNG_FILTER_AUTO:b,PNG_FILTER_NONE:y,PNG_FILTER_SUB:x,PNG_FILTER_UP:A,PNG_FILTER_AVERAGE:E,PNG_FILTER_PATH:M},hasAlpha:(0,s["default"])({},v,true),decoders:(0,s["default"])({},v,l.PNG.sync.read),encoders:(0,s["default"])({},v,(function(r){var i=new l.PNG({width:r.bitmap.width,height:r.bitmap.height});i.data=r.bitmap.data;return l.PNG.sync.write(i,{width:r.bitmap.width,height:r.bitmap.height,deflateLevel:r._deflateLevel,deflateStrategy:r._deflateStrategy,filterType:r._filterType,colorType:typeof r._colorType==="number"?r._colorType:r._rgba?6:2,inputHasAlpha:r._rgba})})),class:{_deflateLevel:9,_deflateStrategy:3,_filterType:b,_colorType:null,deflateLevel:function deflateLevel(r,i){if(typeof r!=="number"){return u.throwError.call(this,"l must be a number",i)}if(r<0||r>9){return u.throwError.call(this,"l must be a number 0 - 9",i)}this._deflateLevel=Math.round(r);if((0,u.isNodePattern)(i)){i.call(this,null,this)}return this},deflateStrategy:function deflateStrategy(r,i){if(typeof r!=="number"){return u.throwError.call(this,"s must be a number",i)}if(r<0||r>3){return u.throwError.call(this,"s must be a number 0 - 3",i)}this._deflateStrategy=Math.round(r);if((0,u.isNodePattern)(i)){i.call(this,null,this)}return this},filterType:function filterType(r,i){if(typeof r!=="number"){return u.throwError.call(this,"n must be a number",i)}if(r<-1||r>4){return u.throwError.call(this,"n must be -1 (auto) or a number 0 - 4",i)}this._filterType=Math.round(r);if((0,u.isNodePattern)(i)){i.call(this,null,this)}return this},colorType:function colorType(r,i){if(typeof r!=="number"){return u.throwError.call(this,"s must be a number",i)}if(r!==0&&r!==2&&r!==4&&r!==6){return u.throwError.call(this,"s must be a number 0, 2, 4, 6.",i)}this._colorType=Math.round(r);if((0,u.isNodePattern)(i)){i.call(this,null,this)}return this}}}};i["default"]=L;r.exports=i.default},4210:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var s=o(a(7400));var l=o(a(6337));var u="image/tiff";var v=function _default(){return{mime:(0,s["default"])({},u,["tiff","tif"]),constants:{MIME_TIFF:u},decoders:(0,s["default"])({},u,(function(r){var i=l["default"].decode(r);var a=i[0];l["default"].decodeImages(r,i);var o=l["default"].toRGBA8(a);return{data:Buffer.from(o),width:a.t256[0],height:a.t257[0]}})),encoders:(0,s["default"])({},u,(function(r){var i=l["default"].encodeImage(r.bitmap.data,r.bitmap.width,r.bitmap.height);return Buffer.from(i)}))}};i["default"]=v;r.exports=i.default},674:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var s=a(1997);var l=o(a(1523));var u=o(a(3976));var v=o(a(2486));var b=o(a(4210));var y=o(a(8564));var x=function _default(){return(0,s.mergeDeep)((0,l["default"])(),(0,u["default"])(),(0,v["default"])(),(0,b["default"])(),(0,y["default"])())};i["default"]=x;r.exports=i.default},9801:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i.isNodePattern=isNodePattern;i.throwError=throwError;i.scan=scan;i.scanIterator=scanIterator;var s=o(a(7316));var l=s["default"].mark(scanIterator);function isNodePattern(r){if(typeof r==="undefined"){return false}if(typeof r!=="function"){throw new TypeError("Callback must be a function")}return true}function throwError(r,i){if(typeof r==="string"){r=new Error(r)}if(typeof i==="function"){return i.call(this,r)}throw r}function scan(r,i,a,o,s,l){i=Math.round(i);a=Math.round(a);o=Math.round(o);s=Math.round(s);for(var u=a;u<a+s;u++){for(var v=i;v<i+o;v++){var b=r.bitmap.width*u+v<<2;l.call(r,v,u,b)}}return r}function scanIterator(r,i,a,o,u){var v,b,y;return s["default"].wrap((function scanIterator$(s){while(1){switch(s.prev=s.next){case 0:i=Math.round(i);a=Math.round(a);o=Math.round(o);u=Math.round(u);v=a;case 5:if(!(v<a+u)){s.next=17;break}b=i;case 7:if(!(b<i+o)){s.next=14;break}y=r.bitmap.width*v+b<<2;s.next=11;return{x:b,y:v,idx:y,image:r};case 11:b++;s.next=7;break;case 14:v++;s.next=5;break;case 17:case"end":return s.stop()}}}),l)}},4370:(r,i,a)=>{var o=a(9842);function anyBase(r,i){var a=new o(r,i);return function(r){return a.convert(r)}}anyBase.BIN="01";anyBase.OCT="01234567";anyBase.DEC="0123456789";anyBase.HEX="0123456789abcdef";r.exports=anyBase},9842:r=>{"use strict";function Converter(r,i){if(!r||!i||!r.length||!i.length){throw new Error("Bad alphabet")}this.srcAlphabet=r;this.dstAlphabet=i}Converter.prototype.convert=function(r){var i,a,o,s={},l=this.srcAlphabet.length,u=this.dstAlphabet.length,v=r.length,b=typeof r==="string"?"":[];if(!this.isValid(r)){throw new Error('Number "'+r+'" contains of non-alphabetic digits ('+this.srcAlphabet+")")}if(this.srcAlphabet===this.dstAlphabet){return r}for(i=0;i<v;i++){s[i]=this.srcAlphabet.indexOf(r[i])}do{a=0;o=0;for(i=0;i<v;i++){a=a*l+s[i];if(a>=u){s[o++]=parseInt(a/u,10);a=a%u}else if(o>0){s[o++]=0}}v=o;b=this.dstAlphabet.slice(a,a+1).concat(b)}while(o!==0);return b};Converter.prototype.isValid=function(r){var i=0;for(;i<r.length;++i){if(this.srcAlphabet.indexOf(r[i])===-1){return false}}return true};r.exports=Converter},5989:(r,i,a)=>{var o=a(6223),s=a(1628);r.exports={encode:o,decode:s}},1628:r=>{function BmpDecoder(r,i){this.pos=0;this.buffer=r;this.is_with_alpha=!!i;this.bottom_up=true;this.flag=this.buffer.toString("utf-8",0,this.pos+=2);if(this.flag!="BM")throw new Error("Invalid BMP File");this.parseHeader();this.parseRGBA()}BmpDecoder.prototype.parseHeader=function(){this.fileSize=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.reserved=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.offset=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.headerSize=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.width=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.height=this.buffer.readInt32LE(this.pos);this.pos+=4;this.planes=this.buffer.readUInt16LE(this.pos);this.pos+=2;this.bitPP=this.buffer.readUInt16LE(this.pos);this.pos+=2;this.compress=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.rawSize=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.hr=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.vr=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.colors=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.importantColors=this.buffer.readUInt32LE(this.pos);this.pos+=4;if(this.bitPP===16&&this.is_with_alpha){this.bitPP=15}if(this.bitPP<15){var r=this.colors===0?1<<this.bitPP:this.colors;this.palette=new Array(r);for(var i=0;i<r;i++){var a=this.buffer.readUInt8(this.pos++);var o=this.buffer.readUInt8(this.pos++);var s=this.buffer.readUInt8(this.pos++);var l=this.buffer.readUInt8(this.pos++);this.palette[i]={red:s,green:o,blue:a,quad:l}}}if(this.height<0){this.height*=-1;this.bottom_up=false}};BmpDecoder.prototype.parseRGBA=function(){var r="bit"+this.bitPP;var i=this.width*this.height*4;this.data=new Buffer(i);this[r]()};BmpDecoder.prototype.bit1=function(){var r=Math.ceil(this.width/8);var i=r%4;var a=this.height>=0?this.height-1:-this.height;for(var a=this.height-1;a>=0;a--){var o=this.bottom_up?a:this.height-1-a;for(var s=0;s<r;s++){var l=this.buffer.readUInt8(this.pos++);var u=o*this.width*4+s*8*4;for(var v=0;v<8;v++){if(s*8+v<this.width){var b=this.palette[l>>7-v&1];this.data[u+v*4]=0;this.data[u+v*4+1]=b.blue;this.data[u+v*4+2]=b.green;this.data[u+v*4+3]=b.red}else{break}}}if(i!=0){this.pos+=4-i}}};BmpDecoder.prototype.bit4=function(){if(this.compress==2){this.data.fill(255);var r=0;var i=this.bottom_up?this.height-1:0;var a=false;while(r<this.data.length){var o=this.buffer.readUInt8(this.pos++);var s=this.buffer.readUInt8(this.pos++);if(o==0){if(s==0){if(this.bottom_up){i--}else{i++}r=i*this.width*4;a=false;continue}else if(s==1){break}else if(s==2){var l=this.buffer.readUInt8(this.pos++);var u=this.buffer.readUInt8(this.pos++);if(this.bottom_up){i-=u}else{i+=u}r+=u*this.width*4+l*4}else{var v=this.buffer.readUInt8(this.pos++);for(var b=0;b<s;b++){if(a){setPixelData.call(this,v&15)}else{setPixelData.call(this,(v&240)>>4)}if(b&1&&b+1<s){v=this.buffer.readUInt8(this.pos++)}a=!a}if((s+1>>1&1)==1){this.pos++}}}else{for(var b=0;b<o;b++){if(a){setPixelData.call(this,s&15)}else{setPixelData.call(this,(s&240)>>4)}a=!a}}}function setPixelData(i){var a=this.palette[i];this.data[r]=0;this.data[r+1]=a.blue;this.data[r+2]=a.green;this.data[r+3]=a.red;r+=4}}else{var y=Math.ceil(this.width/2);var x=y%4;for(var u=this.height-1;u>=0;u--){var A=this.bottom_up?u:this.height-1-u;for(var l=0;l<y;l++){var s=this.buffer.readUInt8(this.pos++);var r=A*this.width*4+l*2*4;var E=s>>4;var M=s&15;var L=this.palette[E];this.data[r]=0;this.data[r+1]=L.blue;this.data[r+2]=L.green;this.data[r+3]=L.red;if(l*2+1>=this.width)break;L=this.palette[M];this.data[r+4]=0;this.data[r+4+1]=L.blue;this.data[r+4+2]=L.green;this.data[r+4+3]=L.red}if(x!=0){this.pos+=4-x}}}};BmpDecoder.prototype.bit8=function(){if(this.compress==1){this.data.fill(255);var r=0;var i=this.bottom_up?this.height-1:0;while(r<this.data.length){var a=this.buffer.readUInt8(this.pos++);var o=this.buffer.readUInt8(this.pos++);if(a==0){if(o==0){if(this.bottom_up){i--}else{i++}r=i*this.width*4;continue}else if(o==1){break}else if(o==2){var s=this.buffer.readUInt8(this.pos++);var l=this.buffer.readUInt8(this.pos++);if(this.bottom_up){i-=l}else{i+=l}r+=l*this.width*4+s*4}else{for(var u=0;u<o;u++){var v=this.buffer.readUInt8(this.pos++);setPixelData.call(this,v)}if(o&1==1){this.pos++}}}else{for(var u=0;u<a;u++){setPixelData.call(this,o)}}}function setPixelData(i){var a=this.palette[i];this.data[r]=0;this.data[r+1]=a.blue;this.data[r+2]=a.green;this.data[r+3]=a.red;r+=4}}else{var b=this.width%4;for(var l=this.height-1;l>=0;l--){var y=this.bottom_up?l:this.height-1-l;for(var s=0;s<this.width;s++){var o=this.buffer.readUInt8(this.pos++);var r=y*this.width*4+s*4;if(o<this.palette.length){var x=this.palette[o];this.data[r]=0;this.data[r+1]=x.blue;this.data[r+2]=x.green;this.data[r+3]=x.red}else{this.data[r]=0;this.data[r+1]=255;this.data[r+2]=255;this.data[r+3]=255}}if(b!=0){this.pos+=4-b}}}};BmpDecoder.prototype.bit15=function(){var r=this.width%3;var i=parseInt("11111",2),a=i;for(var o=this.height-1;o>=0;o--){var s=this.bottom_up?o:this.height-1-o;for(var l=0;l<this.width;l++){var u=this.buffer.readUInt16LE(this.pos);this.pos+=2;var v=(u&a)/a*255|0;var b=(u>>5&a)/a*255|0;var y=(u>>10&a)/a*255|0;var x=u>>15?255:0;var A=s*this.width*4+l*4;this.data[A]=x;this.data[A+1]=v;this.data[A+2]=b;this.data[A+3]=y}this.pos+=r}};BmpDecoder.prototype.bit16=function(){var r=this.width%2*2;this.maskRed=31744;this.maskGreen=992;this.maskBlue=31;this.mask0=0;if(this.compress==3){this.maskRed=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.maskGreen=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.maskBlue=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.mask0=this.buffer.readUInt32LE(this.pos);this.pos+=4}var i=[0,0,0];for(var a=0;a<16;a++){if(this.maskRed>>a&1)i[0]++;if(this.maskGreen>>a&1)i[1]++;if(this.maskBlue>>a&1)i[2]++}i[1]+=i[0];i[2]+=i[1];i[0]=8-i[0];i[1]-=8;i[2]-=8;for(var o=this.height-1;o>=0;o--){var s=this.bottom_up?o:this.height-1-o;for(var l=0;l<this.width;l++){var u=this.buffer.readUInt16LE(this.pos);this.pos+=2;var v=(u&this.maskBlue)<<i[0];var b=(u&this.maskGreen)>>i[1];var y=(u&this.maskRed)>>i[2];var x=s*this.width*4+l*4;this.data[x]=0;this.data[x+1]=v;this.data[x+2]=b;this.data[x+3]=y}this.pos+=r}};BmpDecoder.prototype.bit24=function(){for(var r=this.height-1;r>=0;r--){var i=this.bottom_up?r:this.height-1-r;for(var a=0;a<this.width;a++){var o=this.buffer.readUInt8(this.pos++);var s=this.buffer.readUInt8(this.pos++);var l=this.buffer.readUInt8(this.pos++);var u=i*this.width*4+a*4;this.data[u]=0;this.data[u+1]=o;this.data[u+2]=s;this.data[u+3]=l}this.pos+=this.width%4}};BmpDecoder.prototype.bit32=function(){if(this.compress==3){this.maskRed=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.maskGreen=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.maskBlue=this.buffer.readUInt32LE(this.pos);this.pos+=4;this.mask0=this.buffer.readUInt32LE(this.pos);this.pos+=4;for(var r=this.height-1;r>=0;r--){var i=this.bottom_up?r:this.height-1-r;for(var a=0;a<this.width;a++){var o=this.buffer.readUInt8(this.pos++);var s=this.buffer.readUInt8(this.pos++);var l=this.buffer.readUInt8(this.pos++);var u=this.buffer.readUInt8(this.pos++);var v=i*this.width*4+a*4;this.data[v]=o;this.data[v+1]=s;this.data[v+2]=l;this.data[v+3]=u}}}else{for(var r=this.height-1;r>=0;r--){var i=this.bottom_up?r:this.height-1-r;for(var a=0;a<this.width;a++){var s=this.buffer.readUInt8(this.pos++);var l=this.buffer.readUInt8(this.pos++);var u=this.buffer.readUInt8(this.pos++);var o=this.buffer.readUInt8(this.pos++);var v=i*this.width*4+a*4;this.data[v]=o;this.data[v+1]=s;this.data[v+2]=l;this.data[v+3]=u}}}};BmpDecoder.prototype.getData=function(){return this.data};r.exports=function(r){var i=new BmpDecoder(r);return i}},6223:r=>{function BmpEncoder(r){this.buffer=r.data;this.width=r.width;this.height=r.height;this.extraBytes=this.width%4;this.rgbSize=this.height*(3*this.width+this.extraBytes);this.headerInfoSize=40;this.data=[];this.flag="BM";this.reserved=0;this.offset=54;this.fileSize=this.rgbSize+this.offset;this.planes=1;this.bitPP=24;this.compress=0;this.hr=0;this.vr=0;this.colors=0;this.importantColors=0}BmpEncoder.prototype.encode=function(){var r=new Buffer(this.offset+this.rgbSize);this.pos=0;r.write(this.flag,this.pos,2);this.pos+=2;r.writeUInt32LE(this.fileSize,this.pos);this.pos+=4;r.writeUInt32LE(this.reserved,this.pos);this.pos+=4;r.writeUInt32LE(this.offset,this.pos);this.pos+=4;r.writeUInt32LE(this.headerInfoSize,this.pos);this.pos+=4;r.writeUInt32LE(this.width,this.pos);this.pos+=4;r.writeInt32LE(-this.height,this.pos);this.pos+=4;r.writeUInt16LE(this.planes,this.pos);this.pos+=2;r.writeUInt16LE(this.bitPP,this.pos);this.pos+=2;r.writeUInt32LE(this.compress,this.pos);this.pos+=4;r.writeUInt32LE(this.rgbSize,this.pos);this.pos+=4;r.writeUInt32LE(this.hr,this.pos);this.pos+=4;r.writeUInt32LE(this.vr,this.pos);this.pos+=4;r.writeUInt32LE(this.colors,this.pos);this.pos+=4;r.writeUInt32LE(this.importantColors,this.pos);this.pos+=4;var i=0;var a=3*this.width+this.extraBytes;for(var o=0;o<this.height;o++){for(var s=0;s<this.width;s++){var l=this.pos+o*a+s*3;i++;r[l]=this.buffer[i++];r[l+1]=this.buffer[i++];r[l+2]=this.buffer[i++]}if(this.extraBytes>0){var u=this.pos+o*a+this.width*3;r.fill(0,u,u+this.extraBytes)}}return r};r.exports=function(r,i){if(typeof i==="undefined")i=100;var a=new BmpEncoder(r);var o=a.encode();return{data:o,width:r.width,height:r.height}}},6334:(r,i,a)=>{var o=a(4300).Buffer;r.exports=function(r,i){if(!o.isBuffer(r))return undefined;if(!o.isBuffer(i))return undefined;if(typeof r.equals==="function")return r.equals(i);if(r.length!==i.length)return false;for(var a=0;a<r.length;a++){if(r[a]!==i[a])return false}return true}},575:(r,i,a)=>{var o=a(108);function getGlobal(){return(1,eval)("this")}r.exports={create:function(r,i){i=i||getGlobal();if(r instanceof i.ArrayBuffer){var s=a(3845);return new o(new s(r,0,r.byteLength,true,i))}else{var l=a(9172);return new o(new l(r,0,r.length,true))}}}},9172:r=>{function BufferStream(r,i,a,o){this.buffer=r;this.offset=i||0;a=typeof a==="number"?a:r.length;this.endPosition=this.offset+a;this.setBigEndian(o)}BufferStream.prototype={setBigEndian:function(r){this.bigEndian=!!r},nextUInt8:function(){var r=this.buffer.readUInt8(this.offset);this.offset+=1;return r},nextInt8:function(){var r=this.buffer.readInt8(this.offset);this.offset+=1;return r},nextUInt16:function(){var r=this.bigEndian?this.buffer.readUInt16BE(this.offset):this.buffer.readUInt16LE(this.offset);this.offset+=2;return r},nextUInt32:function(){var r=this.bigEndian?this.buffer.readUInt32BE(this.offset):this.buffer.readUInt32LE(this.offset);this.offset+=4;return r},nextInt16:function(){var r=this.bigEndian?this.buffer.readInt16BE(this.offset):this.buffer.readInt16LE(this.offset);this.offset+=2;return r},nextInt32:function(){var r=this.bigEndian?this.buffer.readInt32BE(this.offset):this.buffer.readInt32LE(this.offset);this.offset+=4;return r},nextFloat:function(){var r=this.bigEndian?this.buffer.readFloatBE(this.offset):this.buffer.readFloatLE(this.offset);this.offset+=4;return r},nextDouble:function(){var r=this.bigEndian?this.buffer.readDoubleBE(this.offset):this.buffer.readDoubleLE(this.offset);this.offset+=8;return r},nextBuffer:function(r){var i=this.buffer.slice(this.offset,this.offset+r);this.offset+=r;return i},remainingLength:function(){return this.endPosition-this.offset},nextString:function(r){var i=this.buffer.toString("utf8",this.offset,this.offset+r);this.offset+=r;return i},mark:function(){var r=this;return{openWithOffset:function(i){i=(i||0)+this.offset;return new BufferStream(r.buffer,i,r.endPosition-i,r.bigEndian)},offset:this.offset}},offsetFrom:function(r){return this.offset-r.offset},skip:function(r){this.offset+=r},branch:function(r,i){i=typeof i==="number"?i:this.endPosition-(this.offset+r);return new BufferStream(this.buffer,this.offset+r,i,this.bigEndian)}};r.exports=BufferStream},4402:r=>{function parseNumber(r){return parseInt(r,10)}var i=3600;var a=60;function parseDateTimeParts(r,i){r=r.map(parseNumber);i=i.map(parseNumber);var a=r[0];var o=r[1]-1;var s=r[2];var l=i[0];var u=i[1];var v=i[2];var b=Date.UTC(a,o,s,l,u,v,0);var y=b/1e3;return y}function parseDateWithTimezoneFormat(r){var o=r.substr(0,10).split("-");var s=r.substr(11,8).split(":");var l=r.substr(19,6);var u=l.split(":").map(parseNumber);var v=u[0]*i+u[1]*a;var b=parseDateTimeParts(o,s);b-=v;if(typeof b==="number"&&!isNaN(b)){return b}}function parseDateWithSpecFormat(r){var i=r.split(" "),a=i[0].split(":"),o=i[1].split(":");var s=parseDateTimeParts(a,o);if(typeof s==="number"&&!isNaN(s)){return s}}function parseExifDate(r){var i=r.length===19&&r.charAt(4)===":";var a=r.length===25&&r.charAt(10)==="T";var o;if(a){return parseDateWithTimezoneFormat(r)}else if(i){return parseDateWithSpecFormat(r)}}r.exports={parseDateWithSpecFormat:parseDateWithSpecFormat,parseDateWithTimezoneFormat:parseDateWithTimezoneFormat,parseExifDate:parseExifDate}},3845:r=>{function DOMBufferStream(r,i,a,o,s,l){this.global=s;i=i||0;a=a||r.byteLength-i;this.arrayBuffer=r.slice(i,i+a);this.view=new s.DataView(this.arrayBuffer,0,this.arrayBuffer.byteLength);this.setBigEndian(o);this.offset=0;this.parentOffset=(l||0)+i}DOMBufferStream.prototype={setBigEndian:function(r){this.littleEndian=!r},nextUInt8:function(){var r=this.view.getUint8(this.offset);this.offset+=1;return r},nextInt8:function(){var r=this.view.getInt8(this.offset);this.offset+=1;return r},nextUInt16:function(){var r=this.view.getUint16(this.offset,this.littleEndian);this.offset+=2;return r},nextUInt32:function(){var r=this.view.getUint32(this.offset,this.littleEndian);this.offset+=4;return r},nextInt16:function(){var r=this.view.getInt16(this.offset,this.littleEndian);this.offset+=2;return r},nextInt32:function(){var r=this.view.getInt32(this.offset,this.littleEndian);this.offset+=4;return r},nextFloat:function(){var r=this.view.getFloat32(this.offset,this.littleEndian);this.offset+=4;return r},nextDouble:function(){var r=this.view.getFloat64(this.offset,this.littleEndian);this.offset+=8;return r},nextBuffer:function(r){var i=this.arrayBuffer.slice(this.offset,this.offset+r);this.offset+=r;return i},remainingLength:function(){return this.arrayBuffer.byteLength-this.offset},nextString:function(r){var i=this.arrayBuffer.slice(this.offset,this.offset+r);i=String.fromCharCode.apply(null,new this.global.Uint8Array(i));this.offset+=r;return i},mark:function(){var r=this;return{openWithOffset:function(i){i=(i||0)+this.offset;return new DOMBufferStream(r.arrayBuffer,i,r.arrayBuffer.byteLength-i,!r.littleEndian,r.global,r.parentOffset)},offset:this.offset,getParentOffset:function(){return r.parentOffset}}},offsetFrom:function(r){return this.parentOffset+this.offset-(r.offset+r.getParentOffset())},skip:function(r){this.offset+=r},branch:function(r,i){i=typeof i==="number"?i:this.arrayBuffer.byteLength-(this.offset+r);return new DOMBufferStream(this.arrayBuffer,this.offset+r,i,!this.littleEndian,this.global,this.parentOffset)}};r.exports=DOMBufferStream},1257:r=>{r.exports={exif:{1:"InteropIndex",2:"InteropVersion",11:"ProcessingSoftware",254:"SubfileType",255:"OldSubfileType",256:"ImageWidth",257:"ImageHeight",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",263:"Thresholding",264:"CellWidth",265:"CellLength",266:"FillOrder",269:"DocumentName",270:"ImageDescription",271:"Make",272:"Model",273:"StripOffsets",274:"Orientation",277:"SamplesPerPixel",278:"RowsPerStrip",279:"StripByteCounts",280:"MinSampleValue",281:"MaxSampleValue",282:"XResolution",283:"YResolution",284:"PlanarConfiguration",285:"PageName",286:"XPosition",287:"YPosition",288:"FreeOffsets",289:"FreeByteCounts",290:"GrayResponseUnit",291:"GrayResponseCurve",292:"T4Options",293:"T6Options",296:"ResolutionUnit",297:"PageNumber",300:"ColorResponseUnit",301:"TransferFunction",305:"Software",306:"ModifyDate",315:"Artist",316:"HostComputer",317:"Predictor",318:"WhitePoint",319:"PrimaryChromaticities",320:"ColorMap",321:"HalftoneHints",322:"TileWidth",323:"TileLength",324:"TileOffsets",325:"TileByteCounts",326:"BadFaxLines",327:"CleanFaxData",328:"ConsecutiveBadFaxLines",330:"SubIFD",332:"InkSet",333:"InkNames",334:"NumberofInks",336:"DotRange",337:"TargetPrinter",338:"ExtraSamples",339:"SampleFormat",340:"SMinSampleValue",341:"SMaxSampleValue",342:"TransferRange",343:"ClipPath",344:"XClipPathUnits",345:"YClipPathUnits",346:"Indexed",347:"JPEGTables",351:"OPIProxy",400:"GlobalParametersIFD",401:"ProfileType",402:"FaxProfile",403:"CodingMethods",404:"VersionYear",405:"ModeNumber",433:"Decode",434:"DefaultImageColor",435:"T82Options",437:"JPEGTables",512:"JPEGProc",513:"ThumbnailOffset",514:"ThumbnailLength",515:"JPEGRestartInterval",517:"JPEGLosslessPredictors",518:"JPEGPointTransforms",519:"JPEGQTables",520:"JPEGDCTables",521:"JPEGACTables",529:"YCbCrCoefficients",530:"YCbCrSubSampling",531:"YCbCrPositioning",532:"ReferenceBlackWhite",559:"StripRowCounts",700:"ApplicationNotes",999:"USPTOMiscellaneous",4096:"RelatedImageFileFormat",4097:"RelatedImageWidth",4098:"RelatedImageHeight",18246:"Rating",18247:"XP_DIP_XML",18248:"StitchInfo",18249:"RatingPercent",32781:"ImageID",32931:"WangTag1",32932:"WangAnnotation",32933:"WangTag3",32934:"WangTag4",32995:"Matteing",32996:"DataType",32997:"ImageDepth",32998:"TileDepth",33405:"Model2",33421:"CFARepeatPatternDim",33422:"CFAPattern2",33423:"BatteryLevel",33424:"KodakIFD",33432:"Copyright",33434:"ExposureTime",33437:"FNumber",33445:"MDFileTag",33446:"MDScalePixel",33447:"MDColorTable",33448:"MDLabName",33449:"MDSampleInfo",33450:"MDPrepDate",33451:"MDPrepTime",33452:"MDFileUnits",33550:"PixelScale",33589:"AdventScale",33590:"AdventRevision",33628:"UIC1Tag",33629:"UIC2Tag",33630:"UIC3Tag",33631:"UIC4Tag",33723:"IPTC-NAA",33918:"IntergraphPacketData",33919:"IntergraphFlagRegisters",33920:"IntergraphMatrix",33921:"INGRReserved",33922:"ModelTiePoint",34016:"Site",34017:"ColorSequence",34018:"IT8Header",34019:"RasterPadding",34020:"BitsPerRunLength",34021:"BitsPerExtendedRunLength",34022:"ColorTable",34023:"ImageColorIndicator",34024:"BackgroundColorIndicator",34025:"ImageColorValue",34026:"BackgroundColorValue",34027:"PixelIntensityRange",34028:"TransparencyIndicator",34029:"ColorCharacterization",34030:"HCUsage",34031:"TrapIndicator",34032:"CMYKEquivalent",34118:"SEMInfo",34152:"AFCP_IPTC",34232:"PixelMagicJBIGOptions",34264:"ModelTransform",34306:"WB_GRGBLevels",34310:"LeafData",34377:"PhotoshopSettings",34665:"ExifOffset",34675:"ICC_Profile",34687:"TIFF_FXExtensions",34688:"MultiProfiles",34689:"SharedData",34690:"T88Options",34732:"ImageLayer",34735:"GeoTiffDirectory",34736:"GeoTiffDoubleParams",34737:"GeoTiffAsciiParams",34850:"ExposureProgram",34852:"SpectralSensitivity",34853:"GPSInfo",34855:"ISO",34856:"Opto-ElectricConvFactor",34857:"Interlace",34858:"TimeZoneOffset",34859:"SelfTimerMode",34864:"SensitivityType",34865:"StandardOutputSensitivity",34866:"RecommendedExposureIndex",34867:"ISOSpeed",34868:"ISOSpeedLatitudeyyy",34869:"ISOSpeedLatitudezzz",34908:"FaxRecvParams",34909:"FaxSubAddress",34910:"FaxRecvTime",34954:"LeafSubIFD",36864:"ExifVersion",36867:"DateTimeOriginal",36868:"CreateDate",37121:"ComponentsConfiguration",37122:"CompressedBitsPerPixel",37377:"ShutterSpeedValue",37378:"ApertureValue",37379:"BrightnessValue",37380:"ExposureCompensation",37381:"MaxApertureValue",37382:"SubjectDistance",37383:"MeteringMode",37384:"LightSource",37385:"Flash",37386:"FocalLength",37387:"FlashEnergy",37388:"SpatialFrequencyResponse",37389:"Noise",37390:"FocalPlaneXResolution",37391:"FocalPlaneYResolution",37392:"FocalPlaneResolutionUnit",37393:"ImageNumber",37394:"SecurityClassification",37395:"ImageHistory",37396:"SubjectArea",37397:"ExposureIndex",37398:"TIFF-EPStandardID",37399:"SensingMethod",37434:"CIP3DataFile",37435:"CIP3Sheet",37436:"CIP3Side",37439:"StoNits",37500:"MakerNote",37510:"UserComment",37520:"SubSecTime",37521:"SubSecTimeOriginal",37522:"SubSecTimeDigitized",37679:"MSDocumentText",37680:"MSPropertySetStorage",37681:"MSDocumentTextPosition",37724:"ImageSourceData",40091:"XPTitle",40092:"XPComment",40093:"XPAuthor",40094:"XPKeywords",40095:"XPSubject",40960:"FlashpixVersion",40961:"ColorSpace",40962:"ExifImageWidth",40963:"ExifImageHeight",40964:"RelatedSoundFile",40965:"InteropOffset",41483:"FlashEnergy",41484:"SpatialFrequencyResponse",41485:"Noise",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41489:"ImageNumber",41490:"SecurityClassification",41491:"ImageHistory",41492:"SubjectLocation",41493:"ExposureIndex",41494:"TIFF-EPStandardID",41495:"SensingMethod",41728:"FileSource",41729:"SceneType",41730:"CFAPattern",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41988:"DigitalZoomRatio",41989:"FocalLengthIn35mmFormat",41990:"SceneCaptureType",41991:"GainControl",41992:"Contrast",41993:"Saturation",41994:"Sharpness",41995:"DeviceSettingDescription",41996:"SubjectDistanceRange",42016:"ImageUniqueID",42032:"OwnerName",42033:"SerialNumber",42034:"LensInfo",42035:"LensMake",42036:"LensModel",42037:"LensSerialNumber",42112:"GDALMetadata",42113:"GDALNoData",42240:"Gamma",44992:"ExpandSoftware",44993:"ExpandLens",44994:"ExpandFilm",44995:"ExpandFilterLens",44996:"ExpandScanner",44997:"ExpandFlashLamp",48129:"PixelFormat",48130:"Transformation",48131:"Uncompressed",48132:"ImageType",48256:"ImageWidth",48257:"ImageHeight",48258:"WidthResolution",48259:"HeightResolution",48320:"ImageOffset",48321:"ImageByteCount",48322:"AlphaOffset",48323:"AlphaByteCount",48324:"ImageDataDiscard",48325:"AlphaDataDiscard",50215:"OceScanjobDesc",50216:"OceApplicationSelector",50217:"OceIDNumber",50218:"OceImageLogic",50255:"Annotations",50341:"PrintIM",50560:"USPTOOriginalContentType",50706:"DNGVersion",50707:"DNGBackwardVersion",50708:"UniqueCameraModel",50709:"LocalizedCameraModel",50710:"CFAPlaneColor",50711:"CFALayout",50712:"LinearizationTable",50713:"BlackLevelRepeatDim",50714:"BlackLevel",50715:"BlackLevelDeltaH",50716:"BlackLevelDeltaV",50717:"WhiteLevel",50718:"DefaultScale",50719:"DefaultCropOrigin",50720:"DefaultCropSize",50721:"ColorMatrix1",50722:"ColorMatrix2",50723:"CameraCalibration1",50724:"CameraCalibration2",50725:"ReductionMatrix1",50726:"ReductionMatrix2",50727:"AnalogBalance",50728:"AsShotNeutral",50729:"AsShotWhiteXY",50730:"BaselineExposure",50731:"BaselineNoise",50732:"BaselineSharpness",50733:"BayerGreenSplit",50734:"LinearResponseLimit",50735:"CameraSerialNumber",50736:"DNGLensInfo",50737:"ChromaBlurRadius",50738:"AntiAliasStrength",50739:"ShadowScale",50740:"DNGPrivateData",50741:"MakerNoteSafety",50752:"RawImageSegmentation",50778:"CalibrationIlluminant1",50779:"CalibrationIlluminant2",50780:"BestQualityScale",50781:"RawDataUniqueID",50784:"AliasLayerMetadata",50827:"OriginalRawFileName",50828:"OriginalRawFileData",50829:"ActiveArea",50830:"MaskedAreas",50831:"AsShotICCProfile",50832:"AsShotPreProfileMatrix",50833:"CurrentICCProfile",50834:"CurrentPreProfileMatrix",50879:"ColorimetricReference",50898:"PanasonicTitle",50899:"PanasonicTitle2",50931:"CameraCalibrationSig",50932:"ProfileCalibrationSig",50933:"ProfileIFD",50934:"AsShotProfileName",50935:"NoiseReductionApplied",50936:"ProfileName",50937:"ProfileHueSatMapDims",50938:"ProfileHueSatMapData1",50939:"ProfileHueSatMapData2",50940:"ProfileToneCurve",50941:"ProfileEmbedPolicy",50942:"ProfileCopyright",50964:"ForwardMatrix1",50965:"ForwardMatrix2",50966:"PreviewApplicationName",50967:"PreviewApplicationVersion",50968:"PreviewSettingsName",50969:"PreviewSettingsDigest",50970:"PreviewColorSpace",50971:"PreviewDateTime",50972:"RawImageDigest",50973:"OriginalRawFileDigest",50974:"SubTileBlockSize",50975:"RowInterleaveFactor",50981:"ProfileLookTableDims",50982:"ProfileLookTableData",51008:"OpcodeList1",51009:"OpcodeList2",51022:"OpcodeList3",51041:"NoiseProfile",51043:"TimeCodes",51044:"FrameRate",51058:"TStop",51081:"ReelName",51089:"OriginalDefaultFinalSize",51090:"OriginalBestQualitySize",51091:"OriginalDefaultCropSize",51105:"CameraLabel",51107:"ProfileHueSatMapEncoding",51108:"ProfileLookTableEncoding",51109:"BaselineExposureOffset",51110:"DefaultBlackRender",51111:"NewRawImageDigest",51112:"RawToPreviewGain",51125:"DefaultUserCrop",59932:"Padding",59933:"OffsetSchema",65e3:"OwnerName",65001:"SerialNumber",65002:"Lens",65024:"KDC_IFD",65100:"RawFile",65101:"Converter",65102:"WhiteBalance",65105:"Exposure",65106:"Shadows",65107:"Brightness",65108:"Contrast",65109:"Saturation",65110:"Sharpness",65111:"Smoothness",65112:"MoireFilter"},gps:{0:"GPSVersionID",1:"GPSLatitudeRef",2:"GPSLatitude",3:"GPSLongitudeRef",4:"GPSLongitude",5:"GPSAltitudeRef",6:"GPSAltitude",7:"GPSTimeStamp",8:"GPSSatellites",9:"GPSStatus",10:"GPSMeasureMode",11:"GPSDOP",12:"GPSSpeedRef",13:"GPSSpeed",14:"GPSTrackRef",15:"GPSTrack",16:"GPSImgDirectionRef",17:"GPSImgDirection",18:"GPSMapDatum",19:"GPSDestLatitudeRef",20:"GPSDestLatitude",21:"GPSDestLongitudeRef",22:"GPSDestLongitude",23:"GPSDestBearingRef",24:"GPSDestBearing",25:"GPSDestDistanceRef",26:"GPSDestDistance",27:"GPSProcessingMethod",28:"GPSAreaInformation",29:"GPSDateStamp",30:"GPSDifferential",31:"GPSHPositioningError"}}},4294:r=>{function readExifValue(r,i){switch(r){case 1:return i.nextUInt8();case 3:return i.nextUInt16();case 4:return i.nextUInt32();case 5:return[i.nextUInt32(),i.nextUInt32()];case 6:return i.nextInt8();case 8:return i.nextUInt16();case 9:return i.nextUInt32();case 10:return[i.nextInt32(),i.nextInt32()];case 11:return i.nextFloat();case 12:return i.nextDouble();default:throw new Error("Invalid format while decoding: "+r)}}function getBytesPerComponent(r){switch(r){case 1:case 2:case 6:case 7:return 1;case 3:case 8:return 2;case 4:case 9:case 11:return 4;case 5:case 10:case 12:return 8;default:return 0}}function readExifTag(r,i){var a=i.nextUInt16(),o=i.nextUInt16(),s=getBytesPerComponent(o),l=i.nextUInt32(),u=s*l,v,b,y;if(u>4){i=r.openWithOffset(i.nextUInt32())}if(o===2){v=i.nextString(l);var x=v.indexOf("\0");if(x!==-1){v=v.substr(0,x)}}else if(o===7){v=i.nextBuffer(l)}else if(o!==0){v=[];for(y=0;y<l;++y){v.push(readExifValue(o,i))}}if(u<4){i.skip(4-u)}return[a,v,o]}function readIFDSection(r,i,a){var o=i.nextUInt16(),s,l;for(l=0;l<o;++l){s=readExifTag(r,i);a(s[0],s[1],s[2])}}function readHeader(r){var i=r.nextString(6);if(i!=="Exif\0\0"){throw new Error("Invalid EXIF header")}var a=r.mark();var o=r.nextUInt16();if(o===18761){r.setBigEndian(false)}else if(o===19789){r.setBigEndian(true)}else{throw new Error("Invalid TIFF header")}if(r.nextUInt16()!==42){throw new Error("Invalid TIFF data")}return a}r.exports={IFD0:1,IFD1:2,GPSIFD:3,SubIFD:4,InteropIFD:5,parseTags:function(r,i){var a;try{a=readHeader(r)}catch(r){return false}var o,s,l;var u=a.openWithOffset(r.nextUInt32()),v=this.IFD0;readIFDSection(a,u,(function(r,a,l){switch(r){case 34853:s=a[0];break;case 34665:o=a[0];break;default:i(v,r,a,l);break}}));var b=u.nextUInt32();if(b!==0){var y=a.openWithOffset(b);readIFDSection(a,y,i.bind(null,this.IFD1))}if(s){var x=a.openWithOffset(s);readIFDSection(a,x,i.bind(null,this.GPSIFD))}if(o){var A=a.openWithOffset(o),E=this.InteropIFD;readIFDSection(a,A,(function(r,a,o){if(r===40965){l=a[0]}else{i(E,r,a,o)}}))}if(l){var M=a.openWithOffset(l);readIFDSection(a,M,i.bind(null,this.InteropIFD))}return true}}},1438:r=>{r.exports={parseSections:function(r,i){var a,o;r.setBigEndian(true);while(r.remainingLength()>0&&o!==218){if(r.nextUInt8()!==255){throw new Error("Invalid JPEG section offset")}o=r.nextUInt8();if(o>=208&&o<=217||o===218){a=0}else{a=r.nextUInt16()-2}i(o,r.branch(0,a));r.skip(a)}},getSizeFromSOFSection:function(r){r.skip(1);return{height:r.nextUInt16(),width:r.nextUInt16()}},getSectionName:function(r){var i,a;switch(r){case 216:i="SOI";break;case 196:i="DHT";break;case 219:i="DQT";break;case 221:i="DRI";break;case 218:i="SOS";break;case 254:i="COM";break;case 217:i="EOI";break;default:if(r>=224&&r<=239){i="APP";a=r-224}else if(r>=192&&r<=207&&r!==196&&r!==200&&r!==204){i="SOF";a=r-192}else if(r>=208&&r<=215){i="RST";a=r-208}break}var o={name:i};if(typeof a==="number"){o.index=a}return o}}},108:(r,i,a)=>{var o=a(1438),s=a(4294),l=a(5160);function ExifResult(r,i,a,o,s,l,u){this.startMarker=r;this.tags=i;this.imageSize=a;this.thumbnailOffset=o;this.thumbnailLength=s;this.thumbnailType=l;this.app1Offset=u}ExifResult.prototype={hasThumbnail:function(r){if(!this.thumbnailOffset||!this.thumbnailLength){return false}if(typeof r!=="string"){return true}if(r.toLowerCase().trim()==="image/jpeg"){return this.thumbnailType===6}if(r.toLowerCase().trim()==="image/tiff"){return this.thumbnailType===1}return false},getThumbnailOffset:function(){return this.app1Offset+6+this.thumbnailOffset},getThumbnailLength:function(){return this.thumbnailLength},getThumbnailBuffer:function(){return this._getThumbnailStream().nextBuffer(this.thumbnailLength)},_getThumbnailStream:function(){return this.startMarker.openWithOffset(this.getThumbnailOffset())},getImageSize:function(){return this.imageSize},getThumbnailSize:function(){var r=this._getThumbnailStream(),i;o.parseSections(r,(function(r,a){if(o.getSectionName(r).name==="SOF"){i=o.getSizeFromSOFSection(a)}}));return i}};function Parser(r){this.stream=r;this.flags={readBinaryTags:false,resolveTagNames:true,simplifyValues:true,imageSize:true,hidePointers:true,returnTags:true}}Parser.prototype={enableBinaryFields:function(r){this.flags.readBinaryTags=!!r;return this},enablePointers:function(r){this.flags.hidePointers=!r;return this},enableTagNames:function(r){this.flags.resolveTagNames=!!r;return this},enableImageSize:function(r){this.flags.imageSize=!!r;return this},enableReturnTags:function(r){this.flags.returnTags=!!r;return this},enableSimpleValues:function(r){this.flags.simplifyValues=!!r;return this},parse:function(){var r=this.stream.mark(),i=r.openWithOffset(0),u=this.flags,v,b,y,x,A,E,M,L,P;if(u.resolveTagNames){M=a(1257)}if(u.resolveTagNames){v={};L=function(r){return v[r.name]};P=function(r,i){v[r.name]=i}}else{v=[];L=function(r){var i;for(i=0;i<v.length;++i){if(v[i].type===r.type&&v[i].section===r.section){return v.value}}};P=function(r,i){var a;for(a=0;a<v.length;++a){if(v[a].type===r.type&&v[a].section===r.section){v.value=i;return}}}}o.parseSections(i,(function(i,a){var L,P=a.offsetFrom(r);if(i===225){L=s.parseTags(a,(function(r,i,a,o){if(!u.readBinaryTags&&o===7){return}if(i===513){y=a[0];if(u.hidePointers){return}}else if(i===514){x=a[0];if(u.hidePointers){return}}else if(i===259){A=a[0];if(u.hidePointers){return}}if(!u.returnTags){return}if(u.simplifyValues){a=l.simplifyValue(a,o)}if(u.resolveTagNames){var b=r===s.GPSIFD?M.gps:M.exif;var E=b[i];if(!E){E=M.exif[i]}if(!v.hasOwnProperty(E)){v[E]=a}}else{v.push({section:r,type:i,value:a})}}));if(L){E=P}}else if(u.imageSize&&o.getSectionName(i).name==="SOF"){b=o.getSizeFromSOFSection(a)}}));if(u.simplifyValues){l.castDegreeValues(L,P);l.castDateValues(L,P)}return new ExifResult(r,v,b,y,x,A,E)}};r.exports=Parser},5160:(r,i,a)=>{var o=a(4294);var s=a(4402);var l=[{section:o.GPSIFD,type:2,name:"GPSLatitude",refType:1,refName:"GPSLatitudeRef",posVal:"N"},{section:o.GPSIFD,type:4,name:"GPSLongitude",refType:3,refName:"GPSLongitudeRef",posVal:"E"}];var u=[{section:o.SubIFD,type:306,name:"ModifyDate"},{section:o.SubIFD,type:36867,name:"DateTimeOriginal"},{section:o.SubIFD,type:36868,name:"CreateDate"},{section:o.SubIFD,type:306,name:"ModifyDate"}];r.exports={castDegreeValues:function(r,i){l.forEach((function(a){var o=r(a);if(o){var s=r({section:a.section,type:a.refType,name:a.refName});var l=s===a.posVal?1:-1;var u=(o[0]+o[1]/60+o[2]/3600)*l;i(a,u)}}))},castDateValues:function(r,i){u.forEach((function(a){var o=r(a);if(o){var l=s.parseExifDate(o);if(typeof l!=="undefined"){i(a,l)}}}))},simplifyValue:function(r,i){if(Array.isArray(r)){r=r.map((function(r){if(i===10||i===5){return r[0]/r[1]}return r}));if(r.length===1){r=r[0]}}return r}}},9936:r=>{"use strict";const toBytes=r=>[...r].map((r=>r.charCodeAt(0)));const i=toBytes("META-INF/mozilla.rsa");const a=toBytes("[Content_Types].xml");const o=toBytes("_rels/.rels");r.exports=r=>{const s=r instanceof Uint8Array?r:new Uint8Array(r);if(!(s&&s.length>1)){return null}const check=(r,i)=>{i=Object.assign({offset:0},i);for(let a=0;a<r.length;a++){if(i.mask){if(r[a]!==(i.mask[a]&s[a+i.offset])){return false}}else if(r[a]!==s[a+i.offset]){return false}}return true};const checkString=(r,i)=>check(toBytes(r),i);if(check([255,216,255])){return{ext:"jpg",mime:"image/jpeg"}}if(check([137,80,78,71,13,10,26,10])){return{ext:"png",mime:"image/png"}}if(check([71,73,70])){return{ext:"gif",mime:"image/gif"}}if(check([87,69,66,80],{offset:8})){return{ext:"webp",mime:"image/webp"}}if(check([70,76,73,70])){return{ext:"flif",mime:"image/flif"}}if((check([73,73,42,0])||check([77,77,0,42]))&&check([67,82],{offset:8})){return{ext:"cr2",mime:"image/x-canon-cr2"}}if(check([73,73,42,0])||check([77,77,0,42])){return{ext:"tif",mime:"image/tiff"}}if(check([66,77])){return{ext:"bmp",mime:"image/bmp"}}if(check([73,73,188])){return{ext:"jxr",mime:"image/vnd.ms-photo"}}if(check([56,66,80,83])){return{ext:"psd",mime:"image/vnd.adobe.photoshop"}}if(check([80,75,3,4])){if(check([109,105,109,101,116,121,112,101,97,112,112,108,105,99,97,116,105,111,110,47,101,112,117,98,43,122,105,112],{offset:30})){return{ext:"epub",mime:"application/epub+zip"}}if(check(i,{offset:30})){return{ext:"xpi",mime:"application/x-xpinstall"}}if(checkString("mimetypeapplication/vnd.oasis.opendocument.text",{offset:30})){return{ext:"odt",mime:"application/vnd.oasis.opendocument.text"}}if(checkString("mimetypeapplication/vnd.oasis.opendocument.spreadsheet",{offset:30})){return{ext:"ods",mime:"application/vnd.oasis.opendocument.spreadsheet"}}if(checkString("mimetypeapplication/vnd.oasis.opendocument.presentation",{offset:30})){return{ext:"odp",mime:"application/vnd.oasis.opendocument.presentation"}}const findNextZipHeaderIndex=(r,i=0)=>r.findIndex(((r,a,o)=>a>=i&&o[a]===80&&o[a+1]===75&&o[a+2]===3&&o[a+3]===4));let r=0;let l=false;let u=null;do{const i=r+30;if(!l){l=check(a,{offset:i})||check(o,{offset:i})}if(!u){if(checkString("word/",{offset:i})){u={ext:"docx",mime:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"}}else if(checkString("ppt/",{offset:i})){u={ext:"pptx",mime:"application/vnd.openxmlformats-officedocument.presentationml.presentation"}}else if(checkString("xl/",{offset:i})){u={ext:"xlsx",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"}}}if(l&&u){return u}r=findNextZipHeaderIndex(s,i)}while(r>=0);if(u){return u}}if(check([80,75])&&(s[2]===3||s[2]===5||s[2]===7)&&(s[3]===4||s[3]===6||s[3]===8)){return{ext:"zip",mime:"application/zip"}}if(check([117,115,116,97,114],{offset:257})){return{ext:"tar",mime:"application/x-tar"}}if(check([82,97,114,33,26,7])&&(s[6]===0||s[6]===1)){return{ext:"rar",mime:"application/x-rar-compressed"}}if(check([31,139,8])){return{ext:"gz",mime:"application/gzip"}}if(check([66,90,104])){return{ext:"bz2",mime:"application/x-bzip2"}}if(check([55,122,188,175,39,28])){return{ext:"7z",mime:"application/x-7z-compressed"}}if(check([120,1])){return{ext:"dmg",mime:"application/x-apple-diskimage"}}if(check([51,103,112,53])||check([0,0,0])&&check([102,116,121,112],{offset:4})&&(check([109,112,52,49],{offset:8})||check([109,112,52,50],{offset:8})||check([105,115,111,109],{offset:8})||check([105,115,111,50],{offset:8})||check([109,109,112,52],{offset:8})||check([77,52,86],{offset:8})||check([100,97,115,104],{offset:8}))){return{ext:"mp4",mime:"video/mp4"}}if(check([77,84,104,100])){return{ext:"mid",mime:"audio/midi"}}if(check([26,69,223,163])){const r=s.subarray(4,4+4096);const i=r.findIndex(((r,i,a)=>a[i]===66&&a[i+1]===130));if(i!==-1){const a=i+3;const findDocType=i=>[...i].every(((i,o)=>r[a+o]===i.charCodeAt(0)));if(findDocType("matroska")){return{ext:"mkv",mime:"video/x-matroska"}}if(findDocType("webm")){return{ext:"webm",mime:"video/webm"}}}}if(check([0,0,0,20,102,116,121,112,113,116,32,32])||check([102,114,101,101],{offset:4})||check([102,116,121,112,113,116,32,32],{offset:4})||check([109,100,97,116],{offset:4})||check([119,105,100,101],{offset:4})){return{ext:"mov",mime:"video/quicktime"}}if(check([82,73,70,70])){if(check([65,86,73],{offset:8})){return{ext:"avi",mime:"video/vnd.avi"}}if(check([87,65,86,69],{offset:8})){return{ext:"wav",mime:"audio/vnd.wave"}}if(check([81,76,67,77],{offset:8})){return{ext:"qcp",mime:"audio/qcelp"}}}if(check([48,38,178,117,142,102,207,17,166,217])){return{ext:"wmv",mime:"video/x-ms-wmv"}}if(check([0,0,1,186])||check([0,0,1,179])){return{ext:"mpg",mime:"video/mpeg"}}if(check([102,116,121,112,51,103],{offset:4})){return{ext:"3gp",mime:"video/3gpp"}}for(let r=0;r<2&&r<s.length-16;r++){if(check([73,68,51],{offset:r})||check([255,226],{offset:r,mask:[255,226]})){return{ext:"mp3",mime:"audio/mpeg"}}if(check([255,228],{offset:r,mask:[255,228]})){return{ext:"mp2",mime:"audio/mpeg"}}if(check([255,248],{offset:r,mask:[255,252]})){return{ext:"mp2",mime:"audio/mpeg"}}if(check([255,240],{offset:r,mask:[255,252]})){return{ext:"mp4",mime:"audio/mpeg"}}}if(check([102,116,121,112,77,52,65],{offset:4})||check([77,52,65,32])){return{ext:"m4a",mime:"audio/mp4"}}if(check([79,112,117,115,72,101,97,100],{offset:28})){return{ext:"opus",mime:"audio/opus"}}if(check([79,103,103,83])){if(check([128,116,104,101,111,114,97],{offset:28})){return{ext:"ogv",mime:"video/ogg"}}if(check([1,118,105,100,101,111,0],{offset:28})){return{ext:"ogm",mime:"video/ogg"}}if(check([127,70,76,65,67],{offset:28})){return{ext:"oga",mime:"audio/ogg"}}if(check([83,112,101,101,120,32,32],{offset:28})){return{ext:"spx",mime:"audio/ogg"}}if(check([1,118,111,114,98,105,115],{offset:28})){return{ext:"ogg",mime:"audio/ogg"}}return{ext:"ogx",mime:"application/ogg"}}if(check([102,76,97,67])){return{ext:"flac",mime:"audio/x-flac"}}if(check([77,65,67,32])){return{ext:"ape",mime:"audio/ape"}}if(check([119,118,112,107])){return{ext:"wv",mime:"audio/wavpack"}}if(check([35,33,65,77,82,10])){return{ext:"amr",mime:"audio/amr"}}if(check([37,80,68,70])){return{ext:"pdf",mime:"application/pdf"}}if(check([77,90])){return{ext:"exe",mime:"application/x-msdownload"}}if((s[0]===67||s[0]===70)&&check([87,83],{offset:1})){return{ext:"swf",mime:"application/x-shockwave-flash"}}if(check([123,92,114,116,102])){return{ext:"rtf",mime:"application/rtf"}}if(check([0,97,115,109])){return{ext:"wasm",mime:"application/wasm"}}if(check([119,79,70,70])&&(check([0,1,0,0],{offset:4})||check([79,84,84,79],{offset:4}))){return{ext:"woff",mime:"font/woff"}}if(check([119,79,70,50])&&(check([0,1,0,0],{offset:4})||check([79,84,84,79],{offset:4}))){return{ext:"woff2",mime:"font/woff2"}}if(check([76,80],{offset:34})&&(check([0,0,1],{offset:8})||check([1,0,2],{offset:8})||check([2,0,2],{offset:8}))){return{ext:"eot",mime:"application/vnd.ms-fontobject"}}if(check([0,1,0,0,0])){return{ext:"ttf",mime:"font/ttf"}}if(check([79,84,84,79,0])){return{ext:"otf",mime:"font/otf"}}if(check([0,0,1,0])){return{ext:"ico",mime:"image/x-icon"}}if(check([0,0,2,0])){return{ext:"cur",mime:"image/x-icon"}}if(check([70,76,86,1])){return{ext:"flv",mime:"video/x-flv"}}if(check([37,33])){return{ext:"ps",mime:"application/postscript"}}if(check([253,55,122,88,90,0])){return{ext:"xz",mime:"application/x-xz"}}if(check([83,81,76,105])){return{ext:"sqlite",mime:"application/x-sqlite3"}}if(check([78,69,83,26])){return{ext:"nes",mime:"application/x-nintendo-nes-rom"}}if(check([67,114,50,52])){return{ext:"crx",mime:"application/x-google-chrome-extension"}}if(check([77,83,67,70])||check([73,83,99,40])){return{ext:"cab",mime:"application/vnd.ms-cab-compressed"}}if(check([33,60,97,114,99,104,62,10,100,101,98,105,97,110,45,98,105,110,97,114,121])){return{ext:"deb",mime:"application/x-deb"}}if(check([33,60,97,114,99,104,62])){return{ext:"ar",mime:"application/x-unix-archive"}}if(check([237,171,238,219])){return{ext:"rpm",mime:"application/x-rpm"}}if(check([31,160])||check([31,157])){return{ext:"Z",mime:"application/x-compress"}}if(check([76,90,73,80])){return{ext:"lz",mime:"application/x-lzip"}}if(check([208,207,17,224,161,177,26,225])){return{ext:"msi",mime:"application/x-msi"}}if(check([6,14,43,52,2,5,1,1,13,1,2,1,1,2])){return{ext:"mxf",mime:"application/mxf"}}if(check([71],{offset:4})&&(check([71],{offset:192})||check([71],{offset:196}))){return{ext:"mts",mime:"video/mp2t"}}if(check([66,76,69,78,68,69,82])){return{ext:"blend",mime:"application/x-blender"}}if(check([66,80,71,251])){return{ext:"bpg",mime:"image/bpg"}}if(check([0,0,0,12,106,80,32,32,13,10,135,10])){if(check([106,112,50,32],{offset:20})){return{ext:"jp2",mime:"image/jp2"}}if(check([106,112,120,32],{offset:20})){return{ext:"jpx",mime:"image/jpx"}}if(check([106,112,109,32],{offset:20})){return{ext:"jpm",mime:"image/jpm"}}if(check([109,106,112,50],{offset:20})){return{ext:"mj2",mime:"image/mj2"}}}if(check([70,79,82,77,0])){return{ext:"aif",mime:"audio/aiff"}}if(checkString("<?xml ")){return{ext:"xml",mime:"application/xml"}}if(check([66,79,79,75,77,79,66,73],{offset:60})){return{ext:"mobi",mime:"application/x-mobipocket-ebook"}}if(check([102,116,121,112],{offset:4})){if(check([109,105,102,49],{offset:8})){return{ext:"heic",mime:"image/heif"}}if(check([109,115,102,49],{offset:8})){return{ext:"heic",mime:"image/heif-sequence"}}if(check([104,101,105,99],{offset:8})||check([104,101,105,120],{offset:8})){return{ext:"heic",mime:"image/heic"}}if(check([104,101,118,99],{offset:8})||check([104,101,118,120],{offset:8})){return{ext:"heic",mime:"image/heic-sequence"}}}if(check([171,75,84,88,32,49,49,187,13,10,26,10])){return{ext:"ktx",mime:"image/ktx"}}return null}},3725:r=>{"use strict";class BitmapImage{constructor(...r){if(r.length===0){throw new Error("constructor requires parameters")}const i=r[0];if(i!==null&&typeof i==="object"){if(i instanceof BitmapImage){const r=i.bitmap;this.bitmap={width:r.width,height:r.height,data:new Buffer(r.width*r.height*4)};r.data.copy(this.bitmap.data)}else if(i.width&&i.height&&i.data){this.bitmap=i}else{throw new Error("unrecognized constructor parameters")}}else if(typeof i==="number"&&typeof r[1]==="number"){const a=i;const o=r[1];const s=r[2];this.bitmap={width:a,height:o};if(Buffer.isBuffer(s)){this.bitmap.data=s}else{this.bitmap.data=new Buffer(a*o*4);if(typeof s==="number"){this.fillRGBA(s)}}}else{throw new Error("unrecognized constructor parameters")}}blit(r,i,a,o,s,l,u){if(o+l>this.bitmap.width){throw new Error("copy exceeds width of source bitmap")}if(i+l>r.bitmap.width){throw new Error("copy exceeds width of target bitmap")}if(s+u>this.bitmap.height){throw new Error("copy exceeds height of source bitmap")}if(a+u>r.bitmap.height){throw new Erro("copy exceeds height of target bitmap")}const v=this.bitmap.data;const b=r.bitmap.data;const y=this.bitmap.width*4;const x=r.bitmap.width*4;const A=l*4;let E=s*y+o*4;let M=a*x+i*4;while(--u>=0){v.copy(b,M,E,E+A);E+=y;M+=x}return this}fillRGBA(r){const i=this.bitmap.data;const a=this.bitmap.height*4;let o=0;while(o<a){i.writeUInt32BE(r,o);o+=4}while(o<i.length){i.copy(i,o,0,a);o+=a}return this}getRGBA(r,i){const a=(i*this.bitmap.width+r)*4;return this.bitmap.data.readUInt32BE(a)}getRGBASet(){const r=new Set;const i=this.bitmap.data;for(let a=0;a<i.length;a+=4){r.add(i.readUInt32BE(a,true))}return r}greyscale(){const r=this.bitmap.data;this.scan(0,0,this.bitmap.width,this.bitmap.height,((i,a,o)=>{const s=Math.round(.299*r[o]+.587*r[o+1]+.114*r[o+2]);r[o]=s;r[o+1]=s;r[o+2]=s}));return this}reframe(r,i,a,o,s){const l=r<0?0:r;const u=i<0?0:i;const v=a+l>this.bitmap.width?this.bitmap.width-l:a;const b=o+u>this.bitmap.height?this.bitmap.height-u:o;const y=r<0?-r:0;const x=i<0?-i:0;let A;if(s===undefined){if(l!==r||u!=i||v!==a||b!==o){throw new GifError(`fillRGBA required for this reframing`)}A=new BitmapImage(a,o)}else{A=new BitmapImage(a,o,s)}this.blit(A,y,x,l,u,v,b);this.bitmap=A.bitmap;return this}scale(r){if(r===1){return}if(!Number.isInteger(r)||r<1){throw new Error("the scale must be an integer >= 1")}const i=this.bitmap.width;const a=this.bitmap.height;const o=i*r*4;const s=this.bitmap.data;const l=new Buffer(a*o*r);let u=0;let v;let b=0;for(let y=0;y<a;++y){v=b;for(let a=0;a<i;++a){const i=s.readUInt32BE(u,true);for(let a=0;a<r;++a){l.writeUInt32BE(i,b);b+=4}u+=4}for(let i=1;i<r;++i){l.copy(l,b,v,b);b+=o;v+=o}}this.bitmap={width:i*r,height:a*r,data:l};return this}scanAllCoords(r){const i=this.bitmap.width;const a=this.bitmap.data.length;let o=0;let s=0;for(let l=0;l<a;l+=4){r(o,s,l);if(++o===i){o=0;++s}}}scanAllIndexes(r){const i=this.bitmap.data.length;for(let a=0;a<i;a+=4){r(a)}}}r.exports=BitmapImage},7985:(r,i)=>{"use strict";class Gif{constructor(r,i,a){this.width=a.width;this.height=a.height;this.loops=a.loops;this.usesTransparency=a.usesTransparency;this.colorScope=a.colorScope;this.frames=i;this.buffer=r}}Gif.GlobalColorsPreferred=0;Gif.GlobalColorsOnly=1;Gif.LocalColorsOnly=2;class GifError extends Error{constructor(r){super(r);if(r instanceof Error){this.stack="Gif"+r.stack}}}i.Gif=Gif;i.GifError=GifError},8852:(r,i,a)=>{"use strict";const o=a(9063);const{Gif:s,GifError:l}=a(7985);let u;process.nextTick((()=>{u=a(2579)}));const{GifFrame:v}=a(2813);const b=200;const y=100;class GifCodec{constructor(r={}){this._transparentRGB=null;if(typeof r.transparentRGB==="number"&&r.transparentRGB!==0){this._transparentRGBA=r.transparentRGB*256}this._testInitialBufferSize=0}decodeGif(r){try{let i;try{i=new o.GifReader(r)}catch(r){throw new l(r)}const a=i.numFrames();const u=[];const v={width:i.width,height:i.height,loops:i.loopCount()};v.usesTransparency=false;for(let r=0;r<a;++r){const a=this._decodeFrame(i,r,v.usesTransparency);u.push(a.frame);if(a.usesTransparency){v.usesTransparency=true}}return Promise.resolve(new s(r,u,v))}catch(r){return Promise.reject(r)}}encodeGif(r,i={}){try{if(r===null||r.length===0){throw new l("there are no frames")}const a=u.getMaxDimensions(r);i=Object.assign({},i);i.width=a.maxWidth;i.height=a.maxHeight;i.loops=i.loops||0;i.colorScope=i.colorScope||s.GlobalColorsPreferred;return Promise.resolve(this._encodeGif(r,i))}catch(r){return Promise.reject(r)}}_decodeFrame(r,i,a){let o,s;try{o=r.frameInfo(i);s=new Buffer(r.width*r.height*4);r.decodeAndBlitFrameRGBA(i,s);if(o.width!==r.width||o.height!==r.height){if(o.y){s=s.slice(o.y*r.width*4)}if(r.width>o.width){for(let i=0;i<o.height;++i){s.copy(s,i*o.width*4,(o.x+i*r.width)*4,(o.x+i*r.width)*4+o.width*4)}}s=s.slice(0,o.width*o.height*4)}}catch(r){throw new l(r)}let u=false;if(this._transparentRGBA===null){if(!a){for(let r=3;r<s.length;r+=4){if(s[r]===0){u=true;r=s.length}}}}else{for(let r=3;r<s.length;r+=4){if(s[r]===0){s.writeUInt32BE(this._transparentRGBA,r-3);u=true}}}const b=new v(o.width,o.height,s,{xOffset:o.x,yOffset:o.y,disposalMethod:o.disposal,interlaced:o.interlaced,delayCentisecs:o.delay});return{frame:b,usesTransparency:u}}_encodeGif(r,i){let a;if(i.colorScope===s.LocalColorsOnly){a=u.getColorInfo(r,0)}else{a=u.getColorInfo(r,256);if(!a.colors){if(i.colorScope===s.GlobalColorsOnly){throw new l("Too many color indexes for global color table")}i.colorScope=s.LocalColorsOnly}}i.usesTransparency=a.usesTransparency;const o=a.palettes;if(i.colorScope===s.LocalColorsOnly){const a=2e3;return _encodeLocal(r,i,a,o)}const v=2e3;return _encodeGlobal(r,i,v,a)}_getSizeEstimateGlobal(r,i){if(this._testInitialBufferSize>0){return this._testInitialBufferSize}let a=b+3*256;const o=_getPixelBitWidth(r);i.forEach((r=>{a+=_getFrameSizeEst(r,o)}));return a}_getSizeEstimateLocal(r,i){if(this._testInitialBufferSize>0){return this._testInitialBufferSize}let a=b;for(let o=0;o<i.length;++o){const s=r[o];const l=_getPixelBitWidth(s);a+=_getFrameSizeEst(i[o],l)}return a}}i.GifCodec=GifCodec;function _colorLookupLinear(r,i){const a=r.indexOf(i);return a===-1?null:a}function _colorLookupBinary(r,i){var a=0,o=r.length-1,s;while(a<=o){s=Math.floor((a+o)/2);if(r[s]>i)o=s-1;else if(r[s]<i)a=s+1;else return s}return null}function _encodeGlobal(r,i,a,u){const v={colors:u.colors.slice(),usesTransparency:u.usesTransparency};_extendPaletteToPowerOf2(v);const b={palette:v.colors,loop:i.loops};let y=new Buffer(a);let x;try{x=new o.GifWriter(y,i.width,i.height,b)}catch(r){throw new l(r)}for(let i=0;i<r.length;++i){y=_writeFrame(x,i,r[i],u,false)}return new s(y.slice(0,x.end()),r,i)}function _encodeLocal(r,i,a,u){const v={loop:i.loops};let b=new Buffer(a);let y;try{y=new o.GifWriter(b,i.width,i.height,v)}catch(r){throw new l(r)}for(let i=0;i<r.length;++i){b=_writeFrame(y,i,r[i],u[i],true)}return new s(b.slice(0,y.end()),r,i)}function _extendPaletteToPowerOf2(r){const i=r.colors;if(r.usesTransparency){i.push(0)}const a=i.length;let o=2;while(a>o){o<<=1}i.length=o;i.fill(0,a)}function _getFrameSizeEst(r,i){let a=r.bitmap.width*r.bitmap.height;a=Math.ceil(a*i/8);a+=Math.ceil(a/255);return y+a+3*256}function _getIndexedImage(r,i,a){const o=a.colors;const s=o.length<=8?_colorLookupLinear:_colorLookupBinary;const u=i.bitmap.data;const v=new Buffer(u.length/4);let b=o.length;let y=0,x=0;while(y<u.length){if(u[y+3]!==0){const r=u.readUInt32BE(y,true)>>8&16777215;v[x]=s(o,r)}else{v[x]=b}y+=4;++x}if(a.usesTransparency){if(b===256){throw new l(`Frame ${r} already has 256 colors`+`and so can't use transparency`)}}else{b=null}return{buffer:v,transparentIndex:b}}function _getPixelBitWidth(r){let i=r.indexCount;let a=0;--i;while(i){++a;i>>=1}return a>0?a:1}function _writeFrame(r,i,a,o,s){if(a.interlaced){throw new l("writing interlaced GIFs is not supported")}const u=_getIndexedImage(i,a,o);const v={delay:a.delayCentisecs,disposal:a.disposalMethod,transparent:u.transparentIndex};if(s){_extendPaletteToPowerOf2(o);v.palette=o.colors}try{let i=r.getOutputBuffer();let o=r.getOutputBufferPosition();let s;let l=true;while(l){s=r.addFrame(a.xOffset,a.yOffset,a.bitmap.width,a.bitmap.height,u.buffer,v);l=false;if(s>=i.length-1){const a=new Buffer(i.length*1.5);i.copy(a);r.setOutputBuffer(a);r.setOutputBufferPosition(o);i=a;l=true}}return i}catch(r){throw new l(r)}}},2813:(r,i,a)=>{"use strict";const o=a(3725);const{GifError:s}=a(7985);class GifFrame extends o{constructor(...r){super(...r);if(r[0]instanceof GifFrame){const i=r[0];this.xOffset=i.xOffset;this.yOffset=i.yOffset;this.disposalMethod=i.disposalMethod;this.delayCentisecs=i.delayCentisecs;this.interlaced=i.interlaced}else{const i=r[r.length-1];let a={};if(typeof i==="object"&&!(i instanceof o)){a=i}this.xOffset=a.xOffset||0;this.yOffset=a.yOffset||0;this.disposalMethod=a.disposalMethod!==undefined?a.disposalMethod:GifFrame.DisposeToBackgroundColor;this.delayCentisecs=a.delayCentisecs||8;this.interlaced=a.interlaced||false}}getPalette(){const r=new Set;const i=this.bitmap.data;let a=0;let o=false;while(a<i.length){if(i[a+3]===0){o=true}else{const o=i.readUInt32BE(a,true)>>8&16777215;r.add(o)}a+=4}const s=new Array(r.size);const l=r.values();for(a=0;a<s.length;++a){s[a]=l.next().value}s.sort(((r,i)=>r-i));let u=s.length;if(o){++u}return{colors:s,usesTransparency:o,indexCount:u}}}GifFrame.DisposeToAnything=0;GifFrame.DisposeNothing=1;GifFrame.DisposeToBackgroundColor=2;GifFrame.DisposeToPrevious=3;i.GifFrame=GifFrame},2579:(r,i,a)=>{"use strict";const o=a(7147);const s=a(1560);const l=a(3725);const{GifFrame:u}=a(2813);const{GifError:v}=a(7985);const{GifCodec:b}=a(8852);const y=[".jpg",".jpeg",".png",".bmp"];const x=new b;i.cloneFrames=function(r){let i=[];r.forEach((r=>{i.push(new u(r))}));return i};i.getColorInfo=function(r,i){let a=false;const o=[];for(let i=0;i<r.length;++i){let s=r[i].getPalette();if(s.usesTransparency){a=true}if(s.indexCount>256){throw new v(`Frame ${i} uses more than 256 color indexes`)}o.push(s)}if(i===0){return{usesTransparency:a,palettes:o}}const s=new Set;o.forEach((r=>{r.colors.forEach((r=>{s.add(r)}))}));let l=s.size;if(a){++l}if(i&&l>i){return{usesTransparency:a,palettes:o}}const u=new Array(s.size);const b=s.values();for(let r=0;r<u.length;++r){u[r]=b.next().value}u.sort(((r,i)=>r-i));return{colors:u,indexCount:l,usesTransparency:a,palettes:o}};i.copyAsJimp=function(r,a){return i.shareAsJimp(r,new l(a))};i.getMaxDimensions=function(r){let i=0,a=0;r.forEach((r=>{const o=r.xOffset+r.bitmap.width;if(o>i){i=o}const s=r.yOffset+r.bitmap.height;if(s>a){a=s}}));return{maxWidth:i,maxHeight:a}};i.quantizeDekker=function(r,i,a){i=i||256;_quantize(r,"NeuQuantFloat",i,0,a)};i.quantizeSorokin=function(r,i,a,o){i=i||256;a=a||"min-pop";let s;switch(a){case"min-pop":s=2;break;case"top-pop":s=1;break;default:throw new Error(`Invalid quantizeSorokin histogram '${a}'`)}_quantize(r,"RGBQuant",i,s,o)};i.quantizeWu=function(r,i,a,o){i=i||256;a=a||5;if(a<1||a>8){throw new Error("Invalid quantization quality")}_quantize(r,"WuQuant",i,a,o)};i.read=function(r,i){i=i||x;if(Buffer.isBuffer(r)){return i.decodeGif(r)}return _readBinary(r).then((r=>i.decodeGif(r)))};i.shareAsJimp=function(r,i){const a=new r(i.bitmap.width,i.bitmap.height,0);a.bitmap.data=i.bitmap.data;return a};i.write=function(r,i,a,o){o=o||x;const s=r.match(/\.[a-zA-Z]+$/);if(s!==null&&y.includes(s[0].toLowerCase())){throw new Error(`GIF '${r}' has an unexpected suffix`)}return o.encodeGif(i,a).then((i=>_writeBinary(r,i.buffer).then((()=>i))))};function _quantize(r,i,a,o,l){const u=Array.isArray(r)?r:[r];const v=["FloydSteinberg","FalseFloydSteinberg","Stucki","Atkinson","Jarvis","Burkes","Sierra","TwoSierra","SierraLite"];if(l){if(v.indexOf(l.ditherAlgorithm)<0){throw new Error(`Invalid ditherAlgorithm '${l.ditherAlgorithm}'`)}if(l.serpentine===undefined){l.serpentine=true}if(l.minimumColorDistanceToDither===undefined){l.minimumColorDistanceToDither=0}if(l.calculateErrorLikeGIMP===undefined){l.calculateErrorLikeGIMP=false}}const b=new s.distance.Euclidean;const y=new s.palette[i](b,a,o);let x;if(l){x=new s.image.ErrorDiffusionArray(b,s.image.ErrorDiffusionArrayKernel[l.ditherAlgorithm],l.serpentine,l.minimumColorDistanceToDither,l.calculateErrorLikeGIMP)}else{x=new s.image.NearestColor(b)}const A=[];u.forEach((r=>{const i=r.bitmap.data;const a=new ArrayBuffer(i.length);const o=new Uint32Array(a);for(let r=0,a=0;r<i.length;r+=4,++a){o[a]=i.readUInt32LE(r,true)}const l=s.utils.PointContainer.fromUint32Array(o,r.bitmap.width,r.bitmap.height);y.sample(l);A.push(l)}));const E=y.quantize();for(let r=0;r<u.length;++r){const i=u[r].bitmap.data;const a=x.quantize(A[r],E);const o=a.toUint32Array();for(let r=0,a=0;r<i.length;r+=4,++a){i.writeUInt32LE(o[a],r)}}}function _readBinary(r){return new Promise(((i,a)=>{o.readFile(r,((r,o)=>{if(r){return a(r)}return i(o)}))}))}function _writeBinary(r,i){return new Promise(((a,s)=>{o.writeFile(r,i,(r=>{if(r){return s(r)}return a()}))}))}},7509:(r,i,a)=>{"use strict";const o=a(3725);const{Gif:s,GifError:l}=a(7985);const{GifCodec:u}=a(8852);const{GifFrame:v}=a(2813);const b=a(2579);r.exports={BitmapImage:o,Gif:s,GifCodec:u,GifFrame:v,GifUtil:b,GifError:l}},1560:function(r){(function webpackUniversalModuleDefinition(i,a){if(true)r.exports=a();else{}})(this,(function(){return function(r){var i={};function __nested_webpack_require_533__(a){if(i[a])return i[a].exports;var o=i[a]={exports:{},id:a,loaded:false};r[a].call(o.exports,o,o.exports,__nested_webpack_require_533__);o.loaded=true;return o.exports}__nested_webpack_require_533__.m=r;__nested_webpack_require_533__.c=i;__nested_webpack_require_533__.p="";return __nested_webpack_require_533__(0)}([function(r,i,a){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * iq.ts - Image Quantization Library
	 */var o=a(1);i.constants=o;var s=a(3);i.conversion=s;var l=a(12);i.distance=l;var u=a(20);i.palette=u;var v=a(30);i.image=v;var b=a(35);i.quality=b;var y=a(37);i.utils=y},function(r,i,a){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * constants.ts - part of Image Quantization Library
	 */var o=a(2);i.bt709=o},function(r,i){
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * constants.ts - part of Image Quantization Library
	 */
"use strict";var a;(function(r){r[r["RED"]=.2126]="RED";r[r["GREEN"]=.7152]="GREEN";r[r["BLUE"]=.0722]="BLUE";r[r["WHITE"]=1]="WHITE"})(a||(a={}));i.Y=a;var o;(function(r){r[r["RED"]=.64]="RED";r[r["GREEN"]=.3]="GREEN";r[r["BLUE"]=.15]="BLUE";r[r["WHITE"]=.3127]="WHITE"})(o||(o={}));i.x=o;var s;(function(r){r[r["RED"]=.33]="RED";r[r["GREEN"]=.6]="GREEN";r[r["BLUE"]=.06]="BLUE";r[r["WHITE"]=.329]="WHITE"})(s||(s={}));i.y=s},function(r,i,a){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * iq.ts - Image Quantization Library
	 */var o=a(4);i.rgb2xyz=o.rgb2xyz;var s=a(5);i.rgb2hsl=s.rgb2hsl;var l=a(7);i.rgb2lab=l.rgb2lab;var u=a(9);i.lab2xyz=u.lab2xyz;var v=a(10);i.lab2rgb=v.lab2rgb;var b=a(8);i.xyz2lab=b.xyz2lab;var y=a(11);i.xyz2rgb=y.xyz2rgb},function(r,i){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * rgb2xyz.ts - part of Image Quantization Library
	 */function correctGamma(r){return r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92}function rgb2xyz(r,i,a){r=correctGamma(r/255);i=correctGamma(i/255);a=correctGamma(a/255);return{x:r*.4124+i*.3576+a*.1805,y:r*.2126+i*.7152+a*.0722,z:r*.0193+i*.1192+a*.9505}}i.rgb2xyz=rgb2xyz},function(r,i,a){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * rgb2hsl.ts - part of Image Quantization Library
	 */var o=a(6);function rgb2hsl(r,i,a){var s=o.min3(r,i,a),l=o.max3(r,i,a),u=l-s,v=(s+l)/510;var b=0;if(v>0&&v<1)b=u/(v<.5?l+s:510-l-s);var y=0;if(u>0){if(l===r){y=(i-a)/u}else if(l===i){y=2+(a-r)/u}else{y=4+(r-i)/u}y*=60;if(y<0)y+=360}return{h:y,s:b,l:v}}i.rgb2hsl=rgb2hsl},function(r,i){"use strict";function degrees2radians(r){return r*(Math.PI/180)}i.degrees2radians=degrees2radians;function max3(r,i,a){var o=r;o<i&&(o=i);o<a&&(o=a);return o}i.max3=max3;function min3(r,i,a){var o=r;o>i&&(o=i);o>a&&(o=a);return o}i.min3=min3;function intInRange(r,i,a){if(r>a)r=a;if(r<i)r=i;return r|0}i.intInRange=intInRange;function inRange0to255Rounded(r){r=Math.round(r);if(r>255)r=255;else if(r<0)r=0;return r}i.inRange0to255Rounded=inRange0to255Rounded;function inRange0to255(r){if(r>255)r=255;else if(r<0)r=0;return r}i.inRange0to255=inRange0to255;function stableSort(r,i){var a=typeof r[0];var o;if(a==="number"||a==="string"){var s=Object.create(null);for(var l=0,u=r.length;l<u;l++){var v=r[l];if(s[v]||s[v]===0)continue;s[v]=l}o=r.sort((function(r,a){return i(r,a)||s[r]-s[a]}))}else{var b=r.slice(0);o=r.sort((function(r,a){return i(r,a)||b.indexOf(r)-b.indexOf(a)}))}return o}i.stableSort=stableSort},function(r,i,a){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * rgb2lab.ts - part of Image Quantization Library
	 */var o=a(4);var s=a(8);function rgb2lab(r,i,a){var l=o.rgb2xyz(r,i,a);return s.xyz2lab(l.x,l.y,l.z)}i.rgb2lab=rgb2lab},function(r,i){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * xyz2lab.ts - part of Image Quantization Library
	 */var a=.95047,o=1,s=1.08883;function pivot(r){return r>.008856?Math.pow(r,1/3):7.787*r+16/116}function xyz2lab(r,i,l){r=pivot(r/a);i=pivot(i/o);l=pivot(l/s);if(116*i-16<0)throw new Error("xxx");return{L:Math.max(0,116*i-16),a:500*(r-i),b:200*(i-l)}}i.xyz2lab=xyz2lab},function(r,i){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * lab2xyz.ts - part of Image Quantization Library
	 */var a=.95047,o=1,s=1.08883;function pivot(r){return r>.206893034?Math.pow(r,3):(r-16/116)/7.787}function lab2xyz(r,i,l){var u=(r+16)/116,v=i/500+u,b=u-l/200;return{x:a*pivot(v),y:o*pivot(u),z:s*pivot(b)}}i.lab2xyz=lab2xyz},function(r,i,a){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * lab2rgb.ts - part of Image Quantization Library
	 */var o=a(9);var s=a(11);function lab2rgb(r,i,a){var l=o.lab2xyz(r,i,a);return s.xyz2rgb(l.x,l.y,l.z)}i.lab2rgb=lab2rgb},function(r,i,a){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * xyz2rgb.ts - part of Image Quantization Library
	 */var o=a(6);function correctGamma(r){return r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r}function xyz2rgb(r,i,a){var s=correctGamma(r*3.2406+i*-1.5372+a*-.4986),l=correctGamma(r*-.9689+i*1.8758+a*.0415),u=correctGamma(r*.0557+i*-.204+a*1.057);return{r:o.inRange0to255Rounded(s*255),g:o.inRange0to255Rounded(l*255),b:o.inRange0to255Rounded(u*255)}}i.xyz2rgb=xyz2rgb},function(r,i,a){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * iq.ts - Image Quantization Library
	 */var o=a(13);i.AbstractDistanceCalculator=o.AbstractDistanceCalculator;var s=a(14);i.CIE94Textiles=s.CIE94Textiles;i.CIE94GraphicArts=s.CIE94GraphicArts;var l=a(15);i.CIEDE2000=l.CIEDE2000;var u=a(16);i.CMETRIC=u.CMETRIC;var v=a(17);i.AbstractEuclidean=v.AbstractEuclidean;i.Euclidean=v.Euclidean;i.EuclideanRgbQuantWOAlpha=v.EuclideanRgbQuantWOAlpha;i.EuclideanRgbQuantWithAlpha=v.EuclideanRgbQuantWithAlpha;var b=a(18);i.AbstractManhattan=b.AbstractManhattan;i.Manhattan=b.Manhattan;i.ManhattanSRGB=b.ManhattanSRGB;i.ManhattanNommyde=b.ManhattanNommyde;var y=a(19);i.PNGQUANT=y.PNGQUANT},function(r,i){"use strict";var a=function(){function AbstractDistanceCalculator(){this._setDefaults();this.setWhitePoint(255,255,255,255)}AbstractDistanceCalculator.prototype.setWhitePoint=function(r,i,a,o){this._whitePoint={r:r>0?255/r:0,g:i>0?255/i:0,b:a>0?255/a:0,a:o>0?255/o:0};this._maxDistance=this.calculateRaw(r,i,a,o,0,0,0,0)};AbstractDistanceCalculator.prototype.calculateNormalized=function(r,i){return this.calculateRaw(r.r,r.g,r.b,r.a,i.r,i.g,i.b,i.a)/this._maxDistance};AbstractDistanceCalculator.prototype._setDefaults=function(){};return AbstractDistanceCalculator}();i.AbstractDistanceCalculator=a},function(r,i,a){"use strict";var o=this&&this.__extends||function(r,i){for(var a in i)if(i.hasOwnProperty(a))r[a]=i[a];function __(){this.constructor=r}r.prototype=i===null?Object.create(i):(__.prototype=i.prototype,new __)};
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * cie94.ts - part of Image Quantization Library
	 */var s=a(13);var l=a(7);var u=a(6);var v=function(r){o(AbstractCIE94,r);function AbstractCIE94(){r.apply(this,arguments)}AbstractCIE94.prototype.calculateRaw=function(r,i,a,o,s,v,b,y){var x=l.rgb2lab(u.inRange0to255(r*this._whitePoint.r),u.inRange0to255(i*this._whitePoint.g),u.inRange0to255(a*this._whitePoint.b)),A=l.rgb2lab(u.inRange0to255(s*this._whitePoint.r),u.inRange0to255(v*this._whitePoint.g),u.inRange0to255(b*this._whitePoint.b));var E=x.L-A.L,M=x.a-A.a,L=x.b-A.b,P=Math.sqrt(x.a*x.a+x.b*x.b),T=Math.sqrt(A.a*A.a+A.b*A.b),I=P-T;var O=M*M+L*L-I*I;O=O<0?0:Math.sqrt(O);var S=(y-o)*this._whitePoint.a*this._kA;return Math.sqrt(Math.pow(E/this._Kl,2)+Math.pow(I/(1+this._K1*P),2)+Math.pow(O/(1+this._K2*P),2)+Math.pow(S,2))};return AbstractCIE94}(s.AbstractDistanceCalculator);i.AbstractCIE94=v;var b=function(r){o(CIE94Textiles,r);function CIE94Textiles(){r.apply(this,arguments)}CIE94Textiles.prototype._setDefaults=function(){this._Kl=2;this._K1=.048;this._K2=.014;this._kA=.25*50/255};return CIE94Textiles}(v);i.CIE94Textiles=b;var y=function(r){o(CIE94GraphicArts,r);function CIE94GraphicArts(){r.apply(this,arguments)}CIE94GraphicArts.prototype._setDefaults=function(){this._Kl=1;this._K1=.045;this._K2=.015;this._kA=.25*100/255};return CIE94GraphicArts}(v);i.CIE94GraphicArts=y},function(r,i,a){"use strict";var o=this&&this.__extends||function(r,i){for(var a in i)if(i.hasOwnProperty(a))r[a]=i[a];function __(){this.constructor=r}r.prototype=i===null?Object.create(i):(__.prototype=i.prototype,new __)};
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * ciede2000.ts - part of Image Quantization Library
	 */var s=a(13);var l=a(7);var u=a(6);var v=function(r){o(CIEDE2000,r);function CIEDE2000(){r.apply(this,arguments)}CIEDE2000.prototype.calculateRaw=function(r,i,a,o,s,v,b,y){var x=l.rgb2lab(u.inRange0to255(r*this._whitePoint.r),u.inRange0to255(i*this._whitePoint.g),u.inRange0to255(a*this._whitePoint.b)),A=l.rgb2lab(u.inRange0to255(s*this._whitePoint.r),u.inRange0to255(v*this._whitePoint.g),u.inRange0to255(b*this._whitePoint.b)),E=(y-o)*this._whitePoint.a*CIEDE2000._kA,M=this.calculateRawInLab(x,A);return Math.sqrt(M+E*E)};CIEDE2000.prototype.calculateRawInLab=function(r,i){var a=r.L,o=r.a,s=r.b;var l=i.L,u=i.a,v=i.b;var b=Math.sqrt(o*o+s*s),y=Math.sqrt(u*u+v*v),x=Math.pow((b+y)/2,7),A=.5*(1-Math.sqrt(x/(x+CIEDE2000._pow25to7))),E=(1+A)*o,M=(1+A)*u,L=Math.sqrt(E*E+s*s),P=Math.sqrt(M*M+v*v),T=L*P,I=CIEDE2000._calculatehp(s,E),O=CIEDE2000._calculatehp(v,M),S=Math.abs(I-O),k=l-a,D=P-L,z=CIEDE2000._calculate_dHp(T,S,O,I),R=CIEDE2000._calculate_ahp(T,S,I,O),B=CIEDE2000._calculateT(R),V=(L+P)/2,j=Math.pow((a+l)/2-50,2),H=1+.015*j/Math.sqrt(20+j),U=1+.045*V,_=1+.015*B*V,G=CIEDE2000._calculateRT(R,V),J=k/H,Z=D/U,K=z/_;return Math.pow(J,2)+Math.pow(Z,2)+Math.pow(K,2)+G*Z*K};CIEDE2000._calculatehp=function(r,i){var a=Math.atan2(r,i);if(a>=0)return a;return a+CIEDE2000._deg360InRad};CIEDE2000._calculateRT=function(r,i){var a=Math.pow(i,7),o=2*Math.sqrt(a/(a+CIEDE2000._pow25to7)),s=CIEDE2000._deg30InRad*Math.exp(-Math.pow((r-CIEDE2000._deg275InRad)/CIEDE2000._deg25InRad,2));return-Math.sin(2*s)*o};CIEDE2000._calculateT=function(r){return 1-.17*Math.cos(r-CIEDE2000._deg30InRad)+.24*Math.cos(r*2)+.32*Math.cos(r*3+CIEDE2000._deg6InRad)-.2*Math.cos(r*4-CIEDE2000._deg63InRad)};CIEDE2000._calculate_ahp=function(r,i,a,o){var s=a+o;if(r==0)return s;if(i<=CIEDE2000._deg180InRad)return s/2;if(s<CIEDE2000._deg360InRad)return(s+CIEDE2000._deg360InRad)/2;return(s-CIEDE2000._deg360InRad)/2};CIEDE2000._calculate_dHp=function(r,i,a,o){var s;if(r==0){s=0}else if(i<=CIEDE2000._deg180InRad){s=a-o}else if(a<=o){s=a-o+CIEDE2000._deg360InRad}else{s=a-o-CIEDE2000._deg360InRad}return 2*Math.sqrt(r)*Math.sin(s/2)};CIEDE2000._kA=.25*100/255;CIEDE2000._pow25to7=Math.pow(25,7);CIEDE2000._deg360InRad=u.degrees2radians(360);CIEDE2000._deg180InRad=u.degrees2radians(180);CIEDE2000._deg30InRad=u.degrees2radians(30);CIEDE2000._deg6InRad=u.degrees2radians(6);CIEDE2000._deg63InRad=u.degrees2radians(63);CIEDE2000._deg275InRad=u.degrees2radians(275);CIEDE2000._deg25InRad=u.degrees2radians(25);return CIEDE2000}(s.AbstractDistanceCalculator);i.CIEDE2000=v},function(r,i,a){"use strict";var o=this&&this.__extends||function(r,i){for(var a in i)if(i.hasOwnProperty(a))r[a]=i[a];function __(){this.constructor=r}r.prototype=i===null?Object.create(i):(__.prototype=i.prototype,new __)};
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * cmetric.ts - part of Image Quantization Library
	 */var s=a(13);var l=function(r){o(CMETRIC,r);function CMETRIC(){r.apply(this,arguments)}CMETRIC.prototype.calculateRaw=function(r,i,a,o,s,l,u,v){var b=(r+s)/2*this._whitePoint.r,y=(r-s)*this._whitePoint.r,x=(i-l)*this._whitePoint.g,A=(a-u)*this._whitePoint.b,E=((512+b)*y*y>>8)+4*x*x+((767-b)*A*A>>8),M=(v-o)*this._whitePoint.a;return Math.sqrt(E+M*M)};return CMETRIC}(s.AbstractDistanceCalculator);i.CMETRIC=l},function(r,i,a){"use strict";var o=this&&this.__extends||function(r,i){for(var a in i)if(i.hasOwnProperty(a))r[a]=i[a];function __(){this.constructor=r}r.prototype=i===null?Object.create(i):(__.prototype=i.prototype,new __)};
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * euclidean.ts - part of Image Quantization Library
	 */var s=a(13);var l=a(2);var u=function(r){o(AbstractEuclidean,r);function AbstractEuclidean(){r.apply(this,arguments)}AbstractEuclidean.prototype.calculateRaw=function(r,i,a,o,s,l,u,v){var b=s-r,y=l-i,x=u-a,A=v-o;return Math.sqrt(this._kR*b*b+this._kG*y*y+this._kB*x*x+this._kA*A*A)};return AbstractEuclidean}(s.AbstractDistanceCalculator);i.AbstractEuclidean=u;var v=function(r){o(Euclidean,r);function Euclidean(){r.apply(this,arguments)}Euclidean.prototype._setDefaults=function(){this._kR=1;this._kG=1;this._kB=1;this._kA=1};return Euclidean}(u);i.Euclidean=v;var b=function(r){o(EuclideanRgbQuantWithAlpha,r);function EuclideanRgbQuantWithAlpha(){r.apply(this,arguments)}EuclideanRgbQuantWithAlpha.prototype._setDefaults=function(){this._kR=l.Y.RED;this._kG=l.Y.GREEN;this._kB=l.Y.BLUE;this._kA=1};return EuclideanRgbQuantWithAlpha}(u);i.EuclideanRgbQuantWithAlpha=b;var y=function(r){o(EuclideanRgbQuantWOAlpha,r);function EuclideanRgbQuantWOAlpha(){r.apply(this,arguments)}EuclideanRgbQuantWOAlpha.prototype._setDefaults=function(){this._kR=l.Y.RED;this._kG=l.Y.GREEN;this._kB=l.Y.BLUE;this._kA=0};return EuclideanRgbQuantWOAlpha}(u);i.EuclideanRgbQuantWOAlpha=y},function(r,i,a){"use strict";var o=this&&this.__extends||function(r,i){for(var a in i)if(i.hasOwnProperty(a))r[a]=i[a];function __(){this.constructor=r}r.prototype=i===null?Object.create(i):(__.prototype=i.prototype,new __)};
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * manhattanNeuQuant.ts - part of Image Quantization Library
	 */var s=a(13);var l=a(2);var u=function(r){o(AbstractManhattan,r);function AbstractManhattan(){r.apply(this,arguments)}AbstractManhattan.prototype.calculateRaw=function(r,i,a,o,s,l,u,v){var b=s-r,y=l-i,x=u-a,A=v-o;if(b<0)b=0-b;if(y<0)y=0-y;if(x<0)x=0-x;if(A<0)A=0-A;return this._kR*b+this._kG*y+this._kB*x+this._kA*A};return AbstractManhattan}(s.AbstractDistanceCalculator);i.AbstractManhattan=u;var v=function(r){o(Manhattan,r);function Manhattan(){r.apply(this,arguments)}Manhattan.prototype._setDefaults=function(){this._kR=1;this._kG=1;this._kB=1;this._kA=1};return Manhattan}(u);i.Manhattan=v;var b=function(r){o(ManhattanNommyde,r);function ManhattanNommyde(){r.apply(this,arguments)}ManhattanNommyde.prototype._setDefaults=function(){this._kR=.4984;this._kG=.8625;this._kB=.2979;this._kA=1};return ManhattanNommyde}(u);i.ManhattanNommyde=b;var y=function(r){o(ManhattanSRGB,r);function ManhattanSRGB(){r.apply(this,arguments)}ManhattanSRGB.prototype._setDefaults=function(){this._kR=l.Y.RED;this._kG=l.Y.GREEN;this._kB=l.Y.BLUE;this._kA=1};return ManhattanSRGB}(u);i.ManhattanSRGB=y},function(r,i,a){"use strict";var o=this&&this.__extends||function(r,i){for(var a in i)if(i.hasOwnProperty(a))r[a]=i[a];function __(){this.constructor=r}r.prototype=i===null?Object.create(i):(__.prototype=i.prototype,new __)};
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * pngQuant.ts - part of Image Quantization Library
	 */var s=a(13);var l=function(r){o(PNGQUANT,r);function PNGQUANT(){r.apply(this,arguments)}PNGQUANT.prototype.calculateRaw=function(r,i,a,o,s,l,u,v){var b=(v-o)*this._whitePoint.a;return this._colordifference_ch(r*this._whitePoint.r,s*this._whitePoint.r,b)+this._colordifference_ch(i*this._whitePoint.g,l*this._whitePoint.g,b)+this._colordifference_ch(a*this._whitePoint.b,u*this._whitePoint.b,b)};PNGQUANT.prototype._colordifference_ch=function(r,i,a){var o=r-i,s=o+a;return o*o+s*s};return PNGQUANT}(s.AbstractDistanceCalculator);i.PNGQUANT=l},function(r,i,a){"use strict";var o=a(21);i.NeuQuant=o.NeuQuant;var s=a(25);i.NeuQuantFloat=s.NeuQuantFloat;var l=a(26);i.RGBQuant=l.RGBQuant;var u=a(27);i.ColorHistogram=u.ColorHistogram;var v=a(29);i.WuQuant=v.WuQuant;i.WuColorCube=v.WuColorCube},function(r,i,a){"use strict";
/**
	 * @preserve TypeScript port:
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * neuquant.ts - part of Image Quantization Library
	 */var o=a(22);var s=a(24);var l=3;var u=function(){function Neuron(r){this.r=this.g=this.b=this.a=r}Neuron.prototype.toPoint=function(){return s.Point.createByRGBA(this.r>>l,this.g>>l,this.b>>l,this.a>>l)};Neuron.prototype.subtract=function(r,i,a,o){this.r-=r|0;this.g-=i|0;this.b-=a|0;this.a-=o|0};return Neuron}();var v=function(){function NeuQuant(r,i){if(i===void 0){i=256}this._distance=r;this._pointArray=[];this._sampleFactor=1;this._networkSize=i;this._distance.setWhitePoint(255<<l,255<<l,255<<l,255<<l)}NeuQuant.prototype.sample=function(r){this._pointArray=this._pointArray.concat(r.getPointArray())};NeuQuant.prototype.quantize=function(){this._init();this._learn();return this._buildPalette()};NeuQuant.prototype._init=function(){this._freq=[];this._bias=[];this._radPower=[];this._network=[];for(var r=0;r<this._networkSize;r++){this._network[r]=new u((r<<l+8)/this._networkSize|0);this._freq[r]=NeuQuant._initialBias/this._networkSize|0;this._bias[r]=0}};NeuQuant.prototype._learn=function(){var r=this._sampleFactor;var i=this._pointArray.length;if(i<NeuQuant._minpicturebytes)r=1;var a=30+(r-1)/3|0,o=i/r|0;var s=o/NeuQuant._nCycles|0,u=NeuQuant._initAlpha,v=(this._networkSize>>3)*NeuQuant._radiusBias;var b=v>>NeuQuant._radiusBiasShift;if(b<=1)b=0;for(var y=0;y<b;y++){this._radPower[y]=u*((b*b-y*y)*NeuQuant._radBias/(b*b))>>>0}var x;if(i<NeuQuant._minpicturebytes){x=1}else if(i%NeuQuant._prime1!=0){x=NeuQuant._prime1}else if(i%NeuQuant._prime2!=0){x=NeuQuant._prime2}else if(i%NeuQuant._prime3!=0){x=NeuQuant._prime3}else{x=NeuQuant._prime4}for(var y=0,A=0;y<o;){var E=this._pointArray[A],M=E.b<<l,L=E.g<<l,P=E.r<<l,T=E.a<<l,I=this._contest(M,L,P,T);this._alterSingle(u,I,M,L,P,T);if(b!==0)this._alterNeighbour(b,I,M,L,P,T);A+=x;if(A>=i)A-=i;y++;if(s===0)s=1;if(y%s===0){u-=u/a|0;v-=v/NeuQuant._radiusDecrease|0;b=v>>NeuQuant._radiusBiasShift;if(b<=1)b=0;for(var O=0;O<b;O++)this._radPower[O]=u*((b*b-O*O)*NeuQuant._radBias/(b*b))>>>0}}};NeuQuant.prototype._buildPalette=function(){var r=new o.Palette;this._network.forEach((function(i){r.add(i.toPoint())}));r.sort();return r};NeuQuant.prototype._alterNeighbour=function(r,i,a,o,s,l){var u=i-r;if(u<-1)u=-1;var v=i+r;if(v>this._networkSize)v=this._networkSize;var b=i+1,y=i-1,x=1;while(b<v||y>u){var A=this._radPower[x++]/NeuQuant._alphaRadBias;if(b<v){var E=this._network[b++];E.subtract(A*(E.r-s),A*(E.g-o),A*(E.b-a),A*(E.a-l))}if(y>u){var E=this._network[y--];E.subtract(A*(E.r-s),A*(E.g-o),A*(E.b-a),A*(E.a-l))}}};NeuQuant.prototype._alterSingle=function(r,i,a,o,s,l){r/=NeuQuant._initAlpha;var u=this._network[i];u.subtract(r*(u.r-s),r*(u.g-o),r*(u.b-a),r*(u.a-l))};NeuQuant.prototype._contest=function(r,i,a,o){var s=255*4<<l;var u=~(1<<31),v=u,b=-1,y=b;for(var x=0;x<this._networkSize;x++){var A=this._network[x],E=this._distance.calculateNormalized(A,{r:a,g:i,b:r,a:o})*s|0;if(E<u){u=E;b=x}var M=E-(this._bias[x]>>NeuQuant._initialBiasShift-l);if(M<v){v=M;y=x}var L=this._freq[x]>>NeuQuant._betaShift;this._freq[x]-=L;this._bias[x]+=L<<NeuQuant._gammaShift}this._freq[b]+=NeuQuant._beta;this._bias[b]-=NeuQuant._betaGamma;return y};NeuQuant._prime1=499;NeuQuant._prime2=491;NeuQuant._prime3=487;NeuQuant._prime4=503;NeuQuant._minpicturebytes=NeuQuant._prime4;NeuQuant._nCycles=100;NeuQuant._initialBiasShift=16;NeuQuant._initialBias=1<<NeuQuant._initialBiasShift;NeuQuant._gammaShift=10;NeuQuant._betaShift=10;NeuQuant._beta=NeuQuant._initialBias>>NeuQuant._betaShift;NeuQuant._betaGamma=NeuQuant._initialBias<<NeuQuant._gammaShift-NeuQuant._betaShift;NeuQuant._radiusBiasShift=6;NeuQuant._radiusBias=1<<NeuQuant._radiusBiasShift;NeuQuant._radiusDecrease=30;NeuQuant._alphaBiasShift=10;NeuQuant._initAlpha=1<<NeuQuant._alphaBiasShift;NeuQuant._radBiasShift=8;NeuQuant._radBias=1<<NeuQuant._radBiasShift;NeuQuant._alphaRadBiasShift=NeuQuant._alphaBiasShift+NeuQuant._radBiasShift;NeuQuant._alphaRadBias=1<<NeuQuant._alphaRadBiasShift;return NeuQuant}();i.NeuQuant=v},function(r,i,a){
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * palette.ts - part of Image Quantization Library
	 */
"use strict";var o=a(23);var s=a(5);var l=10;function hueGroup(r,i){var a=360,o=a/i,s=o/2;for(var l=1,u=o-s;l<i;l++,u+=o){if(r>=u&&r<u+o)return l}return 0}i.hueGroup=hueGroup;var u=function(){function Palette(){this._pointArray=[];this._i32idx={};this._pointContainer=new o.PointContainer;this._pointContainer.setHeight(1);this._pointArray=this._pointContainer.getPointArray()}Palette.prototype.add=function(r){this._pointArray.push(r);this._pointContainer.setWidth(this._pointArray.length)};Palette.prototype.has=function(r){for(var i=this._pointArray.length-1;i>=0;i--){if(r.uint32===this._pointArray[i].uint32)return true}return false};Palette.prototype.getNearestColor=function(r,i){return this._pointArray[this.getNearestIndex(r,i)|0]};Palette.prototype.getPointContainer=function(){return this._pointContainer};Palette.prototype._nearestPointFromCache=function(r){return typeof this._i32idx[r]==="number"?this._i32idx[r]:-1};Palette.prototype.getNearestIndex=function(r,i){var a=this._nearestPointFromCache(""+i.uint32);if(a>=0)return a;var o=Number.MAX_VALUE;a=0;for(var s=0,l=this._pointArray.length;s<l;s++){var u=this._pointArray[s],v=r.calculateRaw(i.r,i.g,i.b,i.a,u.r,u.g,u.b,u.a);if(v<o){o=v;a=s}}this._i32idx[i.uint32]=a;return a};Palette.prototype.sort=function(){this._i32idx={};this._pointArray.sort((function(r,i){var a=s.rgb2hsl(r.r,r.g,r.b),o=s.rgb2hsl(i.r,i.g,i.b);var u=r.r===r.g&&r.g===r.b?0:1+hueGroup(a.h,l),v=i.r===i.g&&i.g===i.b?0:1+hueGroup(o.h,l);var b=v-u;if(b)return-b;var y=r.getLuminosity(true),x=i.getLuminosity(true);if(x-y!==0)return x-y;var A=(o.s*100|0)-(a.s*100|0);if(A)return-A;return 0}))};return Palette}();i.Palette=u},function(r,i,a){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * pointContainer.ts - part of Image Quantization Library
	 */var o=a(24);var s=function(){function PointContainer(){this._width=0;this._height=0;this._pointArray=[]}PointContainer.prototype.getWidth=function(){return this._width};PointContainer.prototype.getHeight=function(){return this._height};PointContainer.prototype.setWidth=function(r){this._width=r};PointContainer.prototype.setHeight=function(r){this._height=r};PointContainer.prototype.getPointArray=function(){return this._pointArray};PointContainer.prototype.clone=function(){var r=new PointContainer;r._width=this._width;r._height=this._height;for(var i=0,a=this._pointArray.length;i<a;i++){r._pointArray[i]=o.Point.createByUint32(this._pointArray[i].uint32|0)}return r};PointContainer.prototype.toUint32Array=function(){var r=this._pointArray.length,i=new Uint32Array(r);for(var a=0;a<r;a++){i[a]=this._pointArray[a].uint32}return i};PointContainer.prototype.toUint8Array=function(){return new Uint8Array(this.toUint32Array().buffer)};PointContainer.fromHTMLImageElement=function(r){var i=r.naturalWidth,a=r.naturalHeight;var o=document.createElement("canvas");o.width=i;o.height=a;var s=o.getContext("2d");s.drawImage(r,0,0,i,a,0,0,i,a);return PointContainer.fromHTMLCanvasElement(o)};PointContainer.fromHTMLCanvasElement=function(r){var i=r.width,a=r.height;var o=r.getContext("2d"),s=o.getImageData(0,0,i,a);return PointContainer.fromImageData(s)};PointContainer.fromNodeCanvas=function(r){return PointContainer.fromHTMLCanvasElement(r)};PointContainer.fromImageData=function(r){var i=r.width,a=r.height;return PointContainer.fromCanvasPixelArray(r.data,i,a)};PointContainer.fromArray=function(r,i,a){var o=new Uint8Array(r);return PointContainer.fromUint8Array(o,i,a)};PointContainer.fromCanvasPixelArray=function(r,i,a){return PointContainer.fromArray(r,i,a)};PointContainer.fromUint8Array=function(r,i,a){return PointContainer.fromUint32Array(new Uint32Array(r.buffer),i,a)};PointContainer.fromUint32Array=function(r,i,a){var s=new PointContainer;s._width=i;s._height=a;for(var l=0,u=r.length;l<u;l++){s._pointArray[l]=o.Point.createByUint32(r[l]|0)}return s};return PointContainer}();i.PointContainer=s},function(r,i,a){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * point.ts - part of Image Quantization Library
	 */var o=a(2);var s=function(){function Point(){this.uint32=-1>>>0;this.r=this.g=this.b=this.a=0;this.rgba=new Array(4);this.rgba[0]=0;this.rgba[1]=0;this.rgba[2]=0;this.rgba[3]=0}Point.createByQuadruplet=function(r){var i=new Point;i.r=r[0]|0;i.g=r[1]|0;i.b=r[2]|0;i.a=r[3]|0;i._loadUINT32();i._loadQuadruplet();return i};Point.createByRGBA=function(r,i,a,o){var s=new Point;s.r=r|0;s.g=i|0;s.b=a|0;s.a=o|0;s._loadUINT32();s._loadQuadruplet();return s};Point.createByUint32=function(r){var i=new Point;i.uint32=r>>>0;i._loadRGBA();i._loadQuadruplet();return i};Point.prototype.from=function(r){this.r=r.r;this.g=r.g;this.b=r.b;this.a=r.a;this.uint32=r.uint32;this.rgba[0]=r.r;this.rgba[1]=r.g;this.rgba[2]=r.b;this.rgba[3]=r.a};Point.prototype.getLuminosity=function(r){var i=this.r,a=this.g,s=this.b;if(r){i=Math.min(255,255-this.a+this.a*i/255);a=Math.min(255,255-this.a+this.a*a/255);s=Math.min(255,255-this.a+this.a*s/255)}return i*o.Y.RED+a*o.Y.GREEN+s*o.Y.BLUE};Point.prototype._loadUINT32=function(){this.uint32=(this.a<<24|this.b<<16|this.g<<8|this.r)>>>0};Point.prototype._loadRGBA=function(){this.r=this.uint32&255;this.g=this.uint32>>>8&255;this.b=this.uint32>>>16&255;this.a=this.uint32>>>24&255};Point.prototype._loadQuadruplet=function(){this.rgba[0]=this.r;this.rgba[1]=this.g;this.rgba[2]=this.b;this.rgba[3]=this.a};return Point}();i.Point=s},function(r,i,a){"use strict";
/**
	 * @preserve TypeScript port:
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * neuquant.ts - part of Image Quantization Library
	 */var o=a(22);var s=a(24);var l=3;var u=function(){function NeuronFloat(r){this.r=this.g=this.b=this.a=r}NeuronFloat.prototype.toPoint=function(){return s.Point.createByRGBA(this.r>>l,this.g>>l,this.b>>l,this.a>>l)};NeuronFloat.prototype.subtract=function(r,i,a,o){this.r-=r;this.g-=i;this.b-=a;this.a-=o};return NeuronFloat}();var v=function(){function NeuQuantFloat(r,i){if(i===void 0){i=256}this._distance=r;this._pointArray=[];this._sampleFactor=1;this._networkSize=i;this._distance.setWhitePoint(255<<l,255<<l,255<<l,255<<l)}NeuQuantFloat.prototype.sample=function(r){this._pointArray=this._pointArray.concat(r.getPointArray())};NeuQuantFloat.prototype.quantize=function(){this._init();this._learn();return this._buildPalette()};NeuQuantFloat.prototype._init=function(){this._freq=[];this._bias=[];this._radPower=[];this._network=[];for(var r=0;r<this._networkSize;r++){this._network[r]=new u((r<<l+8)/this._networkSize);this._freq[r]=NeuQuantFloat._initialBias/this._networkSize;this._bias[r]=0}};NeuQuantFloat.prototype._learn=function(){var r=this._sampleFactor;var i=this._pointArray.length;if(i<NeuQuantFloat._minpicturebytes)r=1;var a=30+(r-1)/3,o=i/r;var s=o/NeuQuantFloat._nCycles|0,u=NeuQuantFloat._initAlpha,v=(this._networkSize>>3)*NeuQuantFloat._radiusBias;var b=v>>NeuQuantFloat._radiusBiasShift;if(b<=1)b=0;for(var y=0;y<b;y++){this._radPower[y]=u*((b*b-y*y)*NeuQuantFloat._radBias/(b*b))}var x;if(i<NeuQuantFloat._minpicturebytes){x=1}else if(i%NeuQuantFloat._prime1!=0){x=NeuQuantFloat._prime1}else if(i%NeuQuantFloat._prime2!=0){x=NeuQuantFloat._prime2}else if(i%NeuQuantFloat._prime3!=0){x=NeuQuantFloat._prime3}else{x=NeuQuantFloat._prime4}for(var y=0,A=0;y<o;){var E=this._pointArray[A],M=E.b<<l,L=E.g<<l,P=E.r<<l,T=E.a<<l,I=this._contest(M,L,P,T);this._alterSingle(u,I,M,L,P,T);if(b!=0)this._alterNeighbour(b,I,M,L,P,T);A+=x;if(A>=i)A-=i;y++;if(s==0)s=1;if(y%s==0){u-=u/a;v-=v/NeuQuantFloat._radiusDecrease;b=v>>NeuQuantFloat._radiusBiasShift;if(b<=1)b=0;for(var O=0;O<b;O++)this._radPower[O]=u*((b*b-O*O)*NeuQuantFloat._radBias/(b*b))}}};NeuQuantFloat.prototype._buildPalette=function(){var r=new o.Palette;this._network.forEach((function(i){r.add(i.toPoint())}));r.sort();return r};NeuQuantFloat.prototype._alterNeighbour=function(r,i,a,o,s,l){var u=i-r;if(u<-1)u=-1;var v=i+r;if(v>this._networkSize)v=this._networkSize;var b=i+1,y=i-1,x=1;while(b<v||y>u){var A=this._radPower[x++]/NeuQuantFloat._alphaRadBias;if(b<v){var E=this._network[b++];E.subtract(A*(E.r-s),A*(E.g-o),A*(E.b-a),A*(E.a-l))}if(y>u){var E=this._network[y--];E.subtract(A*(E.r-s),A*(E.g-o),A*(E.b-a),A*(E.a-l))}}};NeuQuantFloat.prototype._alterSingle=function(r,i,a,o,s,l){r/=NeuQuantFloat._initAlpha;var u=this._network[i];u.subtract(r*(u.r-s),r*(u.g-o),r*(u.b-a),r*(u.a-l))};NeuQuantFloat.prototype._contest=function(r,i,a,o){var s=255*4<<l;var u=~(1<<31),v=u,b=-1,y=b;for(var x=0;x<this._networkSize;x++){var A=this._network[x],E=this._distance.calculateNormalized(A,{r:a,g:i,b:r,a:o})*s;if(E<u){u=E;b=x}var M=E-(this._bias[x]>>NeuQuantFloat._initialBiasShift-l);if(M<v){v=M;y=x}var L=this._freq[x]>>NeuQuantFloat._betaShift;this._freq[x]-=L;this._bias[x]+=L<<NeuQuantFloat._gammaShift}this._freq[b]+=NeuQuantFloat._beta;this._bias[b]-=NeuQuantFloat._betaGamma;return y};NeuQuantFloat._prime1=499;NeuQuantFloat._prime2=491;NeuQuantFloat._prime3=487;NeuQuantFloat._prime4=503;NeuQuantFloat._minpicturebytes=NeuQuantFloat._prime4;NeuQuantFloat._nCycles=100;NeuQuantFloat._initialBiasShift=16;NeuQuantFloat._initialBias=1<<NeuQuantFloat._initialBiasShift;NeuQuantFloat._gammaShift=10;NeuQuantFloat._betaShift=10;NeuQuantFloat._beta=NeuQuantFloat._initialBias>>NeuQuantFloat._betaShift;NeuQuantFloat._betaGamma=NeuQuantFloat._initialBias<<NeuQuantFloat._gammaShift-NeuQuantFloat._betaShift;NeuQuantFloat._radiusBiasShift=6;NeuQuantFloat._radiusBias=1<<NeuQuantFloat._radiusBiasShift;NeuQuantFloat._radiusDecrease=30;NeuQuantFloat._alphaBiasShift=10;NeuQuantFloat._initAlpha=1<<NeuQuantFloat._alphaBiasShift;NeuQuantFloat._radBiasShift=8;NeuQuantFloat._radBias=1<<NeuQuantFloat._radBiasShift;NeuQuantFloat._alphaRadBiasShift=NeuQuantFloat._alphaBiasShift+NeuQuantFloat._radBiasShift;NeuQuantFloat._alphaRadBias=1<<NeuQuantFloat._alphaRadBiasShift;return NeuQuantFloat}();i.NeuQuantFloat=v},function(r,i,a){"use strict";
/**
	 * @preserve TypeScript port:
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * rgbquant.ts - part of Image Quantization Library
	 */var o=a(22);var s=a(24);var l=a(27);var u=a(6);var v=function(){function RemovedColor(r,i,a){this.index=r;this.color=i;this.distance=a}return RemovedColor}();var b=function(){function RGBQuant(r,i,a){if(i===void 0){i=256}if(a===void 0){a=2}this._distance=r;this._colors=i;this._histogram=new l.ColorHistogram(a,i);this._initialDistance=.01;this._distanceIncrement=.005}RGBQuant.prototype.sample=function(r){this._histogram.sample(r)};RGBQuant.prototype.quantize=function(){var r=this._histogram.getImportanceSortedColorsIDXI32();if(r.length===0){throw new Error("No colors in image")}var i=this._buildPalette(r);i.sort();return i};RGBQuant.prototype._buildPalette=function(r){var i=new o.Palette,a=i.getPointContainer().getPointArray(),l=new Array(r.length);for(var b=0;b<r.length;b++){a.push(s.Point.createByUint32(r[b]));l[b]=1}var y=a.length,x=[];var A=y,E=this._initialDistance;while(A>this._colors){x.length=0;for(var b=0;b<y;b++){if(l[b]===0)continue;var M=a[b];for(var L=b+1;L<y;L++){if(l[L]===0)continue;var P=a[L];var T=this._distance.calculateNormalized(M,P);if(T<E){x.push(new v(L,P,T));l[L]=0;A--}}}E+=A>this._colors*3?this._initialDistance:this._distanceIncrement}if(A<this._colors){u.stableSort(x,(function(r,i){return i.distance-r.distance}));var I=0;while(A<this._colors&&I<x.length){var O=x[I];l[O.index]=1;A++;I++}}var S=a.length;for(var k=S-1;k>=0;k--){if(l[k]===0){if(k!==S-1){a[k]=a[S-1]}--S}}a.length=S;return i};return RGBQuant}();i.RGBQuant=b},function(r,i,a){"use strict";
/**
	 * @preserve TypeScript port:
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * colorHistogram.ts - part of Image Quantization Library
	 */var o=a(28);var s=a(6);var l=function(){function ColorHistogram(r,i){this._method=r;this._minHueCols=i<<2;this._initColors=i<<2;this._hueStats=new o.HueStatistics(ColorHistogram._hueGroups,this._minHueCols);this._histogram=Object.create(null)}ColorHistogram.prototype.sample=function(r){switch(this._method){case 1:this._colorStats1D(r);break;case 2:this._colorStats2D(r);break}};ColorHistogram.prototype.getImportanceSortedColorsIDXI32=function(){var r=this;var i=s.stableSort(Object.keys(this._histogram),(function(i,a){return r._histogram[a]-r._histogram[i]}));if(i.length===0){return[]}var a;switch(this._method){case 1:var o=Math.min(i.length,this._initColors),l=i[o-1],u=this._histogram[l];a=i.slice(0,o);var v=o,b=i.length;while(v<b&&this._histogram[i[v]]==u)a.push(i[v++]);this._hueStats.injectIntoArray(a);break;case 2:a=i;break;default:throw new Error("Incorrect method")}return a.map((function(r){return+r}))};ColorHistogram.prototype._colorStats1D=function(r){var i=this._histogram,a=r.getPointArray(),o=a.length;for(var s=0;s<o;s++){var l=a[s].uint32;this._hueStats.check(l);if(l in i)i[l]++;else i[l]=1}};ColorHistogram.prototype._colorStats2D=function(r){var i=this;var a=r.getWidth(),o=r.getHeight(),s=r.getPointArray();var l=ColorHistogram._boxSize[0],u=ColorHistogram._boxSize[1],v=l*u,b=this._makeBoxes(a,o,l,u),y=this._histogram;b.forEach((function(r){var o=Math.round(r.w*r.h/v)*ColorHistogram._boxPixels;if(o<2)o=2;var l={};i._iterateBox(r,a,(function(r){var a=s[r].uint32;i._hueStats.check(a);if(a in y)y[a]++;else if(a in l){if(++l[a]>=o)y[a]=l[a]}else l[a]=1}))}));this._hueStats.injectIntoDictionary(y)};ColorHistogram.prototype._iterateBox=function(r,i,a){var o=r,s=o.y*i+o.x,l=(o.y+o.h-1)*i+(o.x+o.w-1),u=i-o.w+1;var v=0,b=s;do{a.call(this,b);b+=++v%o.w==0?u:1}while(b<=l)};ColorHistogram.prototype._makeBoxes=function(r,i,a,o){var s=r%a,l=i%o,u=r-s,v=i-l,b=[];for(var y=0;y<i;y+=o)for(var x=0;x<r;x+=a)b.push({x:x,y:y,w:x==u?s:a,h:y==v?l:o});return b};ColorHistogram._boxSize=[64,64];ColorHistogram._boxPixels=2;ColorHistogram._hueGroups=10;return ColorHistogram}();i.ColorHistogram=l},function(r,i,a){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * hueStatistics.ts - part of Image Quantization Library
	 */var o=a(5);var s=a(22);var l=function(){function HueGroup(){this.num=0;this.cols=[]}return HueGroup}();var u=function(){function HueStatistics(r,i){this._numGroups=r;this._minCols=i;this._stats=[];for(var a=0;a<=r;a++){this._stats[a]=new l}this._groupsFull=0}HueStatistics.prototype.check=function(r){if(this._groupsFull==this._numGroups+1){this.check=function(){}}var i=r&255,a=r>>>8&255,l=r>>>16&255,u=i==a&&a==l?0:1+s.hueGroup(o.rgb2hsl(i,a,l).h,this._numGroups),v=this._stats[u],b=this._minCols;v.num++;if(v.num>b)return;if(v.num==b)this._groupsFull++;if(v.num<=b)this._stats[u].cols.push(r)};HueStatistics.prototype.injectIntoDictionary=function(r){for(var i=0;i<=this._numGroups;i++){if(this._stats[i].num<=this._minCols){this._stats[i].cols.forEach((function(i){if(!r[i])r[i]=1;else r[i]++}))}}};HueStatistics.prototype.injectIntoArray=function(r){for(var i=0;i<=this._numGroups;i++){if(this._stats[i].num<=this._minCols){this._stats[i].cols.forEach((function(i){if(r.indexOf(i)==-1)r.push(i)}))}}};return HueStatistics}();i.HueStatistics=u},function(r,i,a){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * wuQuant.ts - part of Image Quantization Library
	 */var o=a(22);var s=a(24);function createArray1D(r){var i=[];for(var a=0;a<r;a++){i[a]=0}return i}function createArray4D(r,i,a,o){var s=new Array(r);for(var l=0;l<r;l++){s[l]=new Array(i);for(var u=0;u<i;u++){s[l][u]=new Array(a);for(var v=0;v<a;v++){s[l][u][v]=new Array(o);for(var b=0;b<o;b++){s[l][u][v][b]=0}}}}return s}function createArray3D(r,i,a){var o=new Array(r);for(var s=0;s<r;s++){o[s]=new Array(i);for(var l=0;l<i;l++){o[s][l]=new Array(a);for(var u=0;u<a;u++){o[s][l][u]=0}}}return o}function fillArray3D(r,i,a,o,s){for(var l=0;l<i;l++){r[l]=[];for(var u=0;u<a;u++){r[l][u]=[];for(var v=0;v<o;v++){r[l][u][v]=s}}}}function fillArray1D(r,i,a){for(var o=0;o<i;o++){r[o]=a}}var l=function(){function WuColorCube(){}return WuColorCube}();i.WuColorCube=l;var u=function(){function WuQuant(r,i,a){if(i===void 0){i=256}if(a===void 0){a=5}this._distance=r;this._setQuality(a);this._initialize(i)}WuQuant.prototype.sample=function(r){var i=r.getPointArray();for(var a=0,o=i.length;a<o;a++){this._addColor(i[a])}this._pixels=this._pixels.concat(i)};WuQuant.prototype.quantize=function(){this._preparePalette();var r=new o.Palette;for(var i=0;i<this._colors;i++){if(this._sums[i]>0){var a=this._sums[i],l=this._reds[i]/a,u=this._greens[i]/a,v=this._blues[i]/a,b=this._alphas[i]/a;var y=s.Point.createByRGBA(l|0,u|0,v|0,b|0);r.add(y)}}r.sort();return r};WuQuant.prototype._preparePalette=function(){this._calculateMoments();var r=0,i=createArray1D(this._colors);for(var a=1;a<this._colors;++a){if(this._cut(this._cubes[r],this._cubes[a])){i[r]=this._cubes[r].volume>1?this._calculateVariance(this._cubes[r]):0;i[a]=this._cubes[a].volume>1?this._calculateVariance(this._cubes[a]):0}else{i[r]=0;a--}r=0;var o=i[0];for(var s=1;s<=a;++s){if(i[s]>o){o=i[s];r=s}}if(o<=0){this._colors=a+1;break}}var l=[],u=[],v=[],b=[];for(var y=0;y<this._colors;++y){var x=WuQuant._volume(this._cubes[y],this._weights);if(x>0){l[y]=WuQuant._volume(this._cubes[y],this._momentsRed)/x|0;u[y]=WuQuant._volume(this._cubes[y],this._momentsGreen)/x|0;v[y]=WuQuant._volume(this._cubes[y],this._momentsBlue)/x|0;b[y]=WuQuant._volume(this._cubes[y],this._momentsAlpha)/x|0}else{l[y]=0;u[y]=0;v[y]=0;b[y]=0}}this._reds=createArray1D(this._colors+1);this._greens=createArray1D(this._colors+1);this._blues=createArray1D(this._colors+1);this._alphas=createArray1D(this._colors+1);this._sums=createArray1D(this._colors+1);for(var s=0,A=this._pixels.length;s<A;s++){var E=this._pixels[s];var M=-1;var L=M,P=Number.MAX_VALUE;for(var T=0;T<this._colors;T++){var I=l[T],O=u[T],S=v[T],k=b[T];var D=this._distance.calculateRaw(I,O,S,k,E.r,E.g,E.b,E.a);if(D<P){P=D;L=T}}this._reds[L]+=E.r;this._greens[L]+=E.g;this._blues[L]+=E.b;this._alphas[L]+=E.a;this._sums[L]++}};WuQuant.prototype._addColor=function(r){var i=8-this._significantBitsPerChannel,a=(r.r>>i)+1,o=(r.g>>i)+1,s=(r.b>>i)+1,l=(r.a>>i)+1;this._weights[l][a][o][s]++;this._momentsRed[l][a][o][s]+=r.r;this._momentsGreen[l][a][o][s]+=r.g;this._momentsBlue[l][a][o][s]+=r.b;this._momentsAlpha[l][a][o][s]+=r.a;this._moments[l][a][o][s]+=this._table[r.r]+this._table[r.g]+this._table[r.b]+this._table[r.a]};WuQuant.prototype._calculateMoments=function(){var r=[],i=[],a=[],o=[],s=[],l=[];var u=createArray3D(this._sideSize,this._sideSize,this._sideSize),v=createArray3D(this._sideSize,this._sideSize,this._sideSize),b=createArray3D(this._sideSize,this._sideSize,this._sideSize),y=createArray3D(this._sideSize,this._sideSize,this._sideSize),x=createArray3D(this._sideSize,this._sideSize,this._sideSize),A=createArray3D(this._sideSize,this._sideSize,this._sideSize);for(var E=1;E<=this._alphaMaxSideIndex;++E){fillArray3D(u,this._sideSize,this._sideSize,this._sideSize,0);fillArray3D(v,this._sideSize,this._sideSize,this._sideSize,0);fillArray3D(b,this._sideSize,this._sideSize,this._sideSize,0);fillArray3D(y,this._sideSize,this._sideSize,this._sideSize,0);fillArray3D(x,this._sideSize,this._sideSize,this._sideSize,0);fillArray3D(A,this._sideSize,this._sideSize,this._sideSize,0);for(var M=1;M<=this._maxSideIndex;++M){fillArray1D(r,this._sideSize,0);fillArray1D(i,this._sideSize,0);fillArray1D(a,this._sideSize,0);fillArray1D(o,this._sideSize,0);fillArray1D(s,this._sideSize,0);fillArray1D(l,this._sideSize,0);for(var L=1;L<=this._maxSideIndex;++L){var P=0,T=0,I=0,O=0,S=0,k=0;for(var D=1;D<=this._maxSideIndex;++D){P+=this._weights[E][M][L][D];T+=this._momentsRed[E][M][L][D];I+=this._momentsGreen[E][M][L][D];O+=this._momentsBlue[E][M][L][D];S+=this._momentsAlpha[E][M][L][D];k+=this._moments[E][M][L][D];r[D]+=P;i[D]+=T;a[D]+=I;o[D]+=O;s[D]+=S;l[D]+=k;u[M][L][D]=u[M-1][L][D]+r[D];v[M][L][D]=v[M-1][L][D]+i[D];b[M][L][D]=b[M-1][L][D]+a[D];y[M][L][D]=y[M-1][L][D]+o[D];x[M][L][D]=x[M-1][L][D]+s[D];A[M][L][D]=A[M-1][L][D]+l[D];this._weights[E][M][L][D]=this._weights[E-1][M][L][D]+u[M][L][D];this._momentsRed[E][M][L][D]=this._momentsRed[E-1][M][L][D]+v[M][L][D];this._momentsGreen[E][M][L][D]=this._momentsGreen[E-1][M][L][D]+b[M][L][D];this._momentsBlue[E][M][L][D]=this._momentsBlue[E-1][M][L][D]+y[M][L][D];this._momentsAlpha[E][M][L][D]=this._momentsAlpha[E-1][M][L][D]+x[M][L][D];this._moments[E][M][L][D]=this._moments[E-1][M][L][D]+A[M][L][D]}}}}};WuQuant._volumeFloat=function(r,i){return i[r.alphaMaximum][r.redMaximum][r.greenMaximum][r.blueMaximum]-i[r.alphaMaximum][r.redMaximum][r.greenMinimum][r.blueMaximum]-i[r.alphaMaximum][r.redMinimum][r.greenMaximum][r.blueMaximum]+i[r.alphaMaximum][r.redMinimum][r.greenMinimum][r.blueMaximum]-i[r.alphaMinimum][r.redMaximum][r.greenMaximum][r.blueMaximum]+i[r.alphaMinimum][r.redMaximum][r.greenMinimum][r.blueMaximum]+i[r.alphaMinimum][r.redMinimum][r.greenMaximum][r.blueMaximum]-i[r.alphaMinimum][r.redMinimum][r.greenMinimum][r.blueMaximum]-(i[r.alphaMaximum][r.redMaximum][r.greenMaximum][r.blueMinimum]-i[r.alphaMinimum][r.redMaximum][r.greenMaximum][r.blueMinimum]-i[r.alphaMaximum][r.redMaximum][r.greenMinimum][r.blueMinimum]+i[r.alphaMinimum][r.redMaximum][r.greenMinimum][r.blueMinimum]-i[r.alphaMaximum][r.redMinimum][r.greenMaximum][r.blueMinimum]+i[r.alphaMinimum][r.redMinimum][r.greenMaximum][r.blueMinimum]+i[r.alphaMaximum][r.redMinimum][r.greenMinimum][r.blueMinimum]-i[r.alphaMinimum][r.redMinimum][r.greenMinimum][r.blueMinimum])};WuQuant._volume=function(r,i){return WuQuant._volumeFloat(r,i)|0};WuQuant._top=function(r,i,a,o){var s;switch(i){case WuQuant.alpha:s=o[a][r.redMaximum][r.greenMaximum][r.blueMaximum]-o[a][r.redMaximum][r.greenMinimum][r.blueMaximum]-o[a][r.redMinimum][r.greenMaximum][r.blueMaximum]+o[a][r.redMinimum][r.greenMinimum][r.blueMaximum]-(o[a][r.redMaximum][r.greenMaximum][r.blueMinimum]-o[a][r.redMaximum][r.greenMinimum][r.blueMinimum]-o[a][r.redMinimum][r.greenMaximum][r.blueMinimum]+o[a][r.redMinimum][r.greenMinimum][r.blueMinimum]);break;case WuQuant.red:s=o[r.alphaMaximum][a][r.greenMaximum][r.blueMaximum]-o[r.alphaMaximum][a][r.greenMinimum][r.blueMaximum]-o[r.alphaMinimum][a][r.greenMaximum][r.blueMaximum]+o[r.alphaMinimum][a][r.greenMinimum][r.blueMaximum]-(o[r.alphaMaximum][a][r.greenMaximum][r.blueMinimum]-o[r.alphaMaximum][a][r.greenMinimum][r.blueMinimum]-o[r.alphaMinimum][a][r.greenMaximum][r.blueMinimum]+o[r.alphaMinimum][a][r.greenMinimum][r.blueMinimum]);break;case WuQuant.green:s=o[r.alphaMaximum][r.redMaximum][a][r.blueMaximum]-o[r.alphaMaximum][r.redMinimum][a][r.blueMaximum]-o[r.alphaMinimum][r.redMaximum][a][r.blueMaximum]+o[r.alphaMinimum][r.redMinimum][a][r.blueMaximum]-(o[r.alphaMaximum][r.redMaximum][a][r.blueMinimum]-o[r.alphaMaximum][r.redMinimum][a][r.blueMinimum]-o[r.alphaMinimum][r.redMaximum][a][r.blueMinimum]+o[r.alphaMinimum][r.redMinimum][a][r.blueMinimum]);break;case WuQuant.blue:s=o[r.alphaMaximum][r.redMaximum][r.greenMaximum][a]-o[r.alphaMaximum][r.redMaximum][r.greenMinimum][a]-o[r.alphaMaximum][r.redMinimum][r.greenMaximum][a]+o[r.alphaMaximum][r.redMinimum][r.greenMinimum][a]-(o[r.alphaMinimum][r.redMaximum][r.greenMaximum][a]-o[r.alphaMinimum][r.redMaximum][r.greenMinimum][a]-o[r.alphaMinimum][r.redMinimum][r.greenMaximum][a]+o[r.alphaMinimum][r.redMinimum][r.greenMinimum][a]);break;default:throw new Error("impossible")}return s|0};WuQuant._bottom=function(r,i,a){switch(i){case WuQuant.alpha:return-a[r.alphaMinimum][r.redMaximum][r.greenMaximum][r.blueMaximum]+a[r.alphaMinimum][r.redMaximum][r.greenMinimum][r.blueMaximum]+a[r.alphaMinimum][r.redMinimum][r.greenMaximum][r.blueMaximum]-a[r.alphaMinimum][r.redMinimum][r.greenMinimum][r.blueMaximum]-(-a[r.alphaMinimum][r.redMaximum][r.greenMaximum][r.blueMinimum]+a[r.alphaMinimum][r.redMaximum][r.greenMinimum][r.blueMinimum]+a[r.alphaMinimum][r.redMinimum][r.greenMaximum][r.blueMinimum]-a[r.alphaMinimum][r.redMinimum][r.greenMinimum][r.blueMinimum]);case WuQuant.red:return-a[r.alphaMaximum][r.redMinimum][r.greenMaximum][r.blueMaximum]+a[r.alphaMaximum][r.redMinimum][r.greenMinimum][r.blueMaximum]+a[r.alphaMinimum][r.redMinimum][r.greenMaximum][r.blueMaximum]-a[r.alphaMinimum][r.redMinimum][r.greenMinimum][r.blueMaximum]-(-a[r.alphaMaximum][r.redMinimum][r.greenMaximum][r.blueMinimum]+a[r.alphaMaximum][r.redMinimum][r.greenMinimum][r.blueMinimum]+a[r.alphaMinimum][r.redMinimum][r.greenMaximum][r.blueMinimum]-a[r.alphaMinimum][r.redMinimum][r.greenMinimum][r.blueMinimum]);case WuQuant.green:return-a[r.alphaMaximum][r.redMaximum][r.greenMinimum][r.blueMaximum]+a[r.alphaMaximum][r.redMinimum][r.greenMinimum][r.blueMaximum]+a[r.alphaMinimum][r.redMaximum][r.greenMinimum][r.blueMaximum]-a[r.alphaMinimum][r.redMinimum][r.greenMinimum][r.blueMaximum]-(-a[r.alphaMaximum][r.redMaximum][r.greenMinimum][r.blueMinimum]+a[r.alphaMaximum][r.redMinimum][r.greenMinimum][r.blueMinimum]+a[r.alphaMinimum][r.redMaximum][r.greenMinimum][r.blueMinimum]-a[r.alphaMinimum][r.redMinimum][r.greenMinimum][r.blueMinimum]);case WuQuant.blue:return-a[r.alphaMaximum][r.redMaximum][r.greenMaximum][r.blueMinimum]+a[r.alphaMaximum][r.redMaximum][r.greenMinimum][r.blueMinimum]+a[r.alphaMaximum][r.redMinimum][r.greenMaximum][r.blueMinimum]-a[r.alphaMaximum][r.redMinimum][r.greenMinimum][r.blueMinimum]-(-a[r.alphaMinimum][r.redMaximum][r.greenMaximum][r.blueMinimum]+a[r.alphaMinimum][r.redMaximum][r.greenMinimum][r.blueMinimum]+a[r.alphaMinimum][r.redMinimum][r.greenMaximum][r.blueMinimum]-a[r.alphaMinimum][r.redMinimum][r.greenMinimum][r.blueMinimum]);default:return 0}};WuQuant.prototype._calculateVariance=function(r){var i=WuQuant._volume(r,this._momentsRed),a=WuQuant._volume(r,this._momentsGreen),o=WuQuant._volume(r,this._momentsBlue),s=WuQuant._volume(r,this._momentsAlpha),l=WuQuant._volumeFloat(r,this._moments),u=WuQuant._volume(r,this._weights),v=i*i+a*a+o*o+s*s;return l-v/u};WuQuant.prototype._maximize=function(r,i,a,o,s,l,u,v,b){var y=WuQuant._bottom(r,i,this._momentsRed)|0,x=WuQuant._bottom(r,i,this._momentsGreen)|0,A=WuQuant._bottom(r,i,this._momentsBlue)|0,E=WuQuant._bottom(r,i,this._momentsAlpha)|0,M=WuQuant._bottom(r,i,this._weights)|0;var L=0,P=-1;for(var T=a;T<o;++T){var I=y+WuQuant._top(r,i,T,this._momentsRed),O=x+WuQuant._top(r,i,T,this._momentsGreen),S=A+WuQuant._top(r,i,T,this._momentsBlue),k=E+WuQuant._top(r,i,T,this._momentsAlpha),D=M+WuQuant._top(r,i,T,this._weights);if(D!=0){var z=I*I+O*O+S*S+k*k,R=z/D;I=s-I;O=l-O;S=u-S;k=v-k;D=b-D;if(D!=0){z=I*I+O*O+S*S+k*k;R+=z/D;if(R>L){L=R;P=T}}}}return{max:L,position:P}};WuQuant.prototype._cut=function(r,i){var a;var o=WuQuant._volume(r,this._momentsRed),s=WuQuant._volume(r,this._momentsGreen),l=WuQuant._volume(r,this._momentsBlue),u=WuQuant._volume(r,this._momentsAlpha),v=WuQuant._volume(r,this._weights),b=this._maximize(r,WuQuant.red,r.redMinimum+1,r.redMaximum,o,s,l,u,v),y=this._maximize(r,WuQuant.green,r.greenMinimum+1,r.greenMaximum,o,s,l,u,v),x=this._maximize(r,WuQuant.blue,r.blueMinimum+1,r.blueMaximum,o,s,l,u,v),A=this._maximize(r,WuQuant.alpha,r.alphaMinimum+1,r.alphaMaximum,o,s,l,u,v);if(A.max>=b.max&&A.max>=y.max&&A.max>=x.max){a=WuQuant.alpha;if(A.position<0)return false}else{if(b.max>=A.max&&b.max>=y.max&&b.max>=x.max){a=WuQuant.red}else if(y.max>=A.max&&y.max>=b.max&&y.max>=x.max){a=WuQuant.green}else{a=WuQuant.blue}}i.redMaximum=r.redMaximum;i.greenMaximum=r.greenMaximum;i.blueMaximum=r.blueMaximum;i.alphaMaximum=r.alphaMaximum;switch(a){case WuQuant.red:i.redMinimum=r.redMaximum=b.position;i.greenMinimum=r.greenMinimum;i.blueMinimum=r.blueMinimum;i.alphaMinimum=r.alphaMinimum;break;case WuQuant.green:i.greenMinimum=r.greenMaximum=y.position;i.redMinimum=r.redMinimum;i.blueMinimum=r.blueMinimum;i.alphaMinimum=r.alphaMinimum;break;case WuQuant.blue:i.blueMinimum=r.blueMaximum=x.position;i.redMinimum=r.redMinimum;i.greenMinimum=r.greenMinimum;i.alphaMinimum=r.alphaMinimum;break;case WuQuant.alpha:i.alphaMinimum=r.alphaMaximum=A.position;i.blueMinimum=r.blueMinimum;i.redMinimum=r.redMinimum;i.greenMinimum=r.greenMinimum;break}r.volume=(r.redMaximum-r.redMinimum)*(r.greenMaximum-r.greenMinimum)*(r.blueMaximum-r.blueMinimum)*(r.alphaMaximum-r.alphaMinimum);i.volume=(i.redMaximum-i.redMinimum)*(i.greenMaximum-i.greenMinimum)*(i.blueMaximum-i.blueMinimum)*(i.alphaMaximum-i.alphaMinimum);return true};WuQuant.prototype._initialize=function(r){this._colors=r;this._cubes=[];for(var i=0;i<r;i++){this._cubes[i]=new l}this._cubes[0].redMinimum=0;this._cubes[0].greenMinimum=0;this._cubes[0].blueMinimum=0;this._cubes[0].alphaMinimum=0;this._cubes[0].redMaximum=this._maxSideIndex;this._cubes[0].greenMaximum=this._maxSideIndex;this._cubes[0].blueMaximum=this._maxSideIndex;this._cubes[0].alphaMaximum=this._alphaMaxSideIndex;this._weights=createArray4D(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize);this._momentsRed=createArray4D(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize);this._momentsGreen=createArray4D(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize);this._momentsBlue=createArray4D(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize);this._momentsAlpha=createArray4D(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize);this._moments=createArray4D(this._alphaSideSize,this._sideSize,this._sideSize,this._sideSize);this._table=[];for(var a=0;a<256;++a){this._table[a]=a*a}this._pixels=[]};WuQuant.prototype._setQuality=function(r){if(r===void 0){r=5}this._significantBitsPerChannel=r;this._maxSideIndex=1<<this._significantBitsPerChannel;this._alphaMaxSideIndex=this._maxSideIndex;this._sideSize=this._maxSideIndex+1;this._alphaSideSize=this._alphaMaxSideIndex+1};WuQuant.alpha=3;WuQuant.red=2;WuQuant.green=1;WuQuant.blue=0;return WuQuant}();i.WuQuant=u},function(r,i,a){"use strict";var o=a(31);i.NearestColor=o.NearestColor;var s=a(32);i.ErrorDiffusionArray=s.ErrorDiffusionArray;i.ErrorDiffusionArrayKernel=s.ErrorDiffusionArrayKernel;var l=a(33);i.ErrorDiffusionRiemersma=l.ErrorDiffusionRiemersma},function(r,i){"use strict";var a=function(){function NearestColor(r){this._distance=r}NearestColor.prototype.quantize=function(r,i){var a=r.getPointArray(),o=r.getWidth(),s=r.getHeight();for(var l=0;l<s;l++){for(var u=0,v=l*o;u<o;u++,v++){var b=a[v];b.from(i.getNearestColor(this._distance,b))}}return r};return NearestColor}();i.NearestColor=a},function(r,i,a){"use strict";var o=a(24);var s=a(6);(function(r){r[r["FloydSteinberg"]=0]="FloydSteinberg";r[r["FalseFloydSteinberg"]=1]="FalseFloydSteinberg";r[r["Stucki"]=2]="Stucki";r[r["Atkinson"]=3]="Atkinson";r[r["Jarvis"]=4]="Jarvis";r[r["Burkes"]=5]="Burkes";r[r["Sierra"]=6]="Sierra";r[r["TwoSierra"]=7]="TwoSierra";r[r["SierraLite"]=8]="SierraLite"})(i.ErrorDiffusionArrayKernel||(i.ErrorDiffusionArrayKernel={}));var l=i.ErrorDiffusionArrayKernel;var u=function(){function ErrorDiffusionArray(r,i,a,o,s){if(a===void 0){a=true}if(o===void 0){o=0}if(s===void 0){s=false}this._setKernel(i);this._distance=r;this._minColorDistance=o;this._serpentine=a;this._calculateErrorLikeGIMP=s}ErrorDiffusionArray.prototype.quantize=function(r,i){var a=r.getPointArray(),l=new o.Point,u=r.getWidth(),v=r.getHeight(),b=[];var y=1,x=1;for(var A=0;A<this._kernel.length;A++){var E=this._kernel[A][2]+1;if(x<E)x=E}for(var A=0;A<x;A++){this._fillErrorLine(b[A]=[],u)}for(var M=0;M<v;M++){if(this._serpentine)y=y*-1;var L=M*u,P=y==1?0:u-1,T=y==1?u:-1;this._fillErrorLine(b[0],u);b.push(b.shift());var I=b[0];for(var O=P,S=L+P;O!==T;O+=y,S+=y){var k=a[S],D=I[O];l.from(k);var z=o.Point.createByRGBA(s.inRange0to255Rounded(k.r+D[0]),s.inRange0to255Rounded(k.g+D[1]),s.inRange0to255Rounded(k.b+D[2]),s.inRange0to255Rounded(k.a+D[3]));var R=i.getNearestColor(this._distance,z);k.from(R);if(this._minColorDistance){var B=this._distance.calculateNormalized(k,R);if(B<this._minColorDistance)continue}var V=void 0,j=void 0,H=void 0,U=void 0;if(this._calculateErrorLikeGIMP){V=z.r-R.r;j=z.g-R.g;H=z.b-R.b;U=z.a-R.a}else{V=l.r-R.r;j=l.g-R.g;H=l.b-R.b;U=l.a-R.a}var _=y==1?0:this._kernel.length-1,G=y==1?this._kernel.length:-1;for(var A=_;A!==G;A+=y){var J=this._kernel[A][1]*y,Z=this._kernel[A][2];if(J+O>=0&&J+O<u&&Z+M>=0&&Z+M<v){var K=this._kernel[A][0],Q=b[Z][J+O];Q[0]=Q[0]+V*K;Q[1]=Q[1]+j*K;Q[2]=Q[2]+H*K;Q[3]=Q[3]+U*K}}}}return r};ErrorDiffusionArray.prototype._fillErrorLine=function(r,i){if(r.length>i){r.length=i}var a=r.length;for(var o=0;o<a;o++){var s=r[o];s[0]=s[1]=s[2]=s[3]=0}for(var o=a;o<i;o++){r[o]=[0,0,0,0]}};ErrorDiffusionArray.prototype._setKernel=function(r){switch(r){case l.FloydSteinberg:this._kernel=[[7/16,1,0],[3/16,-1,1],[5/16,0,1],[1/16,1,1]];break;case l.FalseFloydSteinberg:this._kernel=[[3/8,1,0],[3/8,0,1],[2/8,1,1]];break;case l.Stucki:this._kernel=[[8/42,1,0],[4/42,2,0],[2/42,-2,1],[4/42,-1,1],[8/42,0,1],[4/42,1,1],[2/42,2,1],[1/42,-2,2],[2/42,-1,2],[4/42,0,2],[2/42,1,2],[1/42,2,2]];break;case l.Atkinson:this._kernel=[[1/8,1,0],[1/8,2,0],[1/8,-1,1],[1/8,0,1],[1/8,1,1],[1/8,0,2]];break;case l.Jarvis:this._kernel=[[7/48,1,0],[5/48,2,0],[3/48,-2,1],[5/48,-1,1],[7/48,0,1],[5/48,1,1],[3/48,2,1],[1/48,-2,2],[3/48,-1,2],[5/48,0,2],[3/48,1,2],[1/48,2,2]];break;case l.Burkes:this._kernel=[[8/32,1,0],[4/32,2,0],[2/32,-2,1],[4/32,-1,1],[8/32,0,1],[4/32,1,1],[2/32,2,1]];break;case l.Sierra:this._kernel=[[5/32,1,0],[3/32,2,0],[2/32,-2,1],[4/32,-1,1],[5/32,0,1],[4/32,1,1],[2/32,2,1],[2/32,-1,2],[3/32,0,2],[2/32,1,2]];break;case l.TwoSierra:this._kernel=[[4/16,1,0],[3/16,2,0],[1/16,-2,1],[2/16,-1,1],[3/16,0,1],[2/16,1,1],[1/16,2,1]];break;case l.SierraLite:this._kernel=[[2/4,1,0],[1/4,-1,1],[1/4,0,1]];break;default:throw new Error("ErrorDiffusionArray: unknown kernel = "+r)}};return ErrorDiffusionArray}();i.ErrorDiffusionArray=u},function(r,i,a){"use strict";var o=a(34);var s=a(24);var l=a(6);var u=function(){function ErrorDiffusionRiemersma(r,i,a){if(i===void 0){i=16}if(a===void 0){a=1}this._distance=r;this._errorPropagation=a;this._errorQueueSize=i;this._max=this._errorQueueSize;this._createWeights()}ErrorDiffusionRiemersma.prototype.quantize=function(r,i){var a=this;var u=new o.HilbertCurveBase,v=r.getPointArray(),b=r.getWidth(),y=r.getHeight(),x=[];var A=0;for(var E=0;E<this._errorQueueSize;E++){x[E]={r:0,g:0,b:0,a:0}}u.walk(b,y,(function(r,o){var u=v[r+o*b];var y=u.r,E=u.g,M=u.b,L=u.a;for(var P=0;P<a._errorQueueSize;P++){var T=a._weights[P],I=x[(P+A)%a._errorQueueSize];y+=I.r*T;E+=I.g*T;M+=I.b*T;L+=I.a*T}var O=s.Point.createByRGBA(l.inRange0to255Rounded(y),l.inRange0to255Rounded(E),l.inRange0to255Rounded(M),l.inRange0to255Rounded(L));var S=i.getNearestColor(a._distance,O);A=(A+1)%a._errorQueueSize;var k=(A+a._errorQueueSize-1)%a._errorQueueSize;x[k].r=u.r-S.r;x[k].g=u.g-S.g;x[k].b=u.b-S.b;x[k].a=u.a-S.a;u.from(S)}));return r};ErrorDiffusionRiemersma.prototype._createWeights=function(){this._weights=[];var r=Math.exp(Math.log(this._max)/(this._errorQueueSize-1));for(var i=0,a=1;i<this._errorQueueSize;i++){this._weights[i]=(a+.5|0)/this._max*this._errorPropagation;a*=r}};return ErrorDiffusionRiemersma}();i.ErrorDiffusionRiemersma=u},function(r,i){"use strict";var a;(function(r){r[r["NONE"]=0]="NONE";r[r["UP"]=1]="UP";r[r["LEFT"]=2]="LEFT";r[r["RIGHT"]=3]="RIGHT";r[r["DOWN"]=4]="DOWN"})(a||(a={}));var o=function(){function HilbertCurveBase(){}HilbertCurveBase.prototype.walk=function(r,i,o){this._x=0;this._y=0;this._d=0;this._width=r;this._height=i;this._callback=o;var s=Math.max(r,i);this._level=Math.log(s)/Math.log(2)+1|0;this._walkHilbert(a.UP);this._visit(a.NONE)};HilbertCurveBase.prototype._walkHilbert=function(r){if(this._level<1)return;this._level--;switch(r){case a.LEFT:this._walkHilbert(a.UP);this._visit(a.RIGHT);this._walkHilbert(a.LEFT);this._visit(a.DOWN);this._walkHilbert(a.LEFT);this._visit(a.LEFT);this._walkHilbert(a.DOWN);break;case a.RIGHT:this._walkHilbert(a.DOWN);this._visit(a.LEFT);this._walkHilbert(a.RIGHT);this._visit(a.UP);this._walkHilbert(a.RIGHT);this._visit(a.RIGHT);this._walkHilbert(a.UP);break;case a.UP:this._walkHilbert(a.LEFT);this._visit(a.DOWN);this._walkHilbert(a.UP);this._visit(a.RIGHT);this._walkHilbert(a.UP);this._visit(a.UP);this._walkHilbert(a.RIGHT);break;case a.DOWN:this._walkHilbert(a.RIGHT);this._visit(a.UP);this._walkHilbert(a.DOWN);this._visit(a.LEFT);this._walkHilbert(a.DOWN);this._visit(a.DOWN);this._walkHilbert(a.LEFT);break;default:break}this._level++};HilbertCurveBase.prototype._visit=function(r){if(this._x>=0&&this._x<this._width&&this._y>=0&&this._y<this._height){this._callback(this._x,this._y,this._d);this._d++}switch(r){case a.LEFT:this._x--;break;case a.RIGHT:this._x++;break;case a.UP:this._y--;break;case a.DOWN:this._y++;break}};return HilbertCurveBase}();i.HilbertCurveBase=o},function(r,i,a){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * iq.ts - Image Quantization Library
	 */var o=a(36);i.SSIM=o.SSIM},function(r,i,a){"use strict";var o=a(2);var s=.01,l=.03;var u=function(){function SSIM(){}SSIM.prototype.compare=function(r,i){if(r.getHeight()!==i.getHeight()||r.getWidth()!==i.getWidth()){throw new Error("Images have different sizes!")}var a=8,o=(1<<a)-1,u=Math.pow(s*o,2),v=Math.pow(l*o,2);var b=0,y=0;this._iterate(r,i,(function(r,i,a,o){var s=0,l=0,x=0;for(var A=0;A<r.length;A++){l+=Math.pow(r[A]-a,2);x+=Math.pow(i[A]-o,2);s+=(r[A]-a)*(i[A]-o)}var E=r.length-1;l/=E;x/=E;s/=E;var M=(2*a*o+u)*(2*s+v),L=(Math.pow(a,2)+Math.pow(o,2)+u)*(l+x+v),P=M/L;y+=P;b++}));return y/b};SSIM.prototype._iterate=function(r,i,a){var o=8,s=r.getWidth(),l=r.getHeight();for(var u=0;u<l;u+=o){for(var v=0;v<s;v+=o){var b=Math.min(o,s-v),y=Math.min(o,l-u);var x=this._calculateLumaValuesForWindow(r,v,u,b,y),A=this._calculateLumaValuesForWindow(i,v,u,b,y),E=this._calculateAverageLuma(x),M=this._calculateAverageLuma(A);a(x,A,E,M)}}};SSIM.prototype._calculateLumaValuesForWindow=function(r,i,a,s,l){var u=r.getPointArray(),v=[];var b=0;for(var y=a;y<a+l;y++){var x=y*r.getWidth();for(var A=i;A<i+s;A++){var E=u[x+A];v[b]=E.r*o.Y.RED+E.g*o.Y.GREEN+E.b*o.Y.BLUE;b++}}return v};SSIM.prototype._calculateAverageLuma=function(r){var i=0;for(var a=0;a<r.length;a++){i+=r[a]}return i/r.length};return SSIM}();i.SSIM=u},function(r,i,a){"use strict";
/**
	 * @preserve
	 * Copyright 2015-2016 Igor Bezkrovnyi
	 * All rights reserved. (MIT Licensed)
	 *
	 * iq.ts - Image Quantization Library
	 */var o=a(6);i.arithmetic=o;var s=a(28);i.HueStatistics=s.HueStatistics;var l=a(22);i.Palette=l.Palette;var u=a(24);i.Point=u.Point;var v=a(23);i.PointContainer=v.PointContainer}])}))},2326:(r,i,a)=>{"use strict";var o=a(2810);Object.defineProperty(i,"__esModule",{value:true});i["default"]=void 0;var s=o(a(3706));var l=o(a(674));var u=o(a(8577));var v=(0,s["default"])({types:[l["default"]],plugins:[u["default"]]});i["default"]=v;r.exports=i.default},7199:(r,i,a)=>{var o=a(9463),s=a(4549);r.exports={encode:o,decode:s}},4549:r=>{var i=function jpegImage(){"use strict";var r=new Int32Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]);var i=4017;var a=799;var o=3406;var s=2276;var l=1567;var u=3784;var v=5793;var b=2896;function constructor(){}function buildHuffmanTable(r,i){var a=0,o=[],s,l,u=16;while(u>0&&!r[u-1])u--;o.push({children:[],index:0});var v=o[0],b;for(s=0;s<u;s++){for(l=0;l<r[s];l++){v=o.pop();v.children[v.index]=i[a];while(v.index>0){if(o.length===0)throw new Error("Could not recreate Huffman Table");v=o.pop()}v.index++;o.push(v);while(o.length<=s){o.push(b={children:[],index:0});v.children[v.index]=b.children;v=b}a++}if(s+1<u){o.push(b={children:[],index:0});v.children[v.index]=b.children;v=b}}return o[0].children}function decodeScan(i,a,o,s,l,u,v,b,y,x){var A=o.precision;var E=o.samplesPerLine;var M=o.scanLines;var L=o.mcusPerLine;var P=o.progressive;var T=o.maxH,I=o.maxV;var O=a,S=0,k=0;function readBit(){if(k>0){k--;return S>>k&1}S=i[a++];if(S==255){var r=i[a++];if(r){throw new Error("unexpected marker: "+(S<<8|r).toString(16))}}k=7;return S>>>7}function decodeHuffman(r){var i=r,a;while((a=readBit())!==null){i=i[a];if(typeof i==="number")return i;if(typeof i!=="object")throw new Error("invalid huffman sequence")}return null}function receive(r){var i=0;while(r>0){var a=readBit();if(a===null)return;i=i<<1|a;r--}return i}function receiveAndExtend(r){var i=receive(r);if(i>=1<<r-1)return i;return i+(-1<<r)+1}function decodeBaseline(i,a){var o=decodeHuffman(i.huffmanTableDC);var s=o===0?0:receiveAndExtend(o);a[0]=i.pred+=s;var l=1;while(l<64){var u=decodeHuffman(i.huffmanTableAC);var v=u&15,b=u>>4;if(v===0){if(b<15)break;l+=16;continue}l+=b;var y=r[l];a[y]=receiveAndExtend(v);l++}}function decodeDCFirst(r,i){var a=decodeHuffman(r.huffmanTableDC);var o=a===0?0:receiveAndExtend(a)<<y;i[0]=r.pred+=o}function decodeDCSuccessive(r,i){i[0]|=readBit()<<y}var D=0;function decodeACFirst(i,a){if(D>0){D--;return}var o=u,s=v;while(o<=s){var l=decodeHuffman(i.huffmanTableAC);var b=l&15,x=l>>4;if(b===0){if(x<15){D=receive(x)+(1<<x)-1;break}o+=16;continue}o+=x;var A=r[o];a[A]=receiveAndExtend(b)*(1<<y);o++}}var z=0,R;function decodeACSuccessive(i,a){var o=u,s=v,l=0;while(o<=s){var b=r[o];var x=a[b]<0?-1:1;switch(z){case 0:var A=decodeHuffman(i.huffmanTableAC);var E=A&15,l=A>>4;if(E===0){if(l<15){D=receive(l)+(1<<l);z=4}else{l=16;z=1}}else{if(E!==1)throw new Error("invalid ACn encoding");R=receiveAndExtend(E);z=l?2:3}continue;case 1:case 2:if(a[b])a[b]+=(readBit()<<y)*x;else{l--;if(l===0)z=z==2?3:0}break;case 3:if(a[b])a[b]+=(readBit()<<y)*x;else{a[b]=R<<y;z=0}break;case 4:if(a[b])a[b]+=(readBit()<<y)*x;break}o++}if(z===4){D--;if(D===0)z=0}}function decodeMcu(r,i,a,o,s){var l=a/L|0;var u=a%L;var v=l*r.v+o;var b=u*r.h+s;if(r.blocks[v]===undefined&&x.tolerantDecoding)return;i(r,r.blocks[v][b])}function decodeBlock(r,i,a){var o=a/r.blocksPerLine|0;var s=a%r.blocksPerLine;if(r.blocks[o]===undefined&&x.tolerantDecoding)return;i(r,r.blocks[o][s])}var B=s.length;var V,j,H,U,_;var G;if(P){if(u===0)G=b===0?decodeDCFirst:decodeDCSuccessive;else G=b===0?decodeACFirst:decodeACSuccessive}else{G=decodeBaseline}var J=0,Z;var K;if(B==1){K=s[0].blocksPerLine*s[0].blocksPerColumn}else{K=L*o.mcusPerColumn}if(!l)l=K;var Q,$;while(J<K){for(j=0;j<B;j++)s[j].pred=0;D=0;if(B==1){V=s[0];for(_=0;_<l;_++){decodeBlock(V,G,J);J++}}else{for(_=0;_<l;_++){for(j=0;j<B;j++){V=s[j];Q=V.h;$=V.v;for(H=0;H<$;H++){for(U=0;U<Q;U++){decodeMcu(V,G,J,H,U)}}}J++;if(J===K)break}}if(J===K){do{if(i[a]===255){if(i[a+1]!==0){break}}a+=1}while(a<i.length-2)}k=0;Z=i[a]<<8|i[a+1];if(Z<65280){throw new Error("marker was not found")}if(Z>=65488&&Z<=65495){a+=2}else break}return a-O}function buildComponentData(r,y){var x=[];var A=y.blocksPerLine;var E=y.blocksPerColumn;var M=A<<3;var L=new Int32Array(64),P=new Uint8Array(64);function quantizeAndInverse(r,x,A){var E=y.quantizationTable;var M,L,P,T,I,O,S,k,D;var z=A;var R;for(R=0;R<64;R++)z[R]=r[R]*E[R];for(R=0;R<8;++R){var B=8*R;if(z[1+B]==0&&z[2+B]==0&&z[3+B]==0&&z[4+B]==0&&z[5+B]==0&&z[6+B]==0&&z[7+B]==0){D=v*z[0+B]+512>>10;z[0+B]=D;z[1+B]=D;z[2+B]=D;z[3+B]=D;z[4+B]=D;z[5+B]=D;z[6+B]=D;z[7+B]=D;continue}M=v*z[0+B]+128>>8;L=v*z[4+B]+128>>8;P=z[2+B];T=z[6+B];I=b*(z[1+B]-z[7+B])+128>>8;k=b*(z[1+B]+z[7+B])+128>>8;O=z[3+B]<<4;S=z[5+B]<<4;D=M-L+1>>1;M=M+L+1>>1;L=D;D=P*u+T*l+128>>8;P=P*l-T*u+128>>8;T=D;D=I-S+1>>1;I=I+S+1>>1;S=D;D=k+O+1>>1;O=k-O+1>>1;k=D;D=M-T+1>>1;M=M+T+1>>1;T=D;D=L-P+1>>1;L=L+P+1>>1;P=D;D=I*s+k*o+2048>>12;I=I*o-k*s+2048>>12;k=D;D=O*a+S*i+2048>>12;O=O*i-S*a+2048>>12;S=D;z[0+B]=M+k;z[7+B]=M-k;z[1+B]=L+S;z[6+B]=L-S;z[2+B]=P+O;z[5+B]=P-O;z[3+B]=T+I;z[4+B]=T-I}for(R=0;R<8;++R){var V=R;if(z[1*8+V]==0&&z[2*8+V]==0&&z[3*8+V]==0&&z[4*8+V]==0&&z[5*8+V]==0&&z[6*8+V]==0&&z[7*8+V]==0){D=v*A[R+0]+8192>>14;z[0*8+V]=D;z[1*8+V]=D;z[2*8+V]=D;z[3*8+V]=D;z[4*8+V]=D;z[5*8+V]=D;z[6*8+V]=D;z[7*8+V]=D;continue}M=v*z[0*8+V]+2048>>12;L=v*z[4*8+V]+2048>>12;P=z[2*8+V];T=z[6*8+V];I=b*(z[1*8+V]-z[7*8+V])+2048>>12;k=b*(z[1*8+V]+z[7*8+V])+2048>>12;O=z[3*8+V];S=z[5*8+V];D=M-L+1>>1;M=M+L+1>>1;L=D;D=P*u+T*l+2048>>12;P=P*l-T*u+2048>>12;T=D;D=I-S+1>>1;I=I+S+1>>1;S=D;D=k+O+1>>1;O=k-O+1>>1;k=D;D=M-T+1>>1;M=M+T+1>>1;T=D;D=L-P+1>>1;L=L+P+1>>1;P=D;D=I*s+k*o+2048>>12;I=I*o-k*s+2048>>12;k=D;D=O*a+S*i+2048>>12;O=O*i-S*a+2048>>12;S=D;z[0*8+V]=M+k;z[7*8+V]=M-k;z[1*8+V]=L+S;z[6*8+V]=L-S;z[2*8+V]=P+O;z[5*8+V]=P-O;z[3*8+V]=T+I;z[4*8+V]=T-I}for(R=0;R<64;++R){var j=128+(z[R]+8>>4);x[R]=j<0?0:j>255?255:j}}requestMemoryAllocation(M*E*8);var T,I;for(var O=0;O<E;O++){var S=O<<3;for(T=0;T<8;T++)x.push(new Uint8Array(M));for(var k=0;k<A;k++){quantizeAndInverse(y.blocks[O][k],P,L);var D=0,z=k<<3;for(I=0;I<8;I++){var R=x[S+I];for(T=0;T<8;T++)R[z+T]=P[D++]}}}return x}function clampTo8bit(r){return r<0?0:r>255?255:r}constructor.prototype={load:function load(r){var i=new XMLHttpRequest;i.open("GET",r,true);i.responseType="arraybuffer";i.onload=function(){var r=new Uint8Array(i.response||i.mozResponseArrayBuffer);this.parse(r);if(this.onload)this.onload()}.bind(this);i.send(null)},parse:function parse(i){var a=this.opts.maxResolutionInMP*1e3*1e3;var o=0,s=i.length;function readUint16(){var r=i[o]<<8|i[o+1];o+=2;return r}function readDataBlock(){var r=readUint16();var a=i.subarray(o,o+r-2);o+=a.length;return a}function prepareComponents(r){var i=0,a=0;var o,s;for(s in r.components){if(r.components.hasOwnProperty(s)){o=r.components[s];if(i<o.h)i=o.h;if(a<o.v)a=o.v}}var l=Math.ceil(r.samplesPerLine/8/i);var u=Math.ceil(r.scanLines/8/a);for(s in r.components){if(r.components.hasOwnProperty(s)){o=r.components[s];var v=Math.ceil(Math.ceil(r.samplesPerLine/8)*o.h/i);var b=Math.ceil(Math.ceil(r.scanLines/8)*o.v/a);var y=l*o.h;var x=u*o.v;var A=x*y;var E=[];requestMemoryAllocation(A*256);for(var M=0;M<x;M++){var L=[];for(var P=0;P<y;P++)L.push(new Int32Array(64));E.push(L)}o.blocksPerLine=v;o.blocksPerColumn=b;o.blocks=E}}r.maxH=i;r.maxV=a;r.mcusPerLine=l;r.mcusPerColumn=u}var l=null;var u=null;var v=null;var b,y;var x=[],A=[];var E=[],M=[];var L=readUint16();this.comments=[];if(L!=65496){throw new Error("SOI not found")}L=readUint16();while(L!=65497){var P,T,I;switch(L){case 65280:break;case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var O=readDataBlock();if(L===65534){var S=String.fromCharCode.apply(null,O);this.comments.push(S)}if(L===65504){if(O[0]===74&&O[1]===70&&O[2]===73&&O[3]===70&&O[4]===0){l={version:{major:O[5],minor:O[6]},densityUnits:O[7],xDensity:O[8]<<8|O[9],yDensity:O[10]<<8|O[11],thumbWidth:O[12],thumbHeight:O[13],thumbData:O.subarray(14,14+3*O[12]*O[13])}}}if(L===65505){if(O[0]===69&&O[1]===120&&O[2]===105&&O[3]===102&&O[4]===0){this.exifBuffer=O.subarray(5,O.length)}}if(L===65518){if(O[0]===65&&O[1]===100&&O[2]===111&&O[3]===98&&O[4]===101&&O[5]===0){u={version:O[6],flags0:O[7]<<8|O[8],flags1:O[9]<<8|O[10],transformCode:O[11]}}}break;case 65499:var k=readUint16();var D=k+o-2;while(o<D){var z=i[o++];requestMemoryAllocation(64*4);var R=new Int32Array(64);if(z>>4===0){for(T=0;T<64;T++){var B=r[T];R[B]=i[o++]}}else if(z>>4===1){for(T=0;T<64;T++){var B=r[T];R[B]=readUint16()}}else throw new Error("DQT: invalid table spec");x[z&15]=R}break;case 65472:case 65473:case 65474:readUint16();b={};b.extended=L===65473;b.progressive=L===65474;b.precision=i[o++];b.scanLines=readUint16();b.samplesPerLine=readUint16();b.components={};b.componentsOrder=[];var V=b.scanLines*b.samplesPerLine;if(V>a){var j=Math.ceil((V-a)/1e6);throw new Error(`maxResolutionInMP limit exceeded by ${j}MP`)}var H=i[o++],U;var _=0,G=0;for(P=0;P<H;P++){U=i[o];var J=i[o+1]>>4;var Z=i[o+1]&15;var K=i[o+2];b.componentsOrder.push(U);b.components[U]={h:J,v:Z,quantizationIdx:K};o+=3}prepareComponents(b);A.push(b);break;case 65476:var Q=readUint16();for(P=2;P<Q;){var $=i[o++];var tt=new Uint8Array(16);var et=0;for(T=0;T<16;T++,o++){et+=tt[T]=i[o]}requestMemoryAllocation(16+et);var rt=new Uint8Array(et);for(T=0;T<et;T++,o++)rt[T]=i[o];P+=17+et;($>>4===0?M:E)[$&15]=buildHuffmanTable(tt,rt)}break;case 65501:readUint16();y=readUint16();break;case 65500:readUint16();readUint16();break;case 65498:var it=readUint16();var nt=i[o++];var at=[],ot;for(P=0;P<nt;P++){ot=b.components[i[o++]];var st=i[o++];ot.huffmanTableDC=M[st>>4];ot.huffmanTableAC=E[st&15];at.push(ot)}var lt=i[o++];var ut=i[o++];var ft=i[o++];var ht=decodeScan(i,o,b,at,y,lt,ut,ft>>4,ft&15,this.opts);o+=ht;break;case 65535:if(i[o]!==255){o--}break;default:if(i[o-3]==255&&i[o-2]>=192&&i[o-2]<=254){o-=3;break}throw new Error("unknown JPEG marker "+L.toString(16))}L=readUint16()}if(A.length!=1)throw new Error("only single frame JPEGs supported");for(var P=0;P<A.length;P++){var ct=A[P].components;for(var T in ct){ct[T].quantizationTable=x[ct[T].quantizationIdx];delete ct[T].quantizationIdx}}this.width=b.samplesPerLine;this.height=b.scanLines;this.jfif=l;this.adobe=u;this.components=[];for(var P=0;P<b.componentsOrder.length;P++){var ot=b.components[b.componentsOrder[P]];this.components.push({lines:buildComponentData(b,ot),scaleX:ot.h/b.maxH,scaleY:ot.v/b.maxV})}},getData:function getData(r,i){var a=this.width/r,o=this.height/i;var s,l,u,v;var b,y,x,A;var E,M;var L=0;var P,T,I,O,S,k,D,z,R,B;var V;var j=r*i*this.components.length;requestMemoryAllocation(j);var H=new Uint8Array(j);switch(this.components.length){case 1:s=this.components[0];for(M=0;M<i;M++){b=s.lines[0|M*s.scaleY*o];for(E=0;E<r;E++){P=b[0|E*s.scaleX*a];H[L++]=P}}break;case 2:s=this.components[0];l=this.components[1];for(M=0;M<i;M++){b=s.lines[0|M*s.scaleY*o];y=l.lines[0|M*l.scaleY*o];for(E=0;E<r;E++){P=b[0|E*s.scaleX*a];H[L++]=P;P=y[0|E*l.scaleX*a];H[L++]=P}}break;case 3:V=true;if(this.adobe&&this.adobe.transformCode)V=true;else if(typeof this.opts.colorTransform!=="undefined")V=!!this.opts.colorTransform;s=this.components[0];l=this.components[1];u=this.components[2];for(M=0;M<i;M++){b=s.lines[0|M*s.scaleY*o];y=l.lines[0|M*l.scaleY*o];x=u.lines[0|M*u.scaleY*o];for(E=0;E<r;E++){if(!V){z=b[0|E*s.scaleX*a];R=y[0|E*l.scaleX*a];B=x[0|E*u.scaleX*a]}else{P=b[0|E*s.scaleX*a];T=y[0|E*l.scaleX*a];I=x[0|E*u.scaleX*a];z=clampTo8bit(P+1.402*(I-128));R=clampTo8bit(P-.3441363*(T-128)-.71413636*(I-128));B=clampTo8bit(P+1.772*(T-128))}H[L++]=z;H[L++]=R;H[L++]=B}}break;case 4:if(!this.adobe)throw new Error("Unsupported color mode (4 components)");V=false;if(this.adobe&&this.adobe.transformCode)V=true;else if(typeof this.opts.colorTransform!=="undefined")V=!!this.opts.colorTransform;s=this.components[0];l=this.components[1];u=this.components[2];v=this.components[3];for(M=0;M<i;M++){b=s.lines[0|M*s.scaleY*o];y=l.lines[0|M*l.scaleY*o];x=u.lines[0|M*u.scaleY*o];A=v.lines[0|M*v.scaleY*o];for(E=0;E<r;E++){if(!V){S=b[0|E*s.scaleX*a];k=y[0|E*l.scaleX*a];D=x[0|E*u.scaleX*a];O=A[0|E*v.scaleX*a]}else{P=b[0|E*s.scaleX*a];T=y[0|E*l.scaleX*a];I=x[0|E*u.scaleX*a];O=A[0|E*v.scaleX*a];S=255-clampTo8bit(P+1.402*(I-128));k=255-clampTo8bit(P-.3441363*(T-128)-.71413636*(I-128));D=255-clampTo8bit(P+1.772*(T-128))}H[L++]=255-S;H[L++]=255-k;H[L++]=255-D;H[L++]=255-O}}break;default:throw new Error("Unsupported color mode")}return H},copyToImageData:function copyToImageData(r,i){var a=r.width,o=r.height;var s=r.data;var l=this.getData(a,o);var u=0,v=0,b,y;var x,A,E,M,L,P,T;switch(this.components.length){case 1:for(y=0;y<o;y++){for(b=0;b<a;b++){x=l[u++];s[v++]=x;s[v++]=x;s[v++]=x;if(i){s[v++]=255}}}break;case 3:for(y=0;y<o;y++){for(b=0;b<a;b++){L=l[u++];P=l[u++];T=l[u++];s[v++]=L;s[v++]=P;s[v++]=T;if(i){s[v++]=255}}}break;case 4:for(y=0;y<o;y++){for(b=0;b<a;b++){E=l[u++];M=l[u++];x=l[u++];A=l[u++];L=255-clampTo8bit(E*(1-A/255)+A);P=255-clampTo8bit(M*(1-A/255)+A);T=255-clampTo8bit(x*(1-A/255)+A);s[v++]=L;s[v++]=P;s[v++]=T;if(i){s[v++]=255}}}break;default:throw new Error("Unsupported color mode")}}};var y=0;var x=0;function requestMemoryAllocation(r=0){var i=y+r;if(i>x){var a=Math.ceil((i-x)/1024/1024);throw new Error(`maxMemoryUsageInMB limit exceeded by at least ${a}MB`)}y=i}constructor.resetMaxMemoryUsage=function(r){y=0;x=r};constructor.getBytesAllocated=function(){return y};constructor.requestMemoryAllocation=requestMemoryAllocation;return constructor}();if(true){r.exports=decode}else{}function decode(r,a={}){var o={colorTransform:undefined,useTArray:false,formatAsRGBA:true,tolerantDecoding:true,maxResolutionInMP:100,maxMemoryUsageInMB:512};var s={...o,...a};var l=new Uint8Array(r);var u=new i;u.opts=s;i.resetMaxMemoryUsage(s.maxMemoryUsageInMB*1024*1024);u.parse(l);var v=s.formatAsRGBA?4:3;var b=u.width*u.height*v;try{i.requestMemoryAllocation(b);var y={width:u.width,height:u.height,exifBuffer:u.exifBuffer,data:s.useTArray?new Uint8Array(b):Buffer.alloc(b)};if(u.comments.length>0){y["comments"]=u.comments}}catch(r){if(r instanceof RangeError){throw new Error("Could not allocate enough memory for the image. "+"Required: "+b)}else{throw r}}u.copyToImageData(y,s.formatAsRGBA);return y}},9463:r=>{var i=i||function(r){return Buffer.from(r).toString("base64")};function JPEGEncoder(r){var a=this;var o=Math.round;var s=Math.floor;var l=new Array(64);var u=new Array(64);var v=new Array(64);var b=new Array(64);var y;var x;var A;var E;var M=new Array(65535);var L=new Array(65535);var P=new Array(64);var T=new Array(64);var I=[];var O=0;var S=7;var k=new Array(64);var D=new Array(64);var z=new Array(64);var R=new Array(256);var B=new Array(2048);var V;var j=[0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,24,31,40,44,53,10,19,23,32,39,45,52,54,20,22,33,38,46,51,55,60,21,34,37,47,50,56,59,61,35,36,48,49,57,58,62,63];var H=[0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0];var U=[0,1,2,3,4,5,6,7,8,9,10,11];var _=[0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125];var G=[1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250];var J=[0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0];var Z=[0,1,2,3,4,5,6,7,8,9,10,11];var K=[0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119];var Q=[0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250];function initQuantTables(r){var i=[16,11,10,16,24,40,51,61,12,12,14,19,26,58,60,55,14,13,16,24,40,57,69,56,14,17,22,29,51,87,80,62,18,22,37,56,68,109,103,77,24,35,55,64,81,104,113,92,49,64,78,87,103,121,120,101,72,92,95,98,112,100,103,99];for(var a=0;a<64;a++){var o=s((i[a]*r+50)/100);if(o<1){o=1}else if(o>255){o=255}l[j[a]]=o}var y=[17,18,24,47,99,99,99,99,18,21,26,66,99,99,99,99,24,26,56,99,99,99,99,99,47,66,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99];for(var x=0;x<64;x++){var A=s((y[x]*r+50)/100);if(A<1){A=1}else if(A>255){A=255}u[j[x]]=A}var E=[1,1.387039845,1.306562965,1.175875602,1,.785694958,.5411961,.275899379];var M=0;for(var L=0;L<8;L++){for(var P=0;P<8;P++){v[M]=1/(l[j[M]]*E[L]*E[P]*8);b[M]=1/(u[j[M]]*E[L]*E[P]*8);M++}}}function computeHuffmanTbl(r,i){var a=0;var o=0;var s=new Array;for(var l=1;l<=16;l++){for(var u=1;u<=r[l];u++){s[i[o]]=[];s[i[o]][0]=a;s[i[o]][1]=l;o++;a++}a*=2}return s}function initHuffmanTbl(){y=computeHuffmanTbl(H,U);x=computeHuffmanTbl(J,Z);A=computeHuffmanTbl(_,G);E=computeHuffmanTbl(K,Q)}function initCategoryNumber(){var r=1;var i=2;for(var a=1;a<=15;a++){for(var o=r;o<i;o++){L[32767+o]=a;M[32767+o]=[];M[32767+o][1]=a;M[32767+o][0]=o}for(var s=-(i-1);s<=-r;s++){L[32767+s]=a;M[32767+s]=[];M[32767+s][1]=a;M[32767+s][0]=i-1+s}r<<=1;i<<=1}}function initRGBYUVTable(){for(var r=0;r<256;r++){B[r]=19595*r;B[r+256>>0]=38470*r;B[r+512>>0]=7471*r+32768;B[r+768>>0]=-11059*r;B[r+1024>>0]=-21709*r;B[r+1280>>0]=32768*r+8421375;B[r+1536>>0]=-27439*r;B[r+1792>>0]=-5329*r}}function writeBits(r){var i=r[0];var a=r[1]-1;while(a>=0){if(i&1<<a){O|=1<<S}a--;S--;if(S<0){if(O==255){writeByte(255);writeByte(0)}else{writeByte(O)}S=7;O=0}}}function writeByte(r){I.push(r)}function writeWord(r){writeByte(r>>8&255);writeByte(r&255)}function fDCTQuant(r,i){var a,o,s,l,u,v,b,y;var x=0;var A;var E=8;var M=64;for(A=0;A<E;++A){a=r[x];o=r[x+1];s=r[x+2];l=r[x+3];u=r[x+4];v=r[x+5];b=r[x+6];y=r[x+7];var L=a+y;var T=a-y;var I=o+b;var O=o-b;var S=s+v;var k=s-v;var D=l+u;var z=l-u;var R=L+D;var B=L-D;var V=I+S;var j=I-S;r[x]=R+V;r[x+4]=R-V;var H=(j+B)*.707106781;r[x+2]=B+H;r[x+6]=B-H;R=z+k;V=k+O;j=O+T;var U=(R-j)*.382683433;var _=.5411961*R+U;var G=1.306562965*j+U;var J=V*.707106781;var Z=T+J;var K=T-J;r[x+5]=K+_;r[x+3]=K-_;r[x+1]=Z+G;r[x+7]=Z-G;x+=8}x=0;for(A=0;A<E;++A){a=r[x];o=r[x+8];s=r[x+16];l=r[x+24];u=r[x+32];v=r[x+40];b=r[x+48];y=r[x+56];var Q=a+y;var $=a-y;var tt=o+b;var et=o-b;var rt=s+v;var it=s-v;var nt=l+u;var at=l-u;var ot=Q+nt;var st=Q-nt;var lt=tt+rt;var ut=tt-rt;r[x]=ot+lt;r[x+32]=ot-lt;var ft=(ut+st)*.707106781;r[x+16]=st+ft;r[x+48]=st-ft;ot=at+it;lt=it+et;ut=et+$;var ht=(ot-ut)*.382683433;var ct=.5411961*ot+ht;var pt=1.306562965*ut+ht;var dt=lt*.707106781;var mt=$+dt;var vt=$-dt;r[x+40]=vt+ct;r[x+24]=vt-ct;r[x+8]=mt+pt;r[x+56]=mt-pt;x++}var gt;for(A=0;A<M;++A){gt=r[A]*i[A];P[A]=gt>0?gt+.5|0:gt-.5|0}return P}function writeAPP0(){writeWord(65504);writeWord(16);writeByte(74);writeByte(70);writeByte(73);writeByte(70);writeByte(0);writeByte(1);writeByte(1);writeByte(0);writeWord(1);writeWord(1);writeByte(0);writeByte(0)}function writeAPP1(r){if(!r)return;writeWord(65505);if(r[0]===69&&r[1]===120&&r[2]===105&&r[3]===102){writeWord(r.length+2)}else{writeWord(r.length+5+2);writeByte(69);writeByte(120);writeByte(105);writeByte(102);writeByte(0)}for(var i=0;i<r.length;i++){writeByte(r[i])}}function writeSOF0(r,i){writeWord(65472);writeWord(17);writeByte(8);writeWord(i);writeWord(r);writeByte(3);writeByte(1);writeByte(17);writeByte(0);writeByte(2);writeByte(17);writeByte(1);writeByte(3);writeByte(17);writeByte(1)}function writeDQT(){writeWord(65499);writeWord(132);writeByte(0);for(var r=0;r<64;r++){writeByte(l[r])}writeByte(1);for(var i=0;i<64;i++){writeByte(u[i])}}function writeDHT(){writeWord(65476);writeWord(418);writeByte(0);for(var r=0;r<16;r++){writeByte(H[r+1])}for(var i=0;i<=11;i++){writeByte(U[i])}writeByte(16);for(var a=0;a<16;a++){writeByte(_[a+1])}for(var o=0;o<=161;o++){writeByte(G[o])}writeByte(1);for(var s=0;s<16;s++){writeByte(J[s+1])}for(var l=0;l<=11;l++){writeByte(Z[l])}writeByte(17);for(var u=0;u<16;u++){writeByte(K[u+1])}for(var v=0;v<=161;v++){writeByte(Q[v])}}function writeSOS(){writeWord(65498);writeWord(12);writeByte(3);writeByte(1);writeByte(0);writeByte(2);writeByte(17);writeByte(3);writeByte(17);writeByte(0);writeByte(63);writeByte(0)}function processDU(r,i,a,o,s){var l=s[0];var u=s[240];var v;var b=16;var y=63;var x=64;var A=fDCTQuant(r,i);for(var E=0;E<x;++E){T[j[E]]=A[E]}var P=T[0]-a;a=T[0];if(P==0){writeBits(o[0])}else{v=32767+P;writeBits(o[L[v]]);writeBits(M[v])}var I=63;for(;I>0&&T[I]==0;I--){}if(I==0){writeBits(l);return a}var O=1;var S;while(O<=I){var k=O;for(;T[O]==0&&O<=I;++O){}var D=O-k;if(D>=b){S=D>>4;for(var z=1;z<=S;++z)writeBits(u);D=D&15}v=32767+T[O];writeBits(s[(D<<4)+L[v]]);writeBits(M[v]);O++}if(I!=y){writeBits(l)}return a}function initCharLookupTable(){var r=String.fromCharCode;for(var i=0;i<256;i++){R[i]=r(i)}}this.encode=function(r,a){var o=(new Date).getTime();if(a)setQuality(a);I=new Array;O=0;S=7;writeWord(65496);writeAPP0();writeAPP1(r.exifBuffer);writeDQT();writeSOF0(r.width,r.height);writeDHT();writeSOS();var s=0;var l=0;var u=0;O=0;S=7;this.encode.displayName="_encode_";var M=r.data;var L=r.width;var P=r.height;var T=L*4;var R=L*3;var V,j=0;var H,U,_;var G,J,Z,K,Q;while(j<P){V=0;while(V<T){G=T*j+V;J=G;Z=-1;K=0;for(Q=0;Q<64;Q++){K=Q>>3;Z=(Q&7)*4;J=G+K*T+Z;if(j+K>=P){J-=T*(j+1+K-P)}if(V+Z>=T){J-=V+Z-T+4}H=M[J++];U=M[J++];_=M[J++];k[Q]=(B[H]+B[U+256>>0]+B[_+512>>0]>>16)-128;D[Q]=(B[H+768>>0]+B[U+1024>>0]+B[_+1280>>0]>>16)-128;z[Q]=(B[H+1280>>0]+B[U+1536>>0]+B[_+1792>>0]>>16)-128}s=processDU(k,v,s,y,A);l=processDU(D,b,l,x,E);u=processDU(z,b,u,x,E);V+=32}j+=8}if(S>=0){var $=[];$[1]=S+1;$[0]=(1<<S+1)-1;writeBits($)}writeWord(65497);if(false){}return Buffer.from(I);var tt="data:image/jpeg;base64,"+i(I.join(""));I=[];var et=(new Date).getTime()-o;return tt};function setQuality(r){if(r<=0){r=1}if(r>100){r=100}if(V==r)return;var i=0;if(r<50){i=Math.floor(5e3/r)}else{i=Math.floor(200-r*2)}initQuantTables(i);V=r}function init(){var i=(new Date).getTime();if(!r)r=50;initCharLookupTable();initHuffmanTbl();initCategoryNumber();initRGBYUVTable();setQuality(r);var a=(new Date).getTime()-i}init()}if(true){r.exports=encode}else{}function encode(r,i){if(typeof i==="undefined")i=50;var a=new JPEGEncoder(i);var o=a.encode(r,i);return{data:o,width:r.width,height:r.height}}function getImageDataFromImage(r){var i=typeof r=="string"?document.getElementById(r):r;var a=document.createElement("canvas");a.width=i.width;a.height=i.height;var o=a.getContext("2d");o.drawImage(i,0,0);return o.getImageData(0,0,a.width,a.height)}},1065:(r,i,a)=>{var o=a(7147);var s=a(7310);var l=a(1017);var u=a(1293);var v=a(18);var b=a(3396);var y=a(180);var x=a(6085);var noop=function(){};var A=a(6575);function parseFont(r,i,a){var o,s;if(A(i)){if(typeof i==="string")i=Buffer.from(i,"binary");s=true}else i=i.toString().trim();try{if(s)o=y(i);else if(/json/.test(x.lookup(r))||i.charAt(0)==="{")o=JSON.parse(i);else if(/xml/.test(x.lookup(r))||i.charAt(0)==="<")o=b(i);else o=v(i)}catch(r){a(r);a=noop}a(null,o)}r.exports=function loadFont(r,i){i=typeof i==="function"?i:noop;if(typeof r==="string")r={uri:r,url:r};else if(!r)r={};var a=r.uri||r.url;function handleData(r,o){if(r)return i(r);parseFont(a,o.body||o,i)}if(s.parse(a).host){u(r,handleData)}else{o.readFile(a,r,handleData)}}},6575:(r,i,a)=>{var o=a(6334);var s=Buffer.from([66,77,70,3]);r.exports=function(r){if(typeof r==="string")return r.substring(0,3)==="BMF";return r.length>4&&o(r.slice(0,4),s)}},6085:(r,i,a)=>{var o=a(1017);var s=a(7147);function Mime(){this.types=Object.create(null);this.extensions=Object.create(null)}Mime.prototype.define=function(r){for(var i in r){var a=r[i];for(var o=0;o<a.length;o++){if(process.env.DEBUG_MIME&&this.types[a[o]]){console.warn((this._loading||"define()").replace(/.*\//,""),'changes "'+a[o]+'" extension type from '+this.types[a[o]]+" to "+i)}this.types[a[o]]=i}if(!this.extensions[i]){this.extensions[i]=a[0]}}};Mime.prototype.load=function(r){this._loading=r;var i={},a=s.readFileSync(r,"ascii"),o=a.split(/[\r\n]+/);o.forEach((function(r){var a=r.replace(/\s*#.*|^\s*|\s*$/g,"").split(/\s+/);i[a.shift()]=a}));this.define(i);this._loading=null};Mime.prototype.lookup=function(r,i){var a=r.replace(/^.*[\.\/\\]/,"").toLowerCase();return this.types[a]||i||this.default_type};Mime.prototype.extension=function(r){var i=r.match(/^\s*([^;\s]*)(?:;|\s|$)/)[1].toLowerCase();return this.extensions[i]};var l=new Mime;l.define(a(5799));l.default_type=l.lookup("bin");l.Mime=Mime;l.charsets={lookup:function(r,i){return/^text\/|^application\/(javascript|json)/.test(r)?"UTF-8":i}};r.exports=l},191:(r,i,a)=>{var o=a(1017);var s=a(7147);var l=parseInt("0777",8);r.exports=mkdirP.mkdirp=mkdirP.mkdirP=mkdirP;function mkdirP(r,i,a,u){if(typeof i==="function"){a=i;i={}}else if(!i||typeof i!=="object"){i={mode:i}}var v=i.mode;var b=i.fs||s;if(v===undefined){v=l}if(!u)u=null;var y=a||function(){};r=o.resolve(r);b.mkdir(r,v,(function(a){if(!a){u=u||r;return y(null,u)}switch(a.code){case"ENOENT":if(o.dirname(r)===r)return y(a);mkdirP(o.dirname(r),i,(function(a,o){if(a)y(a,o);else mkdirP(r,i,y,o)}));break;default:b.stat(r,(function(r,i){if(r||!i.isDirectory())y(a,u);else y(null,u)}));break}}))}mkdirP.sync=function sync(r,i,a){if(!i||typeof i!=="object"){i={mode:i}}var u=i.mode;var v=i.fs||s;if(u===undefined){u=l}if(!a)a=null;r=o.resolve(r);try{v.mkdirSync(r,u);a=a||r}catch(s){switch(s.code){case"ENOENT":a=sync(o.dirname(r),i,a);sync(r,i,a);break;default:var b;try{b=v.statSync(r)}catch(r){throw s}if(!b.isDirectory())throw s;break}}return a}},9063:(r,i)=>{"use strict";function GifWriter(r,i,a,o){var s=0;var o=o===undefined?{}:o;var l=o.loop===undefined?null:o.loop;var u=o.palette===undefined?null:o.palette;if(i<=0||a<=0||i>65535||a>65535)throw new Error("Width/Height invalid.");function check_palette_and_num_colors(r){var i=r.length;if(i<2||i>256||i&i-1){throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.")}return i}r[s++]=71;r[s++]=73;r[s++]=70;r[s++]=56;r[s++]=57;r[s++]=97;var v=0;var b=0;if(u!==null){var y=check_palette_and_num_colors(u);while(y>>=1)++v;y=1<<v;--v;if(o.background!==undefined){b=o.background;if(b>=y)throw new Error("Background index out of range.");if(b===0)throw new Error("Background index explicitly passed as 0.")}}r[s++]=i&255;r[s++]=i>>8&255;r[s++]=a&255;r[s++]=a>>8&255;r[s++]=(u!==null?128:0)|v;r[s++]=b;r[s++]=0;if(u!==null){for(var x=0,A=u.length;x<A;++x){var E=u[x];r[s++]=E>>16&255;r[s++]=E>>8&255;r[s++]=E&255}}if(l!==null){if(l<0||l>65535)throw new Error("Loop count invalid.");r[s++]=33;r[s++]=255;r[s++]=11;r[s++]=78;r[s++]=69;r[s++]=84;r[s++]=83;r[s++]=67;r[s++]=65;r[s++]=80;r[s++]=69;r[s++]=50;r[s++]=46;r[s++]=48;r[s++]=3;r[s++]=1;r[s++]=l&255;r[s++]=l>>8&255;r[s++]=0}var M=false;this.addFrame=function(i,a,o,l,v,b){if(M===true){--s;M=false}b=b===undefined?{}:b;if(i<0||a<0||i>65535||a>65535)throw new Error("x/y invalid.");if(o<=0||l<=0||o>65535||l>65535)throw new Error("Width/Height invalid.");if(v.length<o*l)throw new Error("Not enough pixels for the frame size.");var y=true;var x=b.palette;if(x===undefined||x===null){y=false;x=u}if(x===undefined||x===null)throw new Error("Must supply either a local or global palette.");var A=check_palette_and_num_colors(x);var E=0;while(A>>=1)++E;A=1<<E;var L=b.delay===undefined?0:b.delay;var P=b.disposal===undefined?0:b.disposal;if(P<0||P>3)throw new Error("Disposal out of range.");var T=false;var I=0;if(b.transparent!==undefined&&b.transparent!==null){T=true;I=b.transparent;if(I<0||I>=A)throw new Error("Transparent color index.")}if(P!==0||T||L!==0){r[s++]=33;r[s++]=249;r[s++]=4;r[s++]=P<<2|(T===true?1:0);r[s++]=L&255;r[s++]=L>>8&255;r[s++]=I;r[s++]=0}r[s++]=44;r[s++]=i&255;r[s++]=i>>8&255;r[s++]=a&255;r[s++]=a>>8&255;r[s++]=o&255;r[s++]=o>>8&255;r[s++]=l&255;r[s++]=l>>8&255;r[s++]=y===true?128|E-1:0;if(y===true){for(var O=0,S=x.length;O<S;++O){var k=x[O];r[s++]=k>>16&255;r[s++]=k>>8&255;r[s++]=k&255}}s=GifWriterOutputLZWCodeStream(r,s,E<2?2:E,v);return s};this.end=function(){if(M===false){r[s++]=59;M=true}return s};this.getOutputBuffer=function(){return r};this.setOutputBuffer=function(i){r=i};this.getOutputBufferPosition=function(){return s};this.setOutputBufferPosition=function(r){s=r}}function GifWriterOutputLZWCodeStream(r,i,a,o){r[i++]=a;var s=i++;var l=1<<a;var u=l-1;var v=l+1;var b=v+1;var y=a+1;var x=0;var A=0;function emit_bytes_to_buffer(a){while(x>=a){r[i++]=A&255;A>>=8;x-=8;if(i===s+256){r[s]=255;s=i++}}}function emit_code(r){A|=r<<x;x+=y;emit_bytes_to_buffer(8)}var E=o[0]&u;var M={};emit_code(l);for(var L=1,P=o.length;L<P;++L){var T=o[L]&u;var I=E<<8|T;var O=M[I];if(O===undefined){A|=E<<x;x+=y;while(x>=8){r[i++]=A&255;A>>=8;x-=8;if(i===s+256){r[s]=255;s=i++}}if(b===4096){emit_code(l);b=v+1;y=a+1;M={}}else{if(b>=1<<y)++y;M[I]=b++}E=T}else{E=O}}emit_code(E);emit_code(v);emit_bytes_to_buffer(1);if(s+1===i){r[s]=0}else{r[s]=i-s-1;r[i++]=0}return i}function GifReader(r){var i=0;if(r[i++]!==71||r[i++]!==73||r[i++]!==70||r[i++]!==56||(r[i++]+1&253)!==56||r[i++]!==97){throw new Error("Invalid GIF 87a/89a header.")}var a=r[i++]|r[i++]<<8;var o=r[i++]|r[i++]<<8;var s=r[i++];var l=s>>7;var u=s&7;var v=1<<u+1;var b=r[i++];r[i++];var y=null;var x=null;if(l){y=i;x=v;i+=v*3}var A=true;var E=[];var M=0;var L=null;var P=0;var T=null;this.width=a;this.height=o;while(A&&i<r.length){switch(r[i++]){case 33:switch(r[i++]){case 255:if(r[i]!==11||r[i+1]==78&&r[i+2]==69&&r[i+3]==84&&r[i+4]==83&&r[i+5]==67&&r[i+6]==65&&r[i+7]==80&&r[i+8]==69&&r[i+9]==50&&r[i+10]==46&&r[i+11]==48&&r[i+12]==3&&r[i+13]==1&&r[i+16]==0){i+=14;T=r[i++]|r[i++]<<8;i++}else{i+=12;while(true){var I=r[i++];if(!(I>=0))throw Error("Invalid block size");if(I===0)break;i+=I}}break;case 249:if(r[i++]!==4||r[i+4]!==0)throw new Error("Invalid graphics extension block.");var O=r[i++];M=r[i++]|r[i++]<<8;L=r[i++];if((O&1)===0)L=null;P=O>>2&7;i++;break;case 254:while(true){var I=r[i++];if(!(I>=0))throw Error("Invalid block size");if(I===0)break;i+=I}break;default:throw new Error("Unknown graphic control label: 0x"+r[i-1].toString(16))}break;case 44:var S=r[i++]|r[i++]<<8;var k=r[i++]|r[i++]<<8;var D=r[i++]|r[i++]<<8;var z=r[i++]|r[i++]<<8;var R=r[i++];var B=R>>7;var V=R>>6&1;var j=R&7;var H=1<<j+1;var U=y;var _=x;var G=false;if(B){var G=true;U=i;_=H;i+=H*3}var J=i;i++;while(true){var I=r[i++];if(!(I>=0))throw Error("Invalid block size");if(I===0)break;i+=I}E.push({x:S,y:k,width:D,height:z,has_local_palette:G,palette_offset:U,palette_size:_,data_offset:J,data_length:i-J,transparent_index:L,interlaced:!!V,delay:M,disposal:P});break;case 59:A=false;break;default:throw new Error("Unknown gif block: 0x"+r[i-1].toString(16));break}}this.numFrames=function(){return E.length};this.loopCount=function(){return T};this.frameInfo=function(r){if(r<0||r>=E.length)throw new Error("Frame index out of range.");return E[r]};this.decodeAndBlitFrameBGRA=function(i,o){var s=this.frameInfo(i);var l=s.width*s.height;var u=new Uint8Array(l);GifReaderLZWOutputIndexStream(r,s.data_offset,u,l);var v=s.palette_offset;var b=s.transparent_index;if(b===null)b=256;var y=s.width;var x=a-y;var A=y;var E=(s.y*a+s.x)*4;var M=((s.y+s.height)*a+s.x)*4;var L=E;var P=x*4;if(s.interlaced===true){P+=a*4*7}var T=8;for(var I=0,O=u.length;I<O;++I){var S=u[I];if(A===0){L+=P;A=y;if(L>=M){P=x*4+a*4*(T-1);L=E+(y+x)*(T<<1);T>>=1}}if(S===b){L+=4}else{var k=r[v+S*3];var D=r[v+S*3+1];var z=r[v+S*3+2];o[L++]=z;o[L++]=D;o[L++]=k;o[L++]=255}--A}};this.decodeAndBlitFrameRGBA=function(i,o){var s=this.frameInfo(i);var l=s.width*s.height;var u=new Uint8Array(l);GifReaderLZWOutputIndexStream(r,s.data_offset,u,l);var v=s.palette_offset;var b=s.transparent_index;if(b===null)b=256;var y=s.width;var x=a-y;var A=y;var E=(s.y*a+s.x)*4;var M=((s.y+s.height)*a+s.x)*4;var L=E;var P=x*4;if(s.interlaced===true){P+=a*4*7}var T=8;for(var I=0,O=u.length;I<O;++I){var S=u[I];if(A===0){L+=P;A=y;if(L>=M){P=x*4+a*4*(T-1);L=E+(y+x)*(T<<1);T>>=1}}if(S===b){L+=4}else{var k=r[v+S*3];var D=r[v+S*3+1];var z=r[v+S*3+2];o[L++]=k;o[L++]=D;o[L++]=z;o[L++]=255}--A}}}function GifReaderLZWOutputIndexStream(r,i,a,o){var s=r[i++];var l=1<<s;var u=l+1;var v=u+1;var b=s+1;var y=(1<<b)-1;var x=0;var A=0;var E=0;var M=r[i++];var L=new Int32Array(4096);var P=null;while(true){while(x<16){if(M===0)break;A|=r[i++]<<x;x+=8;if(M===1){M=r[i++]}else{--M}}if(x<b)break;var T=A&y;A>>=b;x-=b;if(T===l){v=u+1;b=s+1;y=(1<<b)-1;P=null;continue}else if(T===u){break}var I=T<v?T:P;var O=0;var S=I;while(S>l){S=L[S]>>8;++O}var k=S;var D=E+O+(I!==T?1:0);if(D>o){console.log("Warning, gif stream longer than expected.");return}a[E++]=k;E+=O;var z=E;if(I!==T)a[E++]=k;S=I;while(O--){S=L[S];a[--z]=S&255;S>>=8}if(P!==null&&v<4096){L[v++]=P<<8|k;if(v>=y+1&&b<12){++b;y=y<<1|1}}P=T}if(E!==o){console.log("Warning, gif stream shorter than expected.")}return a}try{i.GifWriter=GifWriter;i.GifReader=GifReader}catch(r){}},5670:(r,i,a)=>{"use strict";var o=a(9527).assign;var s=a(5417);var l=a(8148);var u=a(6116);var v={};o(v,s,l,u);r.exports=v},5417:(r,i,a)=>{"use strict";var o=a(4176);var s=a(9527);var l=a(4189);var u=a(7874);var v=a(9182);var b=Object.prototype.toString;var y=0;var x=4;var A=0;var E=1;var M=2;var L=-1;var P=0;var T=8;function Deflate(r){if(!(this instanceof Deflate))return new Deflate(r);this.options=s.assign({level:L,method:T,chunkSize:16384,windowBits:15,memLevel:8,strategy:P,to:""},r||{});var i=this.options;if(i.raw&&i.windowBits>0){i.windowBits=-i.windowBits}else if(i.gzip&&i.windowBits>0&&i.windowBits<16){i.windowBits+=16}this.err=0;this.msg="";this.ended=false;this.chunks=[];this.strm=new v;this.strm.avail_out=0;var a=o.deflateInit2(this.strm,i.level,i.method,i.windowBits,i.memLevel,i.strategy);if(a!==A){throw new Error(u[a])}if(i.header){o.deflateSetHeader(this.strm,i.header)}if(i.dictionary){var y;if(typeof i.dictionary==="string"){y=l.string2buf(i.dictionary)}else if(b.call(i.dictionary)==="[object ArrayBuffer]"){y=new Uint8Array(i.dictionary)}else{y=i.dictionary}a=o.deflateSetDictionary(this.strm,y);if(a!==A){throw new Error(u[a])}this._dict_set=true}}Deflate.prototype.push=function(r,i){var a=this.strm;var u=this.options.chunkSize;var v,L;if(this.ended){return false}L=i===~~i?i:i===true?x:y;if(typeof r==="string"){a.input=l.string2buf(r)}else if(b.call(r)==="[object ArrayBuffer]"){a.input=new Uint8Array(r)}else{a.input=r}a.next_in=0;a.avail_in=a.input.length;do{if(a.avail_out===0){a.output=new s.Buf8(u);a.next_out=0;a.avail_out=u}v=o.deflate(a,L);if(v!==E&&v!==A){this.onEnd(v);this.ended=true;return false}if(a.avail_out===0||a.avail_in===0&&(L===x||L===M)){if(this.options.to==="string"){this.onData(l.buf2binstring(s.shrinkBuf(a.output,a.next_out)))}else{this.onData(s.shrinkBuf(a.output,a.next_out))}}}while((a.avail_in>0||a.avail_out===0)&&v!==E);if(L===x){v=o.deflateEnd(this.strm);this.onEnd(v);this.ended=true;return v===A}if(L===M){this.onEnd(A);a.avail_out=0;return true}return true};Deflate.prototype.onData=function(r){this.chunks.push(r)};Deflate.prototype.onEnd=function(r){if(r===A){if(this.options.to==="string"){this.result=this.chunks.join("")}else{this.result=s.flattenChunks(this.chunks)}}this.chunks=[];this.err=r;this.msg=this.strm.msg};function deflate(r,i){var a=new Deflate(i);a.push(r,true);if(a.err){throw a.msg||u[a.err]}return a.result}function deflateRaw(r,i){i=i||{};i.raw=true;return deflate(r,i)}function gzip(r,i){i=i||{};i.gzip=true;return deflate(r,i)}i.Deflate=Deflate;i.deflate=deflate;i.deflateRaw=deflateRaw;i.gzip=gzip},8148:(r,i,a)=>{"use strict";var o=a(642);var s=a(9527);var l=a(4189);var u=a(6116);var v=a(7874);var b=a(9182);var y=a(1739);var x=Object.prototype.toString;function Inflate(r){if(!(this instanceof Inflate))return new Inflate(r);this.options=s.assign({chunkSize:16384,windowBits:0,to:""},r||{});var i=this.options;if(i.raw&&i.windowBits>=0&&i.windowBits<16){i.windowBits=-i.windowBits;if(i.windowBits===0){i.windowBits=-15}}if(i.windowBits>=0&&i.windowBits<16&&!(r&&r.windowBits)){i.windowBits+=32}if(i.windowBits>15&&i.windowBits<48){if((i.windowBits&15)===0){i.windowBits|=15}}this.err=0;this.msg="";this.ended=false;this.chunks=[];this.strm=new b;this.strm.avail_out=0;var a=o.inflateInit2(this.strm,i.windowBits);if(a!==u.Z_OK){throw new Error(v[a])}this.header=new y;o.inflateGetHeader(this.strm,this.header);if(i.dictionary){if(typeof i.dictionary==="string"){i.dictionary=l.string2buf(i.dictionary)}else if(x.call(i.dictionary)==="[object ArrayBuffer]"){i.dictionary=new Uint8Array(i.dictionary)}if(i.raw){a=o.inflateSetDictionary(this.strm,i.dictionary);if(a!==u.Z_OK){throw new Error(v[a])}}}}Inflate.prototype.push=function(r,i){var a=this.strm;var v=this.options.chunkSize;var b=this.options.dictionary;var y,A;var E,M,L;var P=false;if(this.ended){return false}A=i===~~i?i:i===true?u.Z_FINISH:u.Z_NO_FLUSH;if(typeof r==="string"){a.input=l.binstring2buf(r)}else if(x.call(r)==="[object ArrayBuffer]"){a.input=new Uint8Array(r)}else{a.input=r}a.next_in=0;a.avail_in=a.input.length;do{if(a.avail_out===0){a.output=new s.Buf8(v);a.next_out=0;a.avail_out=v}y=o.inflate(a,u.Z_NO_FLUSH);if(y===u.Z_NEED_DICT&&b){y=o.inflateSetDictionary(this.strm,b)}if(y===u.Z_BUF_ERROR&&P===true){y=u.Z_OK;P=false}if(y!==u.Z_STREAM_END&&y!==u.Z_OK){this.onEnd(y);this.ended=true;return false}if(a.next_out){if(a.avail_out===0||y===u.Z_STREAM_END||a.avail_in===0&&(A===u.Z_FINISH||A===u.Z_SYNC_FLUSH)){if(this.options.to==="string"){E=l.utf8border(a.output,a.next_out);M=a.next_out-E;L=l.buf2string(a.output,E);a.next_out=M;a.avail_out=v-M;if(M){s.arraySet(a.output,a.output,E,M,0)}this.onData(L)}else{this.onData(s.shrinkBuf(a.output,a.next_out))}}}if(a.avail_in===0&&a.avail_out===0){P=true}}while((a.avail_in>0||a.avail_out===0)&&y!==u.Z_STREAM_END);if(y===u.Z_STREAM_END){A=u.Z_FINISH}if(A===u.Z_FINISH){y=o.inflateEnd(this.strm);this.onEnd(y);this.ended=true;return y===u.Z_OK}if(A===u.Z_SYNC_FLUSH){this.onEnd(u.Z_OK);a.avail_out=0;return true}return true};Inflate.prototype.onData=function(r){this.chunks.push(r)};Inflate.prototype.onEnd=function(r){if(r===u.Z_OK){if(this.options.to==="string"){this.result=this.chunks.join("")}else{this.result=s.flattenChunks(this.chunks)}}this.chunks=[];this.err=r;this.msg=this.strm.msg};function inflate(r,i){var a=new Inflate(i);a.push(r,true);if(a.err){throw a.msg||v[a.err]}return a.result}function inflateRaw(r,i){i=i||{};i.raw=true;return inflate(r,i)}i.Inflate=Inflate;i.inflate=inflate;i.inflateRaw=inflateRaw;i.ungzip=inflate},9527:(r,i)=>{"use strict";var a=typeof Uint8Array!=="undefined"&&typeof Uint16Array!=="undefined"&&typeof Int32Array!=="undefined";function _has(r,i){return Object.prototype.hasOwnProperty.call(r,i)}i.assign=function(r){var i=Array.prototype.slice.call(arguments,1);while(i.length){var a=i.shift();if(!a){continue}if(typeof a!=="object"){throw new TypeError(a+"must be non-object")}for(var o in a){if(_has(a,o)){r[o]=a[o]}}}return r};i.shrinkBuf=function(r,i){if(r.length===i){return r}if(r.subarray){return r.subarray(0,i)}r.length=i;return r};var o={arraySet:function(r,i,a,o,s){if(i.subarray&&r.subarray){r.set(i.subarray(a,a+o),s);return}for(var l=0;l<o;l++){r[s+l]=i[a+l]}},flattenChunks:function(r){var i,a,o,s,l,u;o=0;for(i=0,a=r.length;i<a;i++){o+=r[i].length}u=new Uint8Array(o);s=0;for(i=0,a=r.length;i<a;i++){l=r[i];u.set(l,s);s+=l.length}return u}};var s={arraySet:function(r,i,a,o,s){for(var l=0;l<o;l++){r[s+l]=i[a+l]}},flattenChunks:function(r){return[].concat.apply([],r)}};i.setTyped=function(r){if(r){i.Buf8=Uint8Array;i.Buf16=Uint16Array;i.Buf32=Int32Array;i.assign(i,o)}else{i.Buf8=Array;i.Buf16=Array;i.Buf32=Array;i.assign(i,s)}};i.setTyped(a)},4189:(r,i,a)=>{"use strict";var o=a(9527);var s=true;var l=true;try{String.fromCharCode.apply(null,[0])}catch(r){s=false}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(r){l=false}var u=new o.Buf8(256);for(var v=0;v<256;v++){u[v]=v>=252?6:v>=248?5:v>=240?4:v>=224?3:v>=192?2:1}u[254]=u[254]=1;i.string2buf=function(r){var i,a,s,l,u,v=r.length,b=0;for(l=0;l<v;l++){a=r.charCodeAt(l);if((a&64512)===55296&&l+1<v){s=r.charCodeAt(l+1);if((s&64512)===56320){a=65536+(a-55296<<10)+(s-56320);l++}}b+=a<128?1:a<2048?2:a<65536?3:4}i=new o.Buf8(b);for(u=0,l=0;u<b;l++){a=r.charCodeAt(l);if((a&64512)===55296&&l+1<v){s=r.charCodeAt(l+1);if((s&64512)===56320){a=65536+(a-55296<<10)+(s-56320);l++}}if(a<128){i[u++]=a}else if(a<2048){i[u++]=192|a>>>6;i[u++]=128|a&63}else if(a<65536){i[u++]=224|a>>>12;i[u++]=128|a>>>6&63;i[u++]=128|a&63}else{i[u++]=240|a>>>18;i[u++]=128|a>>>12&63;i[u++]=128|a>>>6&63;i[u++]=128|a&63}}return i};function buf2binstring(r,i){if(i<65534){if(r.subarray&&l||!r.subarray&&s){return String.fromCharCode.apply(null,o.shrinkBuf(r,i))}}var a="";for(var u=0;u<i;u++){a+=String.fromCharCode(r[u])}return a}i.buf2binstring=function(r){return buf2binstring(r,r.length)};i.binstring2buf=function(r){var i=new o.Buf8(r.length);for(var a=0,s=i.length;a<s;a++){i[a]=r.charCodeAt(a)}return i};i.buf2string=function(r,i){var a,o,s,l;var v=i||r.length;var b=new Array(v*2);for(o=0,a=0;a<v;){s=r[a++];if(s<128){b[o++]=s;continue}l=u[s];if(l>4){b[o++]=65533;a+=l-1;continue}s&=l===2?31:l===3?15:7;while(l>1&&a<v){s=s<<6|r[a++]&63;l--}if(l>1){b[o++]=65533;continue}if(s<65536){b[o++]=s}else{s-=65536;b[o++]=55296|s>>10&1023;b[o++]=56320|s&1023}}return buf2binstring(b,o)};i.utf8border=function(r,i){var a;i=i||r.length;if(i>r.length){i=r.length}a=i-1;while(a>=0&&(r[a]&192)===128){a--}if(a<0){return i}if(a===0){return i}return a+u[r[a]]>i?a:i}},6478:r=>{"use strict";function adler32(r,i,a,o){var s=r&65535|0,l=r>>>16&65535|0,u=0;while(a!==0){u=a>2e3?2e3:a;a-=u;do{s=s+i[o++]|0;l=l+s|0}while(--u);s%=65521;l%=65521}return s|l<<16|0}r.exports=adler32},6116:r=>{"use strict";r.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},9729:r=>{"use strict";function makeTable(){var r,i=[];for(var a=0;a<256;a++){r=a;for(var o=0;o<8;o++){r=r&1?3988292384^r>>>1:r>>>1}i[a]=r}return i}var i=makeTable();function crc32(r,a,o,s){var l=i,u=s+o;r^=-1;for(var v=s;v<u;v++){r=r>>>8^l[(r^a[v])&255]}return r^-1}r.exports=crc32},4176:(r,i,a)=>{"use strict";var o=a(9527);var s=a(1553);var l=a(6478);var u=a(9729);var v=a(7874);var b=0;var y=1;var x=3;var A=4;var E=5;var M=0;var L=1;var P=-2;var T=-3;var I=-5;var O=-1;var S=1;var k=2;var D=3;var z=4;var R=0;var B=2;var V=8;var j=9;var H=15;var U=8;var _=29;var G=256;var J=G+1+_;var Z=30;var K=19;var Q=2*J+1;var $=15;var tt=3;var et=258;var rt=et+tt+1;var it=32;var nt=42;var at=69;var ot=73;var st=91;var lt=103;var ut=113;var ft=666;var ht=1;var ct=2;var pt=3;var dt=4;var mt=3;function err(r,i){r.msg=v[i];return i}function rank(r){return(r<<1)-(r>4?9:0)}function zero(r){var i=r.length;while(--i>=0){r[i]=0}}function flush_pending(r){var i=r.state;var a=i.pending;if(a>r.avail_out){a=r.avail_out}if(a===0){return}o.arraySet(r.output,i.pending_buf,i.pending_out,a,r.next_out);r.next_out+=a;i.pending_out+=a;r.total_out+=a;r.avail_out-=a;i.pending-=a;if(i.pending===0){i.pending_out=0}}function flush_block_only(r,i){s._tr_flush_block(r,r.block_start>=0?r.block_start:-1,r.strstart-r.block_start,i);r.block_start=r.strstart;flush_pending(r.strm)}function put_byte(r,i){r.pending_buf[r.pending++]=i}function putShortMSB(r,i){r.pending_buf[r.pending++]=i>>>8&255;r.pending_buf[r.pending++]=i&255}function read_buf(r,i,a,s){var v=r.avail_in;if(v>s){v=s}if(v===0){return 0}r.avail_in-=v;o.arraySet(i,r.input,r.next_in,v,a);if(r.state.wrap===1){r.adler=l(r.adler,i,v,a)}else if(r.state.wrap===2){r.adler=u(r.adler,i,v,a)}r.next_in+=v;r.total_in+=v;return v}function longest_match(r,i){var a=r.max_chain_length;var o=r.strstart;var s;var l;var u=r.prev_length;var v=r.nice_match;var b=r.strstart>r.w_size-rt?r.strstart-(r.w_size-rt):0;var y=r.window;var x=r.w_mask;var A=r.prev;var E=r.strstart+et;var M=y[o+u-1];var L=y[o+u];if(r.prev_length>=r.good_match){a>>=2}if(v>r.lookahead){v=r.lookahead}do{s=i;if(y[s+u]!==L||y[s+u-1]!==M||y[s]!==y[o]||y[++s]!==y[o+1]){continue}o+=2;s++;do{}while(y[++o]===y[++s]&&y[++o]===y[++s]&&y[++o]===y[++s]&&y[++o]===y[++s]&&y[++o]===y[++s]&&y[++o]===y[++s]&&y[++o]===y[++s]&&y[++o]===y[++s]&&o<E);l=et-(E-o);o=E-et;if(l>u){r.match_start=i;u=l;if(l>=v){break}M=y[o+u-1];L=y[o+u]}}while((i=A[i&x])>b&&--a!==0);if(u<=r.lookahead){return u}return r.lookahead}function fill_window(r){var i=r.w_size;var a,s,l,u,v;do{u=r.window_size-r.lookahead-r.strstart;if(r.strstart>=i+(i-rt)){o.arraySet(r.window,r.window,i,i,0);r.match_start-=i;r.strstart-=i;r.block_start-=i;s=r.hash_size;a=s;do{l=r.head[--a];r.head[a]=l>=i?l-i:0}while(--s);s=i;a=s;do{l=r.prev[--a];r.prev[a]=l>=i?l-i:0}while(--s);u+=i}if(r.strm.avail_in===0){break}s=read_buf(r.strm,r.window,r.strstart+r.lookahead,u);r.lookahead+=s;if(r.lookahead+r.insert>=tt){v=r.strstart-r.insert;r.ins_h=r.window[v];r.ins_h=(r.ins_h<<r.hash_shift^r.window[v+1])&r.hash_mask;while(r.insert){r.ins_h=(r.ins_h<<r.hash_shift^r.window[v+tt-1])&r.hash_mask;r.prev[v&r.w_mask]=r.head[r.ins_h];r.head[r.ins_h]=v;v++;r.insert--;if(r.lookahead+r.insert<tt){break}}}}while(r.lookahead<rt&&r.strm.avail_in!==0)}function deflate_stored(r,i){var a=65535;if(a>r.pending_buf_size-5){a=r.pending_buf_size-5}for(;;){if(r.lookahead<=1){fill_window(r);if(r.lookahead===0&&i===b){return ht}if(r.lookahead===0){break}}r.strstart+=r.lookahead;r.lookahead=0;var o=r.block_start+a;if(r.strstart===0||r.strstart>=o){r.lookahead=r.strstart-o;r.strstart=o;flush_block_only(r,false);if(r.strm.avail_out===0){return ht}}if(r.strstart-r.block_start>=r.w_size-rt){flush_block_only(r,false);if(r.strm.avail_out===0){return ht}}}r.insert=0;if(i===A){flush_block_only(r,true);if(r.strm.avail_out===0){return pt}return dt}if(r.strstart>r.block_start){flush_block_only(r,false);if(r.strm.avail_out===0){return ht}}return ht}function deflate_fast(r,i){var a;var o;for(;;){if(r.lookahead<rt){fill_window(r);if(r.lookahead<rt&&i===b){return ht}if(r.lookahead===0){break}}a=0;if(r.lookahead>=tt){r.ins_h=(r.ins_h<<r.hash_shift^r.window[r.strstart+tt-1])&r.hash_mask;a=r.prev[r.strstart&r.w_mask]=r.head[r.ins_h];r.head[r.ins_h]=r.strstart}if(a!==0&&r.strstart-a<=r.w_size-rt){r.match_length=longest_match(r,a)}if(r.match_length>=tt){o=s._tr_tally(r,r.strstart-r.match_start,r.match_length-tt);r.lookahead-=r.match_length;if(r.match_length<=r.max_lazy_match&&r.lookahead>=tt){r.match_length--;do{r.strstart++;r.ins_h=(r.ins_h<<r.hash_shift^r.window[r.strstart+tt-1])&r.hash_mask;a=r.prev[r.strstart&r.w_mask]=r.head[r.ins_h];r.head[r.ins_h]=r.strstart}while(--r.match_length!==0);r.strstart++}else{r.strstart+=r.match_length;r.match_length=0;r.ins_h=r.window[r.strstart];r.ins_h=(r.ins_h<<r.hash_shift^r.window[r.strstart+1])&r.hash_mask}}else{o=s._tr_tally(r,0,r.window[r.strstart]);r.lookahead--;r.strstart++}if(o){flush_block_only(r,false);if(r.strm.avail_out===0){return ht}}}r.insert=r.strstart<tt-1?r.strstart:tt-1;if(i===A){flush_block_only(r,true);if(r.strm.avail_out===0){return pt}return dt}if(r.last_lit){flush_block_only(r,false);if(r.strm.avail_out===0){return ht}}return ct}function deflate_slow(r,i){var a;var o;var l;for(;;){if(r.lookahead<rt){fill_window(r);if(r.lookahead<rt&&i===b){return ht}if(r.lookahead===0){break}}a=0;if(r.lookahead>=tt){r.ins_h=(r.ins_h<<r.hash_shift^r.window[r.strstart+tt-1])&r.hash_mask;a=r.prev[r.strstart&r.w_mask]=r.head[r.ins_h];r.head[r.ins_h]=r.strstart}r.prev_length=r.match_length;r.prev_match=r.match_start;r.match_length=tt-1;if(a!==0&&r.prev_length<r.max_lazy_match&&r.strstart-a<=r.w_size-rt){r.match_length=longest_match(r,a);if(r.match_length<=5&&(r.strategy===S||r.match_length===tt&&r.strstart-r.match_start>4096)){r.match_length=tt-1}}if(r.prev_length>=tt&&r.match_length<=r.prev_length){l=r.strstart+r.lookahead-tt;o=s._tr_tally(r,r.strstart-1-r.prev_match,r.prev_length-tt);r.lookahead-=r.prev_length-1;r.prev_length-=2;do{if(++r.strstart<=l){r.ins_h=(r.ins_h<<r.hash_shift^r.window[r.strstart+tt-1])&r.hash_mask;a=r.prev[r.strstart&r.w_mask]=r.head[r.ins_h];r.head[r.ins_h]=r.strstart}}while(--r.prev_length!==0);r.match_available=0;r.match_length=tt-1;r.strstart++;if(o){flush_block_only(r,false);if(r.strm.avail_out===0){return ht}}}else if(r.match_available){o=s._tr_tally(r,0,r.window[r.strstart-1]);if(o){flush_block_only(r,false)}r.strstart++;r.lookahead--;if(r.strm.avail_out===0){return ht}}else{r.match_available=1;r.strstart++;r.lookahead--}}if(r.match_available){o=s._tr_tally(r,0,r.window[r.strstart-1]);r.match_available=0}r.insert=r.strstart<tt-1?r.strstart:tt-1;if(i===A){flush_block_only(r,true);if(r.strm.avail_out===0){return pt}return dt}if(r.last_lit){flush_block_only(r,false);if(r.strm.avail_out===0){return ht}}return ct}function deflate_rle(r,i){var a;var o;var l,u;var v=r.window;for(;;){if(r.lookahead<=et){fill_window(r);if(r.lookahead<=et&&i===b){return ht}if(r.lookahead===0){break}}r.match_length=0;if(r.lookahead>=tt&&r.strstart>0){l=r.strstart-1;o=v[l];if(o===v[++l]&&o===v[++l]&&o===v[++l]){u=r.strstart+et;do{}while(o===v[++l]&&o===v[++l]&&o===v[++l]&&o===v[++l]&&o===v[++l]&&o===v[++l]&&o===v[++l]&&o===v[++l]&&l<u);r.match_length=et-(u-l);if(r.match_length>r.lookahead){r.match_length=r.lookahead}}}if(r.match_length>=tt){a=s._tr_tally(r,1,r.match_length-tt);r.lookahead-=r.match_length;r.strstart+=r.match_length;r.match_length=0}else{a=s._tr_tally(r,0,r.window[r.strstart]);r.lookahead--;r.strstart++}if(a){flush_block_only(r,false);if(r.strm.avail_out===0){return ht}}}r.insert=0;if(i===A){flush_block_only(r,true);if(r.strm.avail_out===0){return pt}return dt}if(r.last_lit){flush_block_only(r,false);if(r.strm.avail_out===0){return ht}}return ct}function deflate_huff(r,i){var a;for(;;){if(r.lookahead===0){fill_window(r);if(r.lookahead===0){if(i===b){return ht}break}}r.match_length=0;a=s._tr_tally(r,0,r.window[r.strstart]);r.lookahead--;r.strstart++;if(a){flush_block_only(r,false);if(r.strm.avail_out===0){return ht}}}r.insert=0;if(i===A){flush_block_only(r,true);if(r.strm.avail_out===0){return pt}return dt}if(r.last_lit){flush_block_only(r,false);if(r.strm.avail_out===0){return ht}}return ct}function Config(r,i,a,o,s){this.good_length=r;this.max_lazy=i;this.nice_length=a;this.max_chain=o;this.func=s}var vt;vt=[new Config(0,0,0,0,deflate_stored),new Config(4,4,8,4,deflate_fast),new Config(4,5,16,8,deflate_fast),new Config(4,6,32,32,deflate_fast),new Config(4,4,16,16,deflate_slow),new Config(8,16,32,32,deflate_slow),new Config(8,16,128,128,deflate_slow),new Config(8,32,128,256,deflate_slow),new Config(32,128,258,1024,deflate_slow),new Config(32,258,258,4096,deflate_slow)];function lm_init(r){r.window_size=2*r.w_size;zero(r.head);r.max_lazy_match=vt[r.level].max_lazy;r.good_match=vt[r.level].good_length;r.nice_match=vt[r.level].nice_length;r.max_chain_length=vt[r.level].max_chain;r.strstart=0;r.block_start=0;r.lookahead=0;r.insert=0;r.match_length=r.prev_length=tt-1;r.match_available=0;r.ins_h=0}function DeflateState(){this.strm=null;this.status=0;this.pending_buf=null;this.pending_buf_size=0;this.pending_out=0;this.pending=0;this.wrap=0;this.gzhead=null;this.gzindex=0;this.method=V;this.last_flush=-1;this.w_size=0;this.w_bits=0;this.w_mask=0;this.window=null;this.window_size=0;this.prev=null;this.head=null;this.ins_h=0;this.hash_size=0;this.hash_bits=0;this.hash_mask=0;this.hash_shift=0;this.block_start=0;this.match_length=0;this.prev_match=0;this.match_available=0;this.strstart=0;this.match_start=0;this.lookahead=0;this.prev_length=0;this.max_chain_length=0;this.max_lazy_match=0;this.level=0;this.strategy=0;this.good_match=0;this.nice_match=0;this.dyn_ltree=new o.Buf16(Q*2);this.dyn_dtree=new o.Buf16((2*Z+1)*2);this.bl_tree=new o.Buf16((2*K+1)*2);zero(this.dyn_ltree);zero(this.dyn_dtree);zero(this.bl_tree);this.l_desc=null;this.d_desc=null;this.bl_desc=null;this.bl_count=new o.Buf16($+1);this.heap=new o.Buf16(2*J+1);zero(this.heap);this.heap_len=0;this.heap_max=0;this.depth=new o.Buf16(2*J+1);zero(this.depth);this.l_buf=0;this.lit_bufsize=0;this.last_lit=0;this.d_buf=0;this.opt_len=0;this.static_len=0;this.matches=0;this.insert=0;this.bi_buf=0;this.bi_valid=0}function deflateResetKeep(r){var i;if(!r||!r.state){return err(r,P)}r.total_in=r.total_out=0;r.data_type=B;i=r.state;i.pending=0;i.pending_out=0;if(i.wrap<0){i.wrap=-i.wrap}i.status=i.wrap?nt:ut;r.adler=i.wrap===2?0:1;i.last_flush=b;s._tr_init(i);return M}function deflateReset(r){var i=deflateResetKeep(r);if(i===M){lm_init(r.state)}return i}function deflateSetHeader(r,i){if(!r||!r.state){return P}if(r.state.wrap!==2){return P}r.state.gzhead=i;return M}function deflateInit2(r,i,a,s,l,u){if(!r){return P}var v=1;if(i===O){i=6}if(s<0){v=0;s=-s}else if(s>15){v=2;s-=16}if(l<1||l>j||a!==V||s<8||s>15||i<0||i>9||u<0||u>z){return err(r,P)}if(s===8){s=9}var b=new DeflateState;r.state=b;b.strm=r;b.wrap=v;b.gzhead=null;b.w_bits=s;b.w_size=1<<b.w_bits;b.w_mask=b.w_size-1;b.hash_bits=l+7;b.hash_size=1<<b.hash_bits;b.hash_mask=b.hash_size-1;b.hash_shift=~~((b.hash_bits+tt-1)/tt);b.window=new o.Buf8(b.w_size*2);b.head=new o.Buf16(b.hash_size);b.prev=new o.Buf16(b.w_size);b.lit_bufsize=1<<l+6;b.pending_buf_size=b.lit_bufsize*4;b.pending_buf=new o.Buf8(b.pending_buf_size);b.d_buf=1*b.lit_bufsize;b.l_buf=(1+2)*b.lit_bufsize;b.level=i;b.strategy=u;b.method=a;return deflateReset(r)}function deflateInit(r,i){return deflateInit2(r,i,V,H,U,R)}function deflate(r,i){var a,o;var l,v;if(!r||!r.state||i>E||i<0){return r?err(r,P):P}o=r.state;if(!r.output||!r.input&&r.avail_in!==0||o.status===ft&&i!==A){return err(r,r.avail_out===0?I:P)}o.strm=r;a=o.last_flush;o.last_flush=i;if(o.status===nt){if(o.wrap===2){r.adler=0;put_byte(o,31);put_byte(o,139);put_byte(o,8);if(!o.gzhead){put_byte(o,0);put_byte(o,0);put_byte(o,0);put_byte(o,0);put_byte(o,0);put_byte(o,o.level===9?2:o.strategy>=k||o.level<2?4:0);put_byte(o,mt);o.status=ut}else{put_byte(o,(o.gzhead.text?1:0)+(o.gzhead.hcrc?2:0)+(!o.gzhead.extra?0:4)+(!o.gzhead.name?0:8)+(!o.gzhead.comment?0:16));put_byte(o,o.gzhead.time&255);put_byte(o,o.gzhead.time>>8&255);put_byte(o,o.gzhead.time>>16&255);put_byte(o,o.gzhead.time>>24&255);put_byte(o,o.level===9?2:o.strategy>=k||o.level<2?4:0);put_byte(o,o.gzhead.os&255);if(o.gzhead.extra&&o.gzhead.extra.length){put_byte(o,o.gzhead.extra.length&255);put_byte(o,o.gzhead.extra.length>>8&255)}if(o.gzhead.hcrc){r.adler=u(r.adler,o.pending_buf,o.pending,0)}o.gzindex=0;o.status=at}}else{var T=V+(o.w_bits-8<<4)<<8;var O=-1;if(o.strategy>=k||o.level<2){O=0}else if(o.level<6){O=1}else if(o.level===6){O=2}else{O=3}T|=O<<6;if(o.strstart!==0){T|=it}T+=31-T%31;o.status=ut;putShortMSB(o,T);if(o.strstart!==0){putShortMSB(o,r.adler>>>16);putShortMSB(o,r.adler&65535)}r.adler=1}}if(o.status===at){if(o.gzhead.extra){l=o.pending;while(o.gzindex<(o.gzhead.extra.length&65535)){if(o.pending===o.pending_buf_size){if(o.gzhead.hcrc&&o.pending>l){r.adler=u(r.adler,o.pending_buf,o.pending-l,l)}flush_pending(r);l=o.pending;if(o.pending===o.pending_buf_size){break}}put_byte(o,o.gzhead.extra[o.gzindex]&255);o.gzindex++}if(o.gzhead.hcrc&&o.pending>l){r.adler=u(r.adler,o.pending_buf,o.pending-l,l)}if(o.gzindex===o.gzhead.extra.length){o.gzindex=0;o.status=ot}}else{o.status=ot}}if(o.status===ot){if(o.gzhead.name){l=o.pending;do{if(o.pending===o.pending_buf_size){if(o.gzhead.hcrc&&o.pending>l){r.adler=u(r.adler,o.pending_buf,o.pending-l,l)}flush_pending(r);l=o.pending;if(o.pending===o.pending_buf_size){v=1;break}}if(o.gzindex<o.gzhead.name.length){v=o.gzhead.name.charCodeAt(o.gzindex++)&255}else{v=0}put_byte(o,v)}while(v!==0);if(o.gzhead.hcrc&&o.pending>l){r.adler=u(r.adler,o.pending_buf,o.pending-l,l)}if(v===0){o.gzindex=0;o.status=st}}else{o.status=st}}if(o.status===st){if(o.gzhead.comment){l=o.pending;do{if(o.pending===o.pending_buf_size){if(o.gzhead.hcrc&&o.pending>l){r.adler=u(r.adler,o.pending_buf,o.pending-l,l)}flush_pending(r);l=o.pending;if(o.pending===o.pending_buf_size){v=1;break}}if(o.gzindex<o.gzhead.comment.length){v=o.gzhead.comment.charCodeAt(o.gzindex++)&255}else{v=0}put_byte(o,v)}while(v!==0);if(o.gzhead.hcrc&&o.pending>l){r.adler=u(r.adler,o.pending_buf,o.pending-l,l)}if(v===0){o.status=lt}}else{o.status=lt}}if(o.status===lt){if(o.gzhead.hcrc){if(o.pending+2>o.pending_buf_size){flush_pending(r)}if(o.pending+2<=o.pending_buf_size){put_byte(o,r.adler&255);put_byte(o,r.adler>>8&255);r.adler=0;o.status=ut}}else{o.status=ut}}if(o.pending!==0){flush_pending(r);if(r.avail_out===0){o.last_flush=-1;return M}}else if(r.avail_in===0&&rank(i)<=rank(a)&&i!==A){return err(r,I)}if(o.status===ft&&r.avail_in!==0){return err(r,I)}if(r.avail_in!==0||o.lookahead!==0||i!==b&&o.status!==ft){var S=o.strategy===k?deflate_huff(o,i):o.strategy===D?deflate_rle(o,i):vt[o.level].func(o,i);if(S===pt||S===dt){o.status=ft}if(S===ht||S===pt){if(r.avail_out===0){o.last_flush=-1}return M}if(S===ct){if(i===y){s._tr_align(o)}else if(i!==E){s._tr_stored_block(o,0,0,false);if(i===x){zero(o.head);if(o.lookahead===0){o.strstart=0;o.block_start=0;o.insert=0}}}flush_pending(r);if(r.avail_out===0){o.last_flush=-1;return M}}}if(i!==A){return M}if(o.wrap<=0){return L}if(o.wrap===2){put_byte(o,r.adler&255);put_byte(o,r.adler>>8&255);put_byte(o,r.adler>>16&255);put_byte(o,r.adler>>24&255);put_byte(o,r.total_in&255);put_byte(o,r.total_in>>8&255);put_byte(o,r.total_in>>16&255);put_byte(o,r.total_in>>24&255)}else{putShortMSB(o,r.adler>>>16);putShortMSB(o,r.adler&65535)}flush_pending(r);if(o.wrap>0){o.wrap=-o.wrap}return o.pending!==0?M:L}function deflateEnd(r){var i;if(!r||!r.state){return P}i=r.state.status;if(i!==nt&&i!==at&&i!==ot&&i!==st&&i!==lt&&i!==ut&&i!==ft){return err(r,P)}r.state=null;return i===ut?err(r,T):M}function deflateSetDictionary(r,i){var a=i.length;var s;var u,v;var b;var y;var x;var A;var E;if(!r||!r.state){return P}s=r.state;b=s.wrap;if(b===2||b===1&&s.status!==nt||s.lookahead){return P}if(b===1){r.adler=l(r.adler,i,a,0)}s.wrap=0;if(a>=s.w_size){if(b===0){zero(s.head);s.strstart=0;s.block_start=0;s.insert=0}E=new o.Buf8(s.w_size);o.arraySet(E,i,a-s.w_size,s.w_size,0);i=E;a=s.w_size}y=r.avail_in;x=r.next_in;A=r.input;r.avail_in=a;r.next_in=0;r.input=i;fill_window(s);while(s.lookahead>=tt){u=s.strstart;v=s.lookahead-(tt-1);do{s.ins_h=(s.ins_h<<s.hash_shift^s.window[u+tt-1])&s.hash_mask;s.prev[u&s.w_mask]=s.head[s.ins_h];s.head[s.ins_h]=u;u++}while(--v);s.strstart=u;s.lookahead=tt-1;fill_window(s)}s.strstart+=s.lookahead;s.block_start=s.strstart;s.insert=s.lookahead;s.lookahead=0;s.match_length=s.prev_length=tt-1;s.match_available=0;r.next_in=x;r.input=A;r.avail_in=y;s.wrap=b;return M}i.deflateInit=deflateInit;i.deflateInit2=deflateInit2;i.deflateReset=deflateReset;i.deflateResetKeep=deflateResetKeep;i.deflateSetHeader=deflateSetHeader;i.deflate=deflate;i.deflateEnd=deflateEnd;i.deflateSetDictionary=deflateSetDictionary;i.deflateInfo="pako deflate (from Nodeca project)"},1739:r=>{"use strict";function GZheader(){this.text=0;this.time=0;this.xflags=0;this.os=0;this.extra=null;this.extra_len=0;this.name="";this.comment="";this.hcrc=0;this.done=false}r.exports=GZheader},608:r=>{"use strict";var i=30;var a=12;r.exports=function inflate_fast(r,o){var s;var l;var u;var v;var b;var y;var x;var A;var E;var M;var L;var P;var T;var I;var O;var S;var k;var D;var z;var R;var B;var V;var j;var H,U;s=r.state;l=r.next_in;H=r.input;u=l+(r.avail_in-5);v=r.next_out;U=r.output;b=v-(o-r.avail_out);y=v+(r.avail_out-257);x=s.dmax;A=s.wsize;E=s.whave;M=s.wnext;L=s.window;P=s.hold;T=s.bits;I=s.lencode;O=s.distcode;S=(1<<s.lenbits)-1;k=(1<<s.distbits)-1;t:do{if(T<15){P+=H[l++]<<T;T+=8;P+=H[l++]<<T;T+=8}D=I[P&S];e:for(;;){z=D>>>24;P>>>=z;T-=z;z=D>>>16&255;if(z===0){U[v++]=D&65535}else if(z&16){R=D&65535;z&=15;if(z){if(T<z){P+=H[l++]<<T;T+=8}R+=P&(1<<z)-1;P>>>=z;T-=z}if(T<15){P+=H[l++]<<T;T+=8;P+=H[l++]<<T;T+=8}D=O[P&k];r:for(;;){z=D>>>24;P>>>=z;T-=z;z=D>>>16&255;if(z&16){B=D&65535;z&=15;if(T<z){P+=H[l++]<<T;T+=8;if(T<z){P+=H[l++]<<T;T+=8}}B+=P&(1<<z)-1;if(B>x){r.msg="invalid distance too far back";s.mode=i;break t}P>>>=z;T-=z;z=v-b;if(B>z){z=B-z;if(z>E){if(s.sane){r.msg="invalid distance too far back";s.mode=i;break t}}V=0;j=L;if(M===0){V+=A-z;if(z<R){R-=z;do{U[v++]=L[V++]}while(--z);V=v-B;j=U}}else if(M<z){V+=A+M-z;z-=M;if(z<R){R-=z;do{U[v++]=L[V++]}while(--z);V=0;if(M<R){z=M;R-=z;do{U[v++]=L[V++]}while(--z);V=v-B;j=U}}}else{V+=M-z;if(z<R){R-=z;do{U[v++]=L[V++]}while(--z);V=v-B;j=U}}while(R>2){U[v++]=j[V++];U[v++]=j[V++];U[v++]=j[V++];R-=3}if(R){U[v++]=j[V++];if(R>1){U[v++]=j[V++]}}}else{V=v-B;do{U[v++]=U[V++];U[v++]=U[V++];U[v++]=U[V++];R-=3}while(R>2);if(R){U[v++]=U[V++];if(R>1){U[v++]=U[V++]}}}}else if((z&64)===0){D=O[(D&65535)+(P&(1<<z)-1)];continue r}else{r.msg="invalid distance code";s.mode=i;break t}break}}else if((z&64)===0){D=I[(D&65535)+(P&(1<<z)-1)];continue e}else if(z&32){s.mode=a;break t}else{r.msg="invalid literal/length code";s.mode=i;break t}break}}while(l<u&&v<y);R=T>>3;l-=R;T-=R<<3;P&=(1<<T)-1;r.next_in=l;r.next_out=v;r.avail_in=l<u?5+(u-l):5-(l-u);r.avail_out=v<y?257+(y-v):257-(v-y);s.hold=P;s.bits=T;return}},642:(r,i,a)=>{"use strict";var o=a(9527);var s=a(6478);var l=a(9729);var u=a(608);var v=a(9230);var b=0;var y=1;var x=2;var A=4;var E=5;var M=6;var L=0;var P=1;var T=2;var I=-2;var O=-3;var S=-4;var k=-5;var D=8;var z=1;var R=2;var B=3;var V=4;var j=5;var H=6;var U=7;var _=8;var G=9;var J=10;var Z=11;var K=12;var Q=13;var $=14;var tt=15;var et=16;var rt=17;var it=18;var nt=19;var at=20;var ot=21;var st=22;var lt=23;var ut=24;var ft=25;var ht=26;var ct=27;var pt=28;var dt=29;var mt=30;var vt=31;var gt=32;var bt=852;var yt=592;var wt=15;var xt=wt;function zswap32(r){return(r>>>24&255)+(r>>>8&65280)+((r&65280)<<8)+((r&255)<<24)}function InflateState(){this.mode=0;this.last=false;this.wrap=0;this.havedict=false;this.flags=0;this.dmax=0;this.check=0;this.total=0;this.head=null;this.wbits=0;this.wsize=0;this.whave=0;this.wnext=0;this.window=null;this.hold=0;this.bits=0;this.length=0;this.offset=0;this.extra=0;this.lencode=null;this.distcode=null;this.lenbits=0;this.distbits=0;this.ncode=0;this.nlen=0;this.ndist=0;this.have=0;this.next=null;this.lens=new o.Buf16(320);this.work=new o.Buf16(288);this.lendyn=null;this.distdyn=null;this.sane=0;this.back=0;this.was=0}function inflateResetKeep(r){var i;if(!r||!r.state){return I}i=r.state;r.total_in=r.total_out=i.total=0;r.msg="";if(i.wrap){r.adler=i.wrap&1}i.mode=z;i.last=0;i.havedict=0;i.dmax=32768;i.head=null;i.hold=0;i.bits=0;i.lencode=i.lendyn=new o.Buf32(bt);i.distcode=i.distdyn=new o.Buf32(yt);i.sane=1;i.back=-1;return L}function inflateReset(r){var i;if(!r||!r.state){return I}i=r.state;i.wsize=0;i.whave=0;i.wnext=0;return inflateResetKeep(r)}function inflateReset2(r,i){var a;var o;if(!r||!r.state){return I}o=r.state;if(i<0){a=0;i=-i}else{a=(i>>4)+1;if(i<48){i&=15}}if(i&&(i<8||i>15)){return I}if(o.window!==null&&o.wbits!==i){o.window=null}o.wrap=a;o.wbits=i;return inflateReset(r)}function inflateInit2(r,i){var a;var o;if(!r){return I}o=new InflateState;r.state=o;o.window=null;a=inflateReset2(r,i);if(a!==L){r.state=null}return a}function inflateInit(r){return inflateInit2(r,xt)}var At=true;var Et,Mt;function fixedtables(r){if(At){var i;Et=new o.Buf32(512);Mt=new o.Buf32(32);i=0;while(i<144){r.lens[i++]=8}while(i<256){r.lens[i++]=9}while(i<280){r.lens[i++]=7}while(i<288){r.lens[i++]=8}v(y,r.lens,0,288,Et,0,r.work,{bits:9});i=0;while(i<32){r.lens[i++]=5}v(x,r.lens,0,32,Mt,0,r.work,{bits:5});At=false}r.lencode=Et;r.lenbits=9;r.distcode=Mt;r.distbits=5}function updatewindow(r,i,a,s){var l;var u=r.state;if(u.window===null){u.wsize=1<<u.wbits;u.wnext=0;u.whave=0;u.window=new o.Buf8(u.wsize)}if(s>=u.wsize){o.arraySet(u.window,i,a-u.wsize,u.wsize,0);u.wnext=0;u.whave=u.wsize}else{l=u.wsize-u.wnext;if(l>s){l=s}o.arraySet(u.window,i,a-s,l,u.wnext);s-=l;if(s){o.arraySet(u.window,i,a-s,s,0);u.wnext=s;u.whave=u.wsize}else{u.wnext+=l;if(u.wnext===u.wsize){u.wnext=0}if(u.whave<u.wsize){u.whave+=l}}}return 0}function inflate(r,i){var a;var bt,yt;var wt;var xt;var At,Et;var Mt;var Lt;var Pt,Tt;var It;var Ot;var Xt;var St=0;var kt,Dt,zt;var Ct,Nt,Rt;var Bt;var Ft;var qt=new o.Buf8(4);var Vt;var jt;var Ht=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!r||!r.state||!r.output||!r.input&&r.avail_in!==0){return I}a=r.state;if(a.mode===K){a.mode=Q}xt=r.next_out;yt=r.output;Et=r.avail_out;wt=r.next_in;bt=r.input;At=r.avail_in;Mt=a.hold;Lt=a.bits;Pt=At;Tt=Et;Ft=L;t:for(;;){switch(a.mode){case z:if(a.wrap===0){a.mode=Q;break}while(Lt<16){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}if(a.wrap&2&&Mt===35615){a.check=0;qt[0]=Mt&255;qt[1]=Mt>>>8&255;a.check=l(a.check,qt,2,0);Mt=0;Lt=0;a.mode=R;break}a.flags=0;if(a.head){a.head.done=false}if(!(a.wrap&1)||(((Mt&255)<<8)+(Mt>>8))%31){r.msg="incorrect header check";a.mode=mt;break}if((Mt&15)!==D){r.msg="unknown compression method";a.mode=mt;break}Mt>>>=4;Lt-=4;Bt=(Mt&15)+8;if(a.wbits===0){a.wbits=Bt}else if(Bt>a.wbits){r.msg="invalid window size";a.mode=mt;break}a.dmax=1<<Bt;r.adler=a.check=1;a.mode=Mt&512?J:K;Mt=0;Lt=0;break;case R:while(Lt<16){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}a.flags=Mt;if((a.flags&255)!==D){r.msg="unknown compression method";a.mode=mt;break}if(a.flags&57344){r.msg="unknown header flags set";a.mode=mt;break}if(a.head){a.head.text=Mt>>8&1}if(a.flags&512){qt[0]=Mt&255;qt[1]=Mt>>>8&255;a.check=l(a.check,qt,2,0)}Mt=0;Lt=0;a.mode=B;case B:while(Lt<32){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}if(a.head){a.head.time=Mt}if(a.flags&512){qt[0]=Mt&255;qt[1]=Mt>>>8&255;qt[2]=Mt>>>16&255;qt[3]=Mt>>>24&255;a.check=l(a.check,qt,4,0)}Mt=0;Lt=0;a.mode=V;case V:while(Lt<16){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}if(a.head){a.head.xflags=Mt&255;a.head.os=Mt>>8}if(a.flags&512){qt[0]=Mt&255;qt[1]=Mt>>>8&255;a.check=l(a.check,qt,2,0)}Mt=0;Lt=0;a.mode=j;case j:if(a.flags&1024){while(Lt<16){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}a.length=Mt;if(a.head){a.head.extra_len=Mt}if(a.flags&512){qt[0]=Mt&255;qt[1]=Mt>>>8&255;a.check=l(a.check,qt,2,0)}Mt=0;Lt=0}else if(a.head){a.head.extra=null}a.mode=H;case H:if(a.flags&1024){It=a.length;if(It>At){It=At}if(It){if(a.head){Bt=a.head.extra_len-a.length;if(!a.head.extra){a.head.extra=new Array(a.head.extra_len)}o.arraySet(a.head.extra,bt,wt,It,Bt)}if(a.flags&512){a.check=l(a.check,bt,It,wt)}At-=It;wt+=It;a.length-=It}if(a.length){break t}}a.length=0;a.mode=U;case U:if(a.flags&2048){if(At===0){break t}It=0;do{Bt=bt[wt+It++];if(a.head&&Bt&&a.length<65536){a.head.name+=String.fromCharCode(Bt)}}while(Bt&&It<At);if(a.flags&512){a.check=l(a.check,bt,It,wt)}At-=It;wt+=It;if(Bt){break t}}else if(a.head){a.head.name=null}a.length=0;a.mode=_;case _:if(a.flags&4096){if(At===0){break t}It=0;do{Bt=bt[wt+It++];if(a.head&&Bt&&a.length<65536){a.head.comment+=String.fromCharCode(Bt)}}while(Bt&&It<At);if(a.flags&512){a.check=l(a.check,bt,It,wt)}At-=It;wt+=It;if(Bt){break t}}else if(a.head){a.head.comment=null}a.mode=G;case G:if(a.flags&512){while(Lt<16){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}if(Mt!==(a.check&65535)){r.msg="header crc mismatch";a.mode=mt;break}Mt=0;Lt=0}if(a.head){a.head.hcrc=a.flags>>9&1;a.head.done=true}r.adler=a.check=0;a.mode=K;break;case J:while(Lt<32){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}r.adler=a.check=zswap32(Mt);Mt=0;Lt=0;a.mode=Z;case Z:if(a.havedict===0){r.next_out=xt;r.avail_out=Et;r.next_in=wt;r.avail_in=At;a.hold=Mt;a.bits=Lt;return T}r.adler=a.check=1;a.mode=K;case K:if(i===E||i===M){break t}case Q:if(a.last){Mt>>>=Lt&7;Lt-=Lt&7;a.mode=ct;break}while(Lt<3){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}a.last=Mt&1;Mt>>>=1;Lt-=1;switch(Mt&3){case 0:a.mode=$;break;case 1:fixedtables(a);a.mode=at;if(i===M){Mt>>>=2;Lt-=2;break t}break;case 2:a.mode=rt;break;case 3:r.msg="invalid block type";a.mode=mt}Mt>>>=2;Lt-=2;break;case $:Mt>>>=Lt&7;Lt-=Lt&7;while(Lt<32){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}if((Mt&65535)!==(Mt>>>16^65535)){r.msg="invalid stored block lengths";a.mode=mt;break}a.length=Mt&65535;Mt=0;Lt=0;a.mode=tt;if(i===M){break t}case tt:a.mode=et;case et:It=a.length;if(It){if(It>At){It=At}if(It>Et){It=Et}if(It===0){break t}o.arraySet(yt,bt,wt,It,xt);At-=It;wt+=It;Et-=It;xt+=It;a.length-=It;break}a.mode=K;break;case rt:while(Lt<14){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}a.nlen=(Mt&31)+257;Mt>>>=5;Lt-=5;a.ndist=(Mt&31)+1;Mt>>>=5;Lt-=5;a.ncode=(Mt&15)+4;Mt>>>=4;Lt-=4;if(a.nlen>286||a.ndist>30){r.msg="too many length or distance symbols";a.mode=mt;break}a.have=0;a.mode=it;case it:while(a.have<a.ncode){while(Lt<3){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}a.lens[Ht[a.have++]]=Mt&7;Mt>>>=3;Lt-=3}while(a.have<19){a.lens[Ht[a.have++]]=0}a.lencode=a.lendyn;a.lenbits=7;Vt={bits:a.lenbits};Ft=v(b,a.lens,0,19,a.lencode,0,a.work,Vt);a.lenbits=Vt.bits;if(Ft){r.msg="invalid code lengths set";a.mode=mt;break}a.have=0;a.mode=nt;case nt:while(a.have<a.nlen+a.ndist){for(;;){St=a.lencode[Mt&(1<<a.lenbits)-1];kt=St>>>24;Dt=St>>>16&255;zt=St&65535;if(kt<=Lt){break}if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}if(zt<16){Mt>>>=kt;Lt-=kt;a.lens[a.have++]=zt}else{if(zt===16){jt=kt+2;while(Lt<jt){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}Mt>>>=kt;Lt-=kt;if(a.have===0){r.msg="invalid bit length repeat";a.mode=mt;break}Bt=a.lens[a.have-1];It=3+(Mt&3);Mt>>>=2;Lt-=2}else if(zt===17){jt=kt+3;while(Lt<jt){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}Mt>>>=kt;Lt-=kt;Bt=0;It=3+(Mt&7);Mt>>>=3;Lt-=3}else{jt=kt+7;while(Lt<jt){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}Mt>>>=kt;Lt-=kt;Bt=0;It=11+(Mt&127);Mt>>>=7;Lt-=7}if(a.have+It>a.nlen+a.ndist){r.msg="invalid bit length repeat";a.mode=mt;break}while(It--){a.lens[a.have++]=Bt}}}if(a.mode===mt){break}if(a.lens[256]===0){r.msg="invalid code -- missing end-of-block";a.mode=mt;break}a.lenbits=9;Vt={bits:a.lenbits};Ft=v(y,a.lens,0,a.nlen,a.lencode,0,a.work,Vt);a.lenbits=Vt.bits;if(Ft){r.msg="invalid literal/lengths set";a.mode=mt;break}a.distbits=6;a.distcode=a.distdyn;Vt={bits:a.distbits};Ft=v(x,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,Vt);a.distbits=Vt.bits;if(Ft){r.msg="invalid distances set";a.mode=mt;break}a.mode=at;if(i===M){break t}case at:a.mode=ot;case ot:if(At>=6&&Et>=258){r.next_out=xt;r.avail_out=Et;r.next_in=wt;r.avail_in=At;a.hold=Mt;a.bits=Lt;u(r,Tt);xt=r.next_out;yt=r.output;Et=r.avail_out;wt=r.next_in;bt=r.input;At=r.avail_in;Mt=a.hold;Lt=a.bits;if(a.mode===K){a.back=-1}break}a.back=0;for(;;){St=a.lencode[Mt&(1<<a.lenbits)-1];kt=St>>>24;Dt=St>>>16&255;zt=St&65535;if(kt<=Lt){break}if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}if(Dt&&(Dt&240)===0){Ct=kt;Nt=Dt;Rt=zt;for(;;){St=a.lencode[Rt+((Mt&(1<<Ct+Nt)-1)>>Ct)];kt=St>>>24;Dt=St>>>16&255;zt=St&65535;if(Ct+kt<=Lt){break}if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}Mt>>>=Ct;Lt-=Ct;a.back+=Ct}Mt>>>=kt;Lt-=kt;a.back+=kt;a.length=zt;if(Dt===0){a.mode=ht;break}if(Dt&32){a.back=-1;a.mode=K;break}if(Dt&64){r.msg="invalid literal/length code";a.mode=mt;break}a.extra=Dt&15;a.mode=st;case st:if(a.extra){jt=a.extra;while(Lt<jt){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}a.length+=Mt&(1<<a.extra)-1;Mt>>>=a.extra;Lt-=a.extra;a.back+=a.extra}a.was=a.length;a.mode=lt;case lt:for(;;){St=a.distcode[Mt&(1<<a.distbits)-1];kt=St>>>24;Dt=St>>>16&255;zt=St&65535;if(kt<=Lt){break}if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}if((Dt&240)===0){Ct=kt;Nt=Dt;Rt=zt;for(;;){St=a.distcode[Rt+((Mt&(1<<Ct+Nt)-1)>>Ct)];kt=St>>>24;Dt=St>>>16&255;zt=St&65535;if(Ct+kt<=Lt){break}if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}Mt>>>=Ct;Lt-=Ct;a.back+=Ct}Mt>>>=kt;Lt-=kt;a.back+=kt;if(Dt&64){r.msg="invalid distance code";a.mode=mt;break}a.offset=zt;a.extra=Dt&15;a.mode=ut;case ut:if(a.extra){jt=a.extra;while(Lt<jt){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}a.offset+=Mt&(1<<a.extra)-1;Mt>>>=a.extra;Lt-=a.extra;a.back+=a.extra}if(a.offset>a.dmax){r.msg="invalid distance too far back";a.mode=mt;break}a.mode=ft;case ft:if(Et===0){break t}It=Tt-Et;if(a.offset>It){It=a.offset-It;if(It>a.whave){if(a.sane){r.msg="invalid distance too far back";a.mode=mt;break}}if(It>a.wnext){It-=a.wnext;Ot=a.wsize-It}else{Ot=a.wnext-It}if(It>a.length){It=a.length}Xt=a.window}else{Xt=yt;Ot=xt-a.offset;It=a.length}if(It>Et){It=Et}Et-=It;a.length-=It;do{yt[xt++]=Xt[Ot++]}while(--It);if(a.length===0){a.mode=ot}break;case ht:if(Et===0){break t}yt[xt++]=a.length;Et--;a.mode=ot;break;case ct:if(a.wrap){while(Lt<32){if(At===0){break t}At--;Mt|=bt[wt++]<<Lt;Lt+=8}Tt-=Et;r.total_out+=Tt;a.total+=Tt;if(Tt){r.adler=a.check=a.flags?l(a.check,yt,Tt,xt-Tt):s(a.check,yt,Tt,xt-Tt)}Tt=Et;if((a.flags?Mt:zswap32(Mt))!==a.check){r.msg="incorrect data check";a.mode=mt;break}Mt=0;Lt=0}a.mode=pt;case pt:if(a.wrap&&a.flags){while(Lt<32){if(At===0){break t}At--;Mt+=bt[wt++]<<Lt;Lt+=8}if(Mt!==(a.total&4294967295)){r.msg="incorrect length check";a.mode=mt;break}Mt=0;Lt=0}a.mode=dt;case dt:Ft=P;break t;case mt:Ft=O;break t;case vt:return S;case gt:default:return I}}r.next_out=xt;r.avail_out=Et;r.next_in=wt;r.avail_in=At;a.hold=Mt;a.bits=Lt;if(a.wsize||Tt!==r.avail_out&&a.mode<mt&&(a.mode<ct||i!==A)){if(updatewindow(r,r.output,r.next_out,Tt-r.avail_out)){a.mode=vt;return S}}Pt-=r.avail_in;Tt-=r.avail_out;r.total_in+=Pt;r.total_out+=Tt;a.total+=Tt;if(a.wrap&&Tt){r.adler=a.check=a.flags?l(a.check,yt,Tt,r.next_out-Tt):s(a.check,yt,Tt,r.next_out-Tt)}r.data_type=a.bits+(a.last?64:0)+(a.mode===K?128:0)+(a.mode===at||a.mode===tt?256:0);if((Pt===0&&Tt===0||i===A)&&Ft===L){Ft=k}return Ft}function inflateEnd(r){if(!r||!r.state){return I}var i=r.state;if(i.window){i.window=null}r.state=null;return L}function inflateGetHeader(r,i){var a;if(!r||!r.state){return I}a=r.state;if((a.wrap&2)===0){return I}a.head=i;i.done=false;return L}function inflateSetDictionary(r,i){var a=i.length;var o;var l;var u;if(!r||!r.state){return I}o=r.state;if(o.wrap!==0&&o.mode!==Z){return I}if(o.mode===Z){l=1;l=s(l,i,a,0);if(l!==o.check){return O}}u=updatewindow(r,i,a,a);if(u){o.mode=vt;return S}o.havedict=1;return L}i.inflateReset=inflateReset;i.inflateReset2=inflateReset2;i.inflateResetKeep=inflateResetKeep;i.inflateInit=inflateInit;i.inflateInit2=inflateInit2;i.inflate=inflate;i.inflateEnd=inflateEnd;i.inflateGetHeader=inflateGetHeader;i.inflateSetDictionary=inflateSetDictionary;i.inflateInfo="pako inflate (from Nodeca project)"},9230:(r,i,a)=>{"use strict";var o=a(9527);var s=15;var l=852;var u=592;var v=0;var b=1;var y=2;var x=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0];var A=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78];var E=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0];var M=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];r.exports=function inflate_table(r,i,a,L,P,T,I,O){var S=O.bits;var k=0;var D=0;var z=0,R=0;var B=0;var V=0;var j=0;var H=0;var U=0;var _=0;var G;var J;var Z;var K;var Q;var $=null;var tt=0;var et;var rt=new o.Buf16(s+1);var it=new o.Buf16(s+1);var nt=null;var at=0;var ot,st,lt;for(k=0;k<=s;k++){rt[k]=0}for(D=0;D<L;D++){rt[i[a+D]]++}B=S;for(R=s;R>=1;R--){if(rt[R]!==0){break}}if(B>R){B=R}if(R===0){P[T++]=1<<24|64<<16|0;P[T++]=1<<24|64<<16|0;O.bits=1;return 0}for(z=1;z<R;z++){if(rt[z]!==0){break}}if(B<z){B=z}H=1;for(k=1;k<=s;k++){H<<=1;H-=rt[k];if(H<0){return-1}}if(H>0&&(r===v||R!==1)){return-1}it[1]=0;for(k=1;k<s;k++){it[k+1]=it[k]+rt[k]}for(D=0;D<L;D++){if(i[a+D]!==0){I[it[i[a+D]]++]=D}}if(r===v){$=nt=I;et=19}else if(r===b){$=x;tt-=257;nt=A;at-=257;et=256}else{$=E;nt=M;et=-1}_=0;D=0;k=z;Q=T;V=B;j=0;Z=-1;U=1<<B;K=U-1;if(r===b&&U>l||r===y&&U>u){return 1}for(;;){ot=k-j;if(I[D]<et){st=0;lt=I[D]}else if(I[D]>et){st=nt[at+I[D]];lt=$[tt+I[D]]}else{st=32+64;lt=0}G=1<<k-j;J=1<<V;z=J;do{J-=G;P[Q+(_>>j)+J]=ot<<24|st<<16|lt|0}while(J!==0);G=1<<k-1;while(_&G){G>>=1}if(G!==0){_&=G-1;_+=G}else{_=0}D++;if(--rt[k]===0){if(k===R){break}k=i[a+I[D]]}if(k>B&&(_&K)!==Z){if(j===0){j=B}Q+=z;V=k-j;H=1<<V;while(V+j<R){H-=rt[V+j];if(H<=0){break}V++;H<<=1}U+=1<<V;if(r===b&&U>l||r===y&&U>u){return 1}Z=_&K;P[Z]=B<<24|V<<16|Q-T|0}}if(_!==0){P[Q+_]=k-j<<24|64<<16|0}O.bits=B;return 0}},7874:r=>{"use strict";r.exports={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"}},1553:(r,i,a)=>{"use strict";var o=a(9527);var s=4;var l=0;var u=1;var v=2;function zero(r){var i=r.length;while(--i>=0){r[i]=0}}var b=0;var y=1;var x=2;var A=3;var E=258;var M=29;var L=256;var P=L+1+M;var T=30;var I=19;var O=2*P+1;var S=15;var k=16;var D=7;var z=256;var R=16;var B=17;var V=18;var j=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];var H=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];var U=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];var _=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];var G=512;var J=new Array((P+2)*2);zero(J);var Z=new Array(T*2);zero(Z);var K=new Array(G);zero(K);var Q=new Array(E-A+1);zero(Q);var $=new Array(M);zero($);var tt=new Array(T);zero(tt);function StaticTreeDesc(r,i,a,o,s){this.static_tree=r;this.extra_bits=i;this.extra_base=a;this.elems=o;this.max_length=s;this.has_stree=r&&r.length}var et;var rt;var it;function TreeDesc(r,i){this.dyn_tree=r;this.max_code=0;this.stat_desc=i}function d_code(r){return r<256?K[r]:K[256+(r>>>7)]}function put_short(r,i){r.pending_buf[r.pending++]=i&255;r.pending_buf[r.pending++]=i>>>8&255}function send_bits(r,i,a){if(r.bi_valid>k-a){r.bi_buf|=i<<r.bi_valid&65535;put_short(r,r.bi_buf);r.bi_buf=i>>k-r.bi_valid;r.bi_valid+=a-k}else{r.bi_buf|=i<<r.bi_valid&65535;r.bi_valid+=a}}function send_code(r,i,a){send_bits(r,a[i*2],a[i*2+1])}function bi_reverse(r,i){var a=0;do{a|=r&1;r>>>=1;a<<=1}while(--i>0);return a>>>1}function bi_flush(r){if(r.bi_valid===16){put_short(r,r.bi_buf);r.bi_buf=0;r.bi_valid=0}else if(r.bi_valid>=8){r.pending_buf[r.pending++]=r.bi_buf&255;r.bi_buf>>=8;r.bi_valid-=8}}function gen_bitlen(r,i){var a=i.dyn_tree;var o=i.max_code;var s=i.stat_desc.static_tree;var l=i.stat_desc.has_stree;var u=i.stat_desc.extra_bits;var v=i.stat_desc.extra_base;var b=i.stat_desc.max_length;var y;var x,A;var E;var M;var L;var P=0;for(E=0;E<=S;E++){r.bl_count[E]=0}a[r.heap[r.heap_max]*2+1]=0;for(y=r.heap_max+1;y<O;y++){x=r.heap[y];E=a[a[x*2+1]*2+1]+1;if(E>b){E=b;P++}a[x*2+1]=E;if(x>o){continue}r.bl_count[E]++;M=0;if(x>=v){M=u[x-v]}L=a[x*2];r.opt_len+=L*(E+M);if(l){r.static_len+=L*(s[x*2+1]+M)}}if(P===0){return}do{E=b-1;while(r.bl_count[E]===0){E--}r.bl_count[E]--;r.bl_count[E+1]+=2;r.bl_count[b]--;P-=2}while(P>0);for(E=b;E!==0;E--){x=r.bl_count[E];while(x!==0){A=r.heap[--y];if(A>o){continue}if(a[A*2+1]!==E){r.opt_len+=(E-a[A*2+1])*a[A*2];a[A*2+1]=E}x--}}}function gen_codes(r,i,a){var o=new Array(S+1);var s=0;var l;var u;for(l=1;l<=S;l++){o[l]=s=s+a[l-1]<<1}for(u=0;u<=i;u++){var v=r[u*2+1];if(v===0){continue}r[u*2]=bi_reverse(o[v]++,v)}}function tr_static_init(){var r;var i;var a;var o;var s;var l=new Array(S+1);a=0;for(o=0;o<M-1;o++){$[o]=a;for(r=0;r<1<<j[o];r++){Q[a++]=o}}Q[a-1]=o;s=0;for(o=0;o<16;o++){tt[o]=s;for(r=0;r<1<<H[o];r++){K[s++]=o}}s>>=7;for(;o<T;o++){tt[o]=s<<7;for(r=0;r<1<<H[o]-7;r++){K[256+s++]=o}}for(i=0;i<=S;i++){l[i]=0}r=0;while(r<=143){J[r*2+1]=8;r++;l[8]++}while(r<=255){J[r*2+1]=9;r++;l[9]++}while(r<=279){J[r*2+1]=7;r++;l[7]++}while(r<=287){J[r*2+1]=8;r++;l[8]++}gen_codes(J,P+1,l);for(r=0;r<T;r++){Z[r*2+1]=5;Z[r*2]=bi_reverse(r,5)}et=new StaticTreeDesc(J,j,L+1,P,S);rt=new StaticTreeDesc(Z,H,0,T,S);it=new StaticTreeDesc(new Array(0),U,0,I,D)}function init_block(r){var i;for(i=0;i<P;i++){r.dyn_ltree[i*2]=0}for(i=0;i<T;i++){r.dyn_dtree[i*2]=0}for(i=0;i<I;i++){r.bl_tree[i*2]=0}r.dyn_ltree[z*2]=1;r.opt_len=r.static_len=0;r.last_lit=r.matches=0}function bi_windup(r){if(r.bi_valid>8){put_short(r,r.bi_buf)}else if(r.bi_valid>0){r.pending_buf[r.pending++]=r.bi_buf}r.bi_buf=0;r.bi_valid=0}function copy_block(r,i,a,s){bi_windup(r);if(s){put_short(r,a);put_short(r,~a)}o.arraySet(r.pending_buf,r.window,i,a,r.pending);r.pending+=a}function smaller(r,i,a,o){var s=i*2;var l=a*2;return r[s]<r[l]||r[s]===r[l]&&o[i]<=o[a]}function pqdownheap(r,i,a){var o=r.heap[a];var s=a<<1;while(s<=r.heap_len){if(s<r.heap_len&&smaller(i,r.heap[s+1],r.heap[s],r.depth)){s++}if(smaller(i,o,r.heap[s],r.depth)){break}r.heap[a]=r.heap[s];a=s;s<<=1}r.heap[a]=o}function compress_block(r,i,a){var o;var s;var l=0;var u;var v;if(r.last_lit!==0){do{o=r.pending_buf[r.d_buf+l*2]<<8|r.pending_buf[r.d_buf+l*2+1];s=r.pending_buf[r.l_buf+l];l++;if(o===0){send_code(r,s,i)}else{u=Q[s];send_code(r,u+L+1,i);v=j[u];if(v!==0){s-=$[u];send_bits(r,s,v)}o--;u=d_code(o);send_code(r,u,a);v=H[u];if(v!==0){o-=tt[u];send_bits(r,o,v)}}}while(l<r.last_lit)}send_code(r,z,i)}function build_tree(r,i){var a=i.dyn_tree;var o=i.stat_desc.static_tree;var s=i.stat_desc.has_stree;var l=i.stat_desc.elems;var u,v;var b=-1;var y;r.heap_len=0;r.heap_max=O;for(u=0;u<l;u++){if(a[u*2]!==0){r.heap[++r.heap_len]=b=u;r.depth[u]=0}else{a[u*2+1]=0}}while(r.heap_len<2){y=r.heap[++r.heap_len]=b<2?++b:0;a[y*2]=1;r.depth[y]=0;r.opt_len--;if(s){r.static_len-=o[y*2+1]}}i.max_code=b;for(u=r.heap_len>>1;u>=1;u--){pqdownheap(r,a,u)}y=l;do{u=r.heap[1];r.heap[1]=r.heap[r.heap_len--];pqdownheap(r,a,1);v=r.heap[1];r.heap[--r.heap_max]=u;r.heap[--r.heap_max]=v;a[y*2]=a[u*2]+a[v*2];r.depth[y]=(r.depth[u]>=r.depth[v]?r.depth[u]:r.depth[v])+1;a[u*2+1]=a[v*2+1]=y;r.heap[1]=y++;pqdownheap(r,a,1)}while(r.heap_len>=2);r.heap[--r.heap_max]=r.heap[1];gen_bitlen(r,i);gen_codes(a,b,r.bl_count)}function scan_tree(r,i,a){var o;var s=-1;var l;var u=i[0*2+1];var v=0;var b=7;var y=4;if(u===0){b=138;y=3}i[(a+1)*2+1]=65535;for(o=0;o<=a;o++){l=u;u=i[(o+1)*2+1];if(++v<b&&l===u){continue}else if(v<y){r.bl_tree[l*2]+=v}else if(l!==0){if(l!==s){r.bl_tree[l*2]++}r.bl_tree[R*2]++}else if(v<=10){r.bl_tree[B*2]++}else{r.bl_tree[V*2]++}v=0;s=l;if(u===0){b=138;y=3}else if(l===u){b=6;y=3}else{b=7;y=4}}}function send_tree(r,i,a){var o;var s=-1;var l;var u=i[0*2+1];var v=0;var b=7;var y=4;if(u===0){b=138;y=3}for(o=0;o<=a;o++){l=u;u=i[(o+1)*2+1];if(++v<b&&l===u){continue}else if(v<y){do{send_code(r,l,r.bl_tree)}while(--v!==0)}else if(l!==0){if(l!==s){send_code(r,l,r.bl_tree);v--}send_code(r,R,r.bl_tree);send_bits(r,v-3,2)}else if(v<=10){send_code(r,B,r.bl_tree);send_bits(r,v-3,3)}else{send_code(r,V,r.bl_tree);send_bits(r,v-11,7)}v=0;s=l;if(u===0){b=138;y=3}else if(l===u){b=6;y=3}else{b=7;y=4}}}function build_bl_tree(r){var i;scan_tree(r,r.dyn_ltree,r.l_desc.max_code);scan_tree(r,r.dyn_dtree,r.d_desc.max_code);build_tree(r,r.bl_desc);for(i=I-1;i>=3;i--){if(r.bl_tree[_[i]*2+1]!==0){break}}r.opt_len+=3*(i+1)+5+5+4;return i}function send_all_trees(r,i,a,o){var s;send_bits(r,i-257,5);send_bits(r,a-1,5);send_bits(r,o-4,4);for(s=0;s<o;s++){send_bits(r,r.bl_tree[_[s]*2+1],3)}send_tree(r,r.dyn_ltree,i-1);send_tree(r,r.dyn_dtree,a-1)}function detect_data_type(r){var i=4093624447;var a;for(a=0;a<=31;a++,i>>>=1){if(i&1&&r.dyn_ltree[a*2]!==0){return l}}if(r.dyn_ltree[9*2]!==0||r.dyn_ltree[10*2]!==0||r.dyn_ltree[13*2]!==0){return u}for(a=32;a<L;a++){if(r.dyn_ltree[a*2]!==0){return u}}return l}var nt=false;function _tr_init(r){if(!nt){tr_static_init();nt=true}r.l_desc=new TreeDesc(r.dyn_ltree,et);r.d_desc=new TreeDesc(r.dyn_dtree,rt);r.bl_desc=new TreeDesc(r.bl_tree,it);r.bi_buf=0;r.bi_valid=0;init_block(r)}function _tr_stored_block(r,i,a,o){send_bits(r,(b<<1)+(o?1:0),3);copy_block(r,i,a,true)}function _tr_align(r){send_bits(r,y<<1,3);send_code(r,z,J);bi_flush(r)}function _tr_flush_block(r,i,a,o){var l,u;var b=0;if(r.level>0){if(r.strm.data_type===v){r.strm.data_type=detect_data_type(r)}build_tree(r,r.l_desc);build_tree(r,r.d_desc);b=build_bl_tree(r);l=r.opt_len+3+7>>>3;u=r.static_len+3+7>>>3;if(u<=l){l=u}}else{l=u=a+5}if(a+4<=l&&i!==-1){_tr_stored_block(r,i,a,o)}else if(r.strategy===s||u===l){send_bits(r,(y<<1)+(o?1:0),3);compress_block(r,J,Z)}else{send_bits(r,(x<<1)+(o?1:0),3);send_all_trees(r,r.l_desc.max_code+1,r.d_desc.max_code+1,b+1);compress_block(r,r.dyn_ltree,r.dyn_dtree)}init_block(r);if(o){bi_windup(r)}}function _tr_tally(r,i,a){r.pending_buf[r.d_buf+r.last_lit*2]=i>>>8&255;r.pending_buf[r.d_buf+r.last_lit*2+1]=i&255;r.pending_buf[r.l_buf+r.last_lit]=a&255;r.last_lit++;if(i===0){r.dyn_ltree[a*2]++}else{r.matches++;i--;r.dyn_ltree[(Q[a]+L+1)*2]++;r.dyn_dtree[d_code(i)*2]++}return r.last_lit===r.lit_bufsize-1}i._tr_init=_tr_init;i._tr_stored_block=_tr_stored_block;i._tr_flush_block=_tr_flush_block;i._tr_tally=_tr_tally;i._tr_align=_tr_align},9182:r=>{"use strict";function ZStream(){this.input=null;this.next_in=0;this.avail_in=0;this.total_in=0;this.output=null;this.next_out=0;this.avail_out=0;this.total_out=0;this.msg="";this.state=null;this.data_type=2;this.adler=0}r.exports=ZStream},18:r=>{r.exports=function parseBMFontAscii(r){if(!r)throw new Error("no data provided");r=r.toString().trim();var i={pages:[],chars:[],kernings:[]};var a=r.split(/\r\n?|\n/g);if(a.length===0)throw new Error("no data in BMFont file");for(var o=0;o<a.length;o++){var s=splitLine(a[o],o);if(!s)continue;if(s.key==="page"){if(typeof s.data.id!=="number")throw new Error("malformed file at line "+o+" -- needs page id=N");if(typeof s.data.file!=="string")throw new Error("malformed file at line "+o+' -- needs page file="path"');i.pages[s.data.id]=s.data.file}else if(s.key==="chars"||s.key==="kernings"){}else if(s.key==="char"){i.chars.push(s.data)}else if(s.key==="kerning"){i.kernings.push(s.data)}else{i[s.key]=s.data}}return i};function splitLine(r,i){r=r.replace(/\t+/g," ").trim();if(!r)return null;var a=r.indexOf(" ");if(a===-1)throw new Error("no named row at line "+i);var o=r.substring(0,a);r=r.substring(a+1);r=r.replace(/letter=[\'\"]\S+[\'\"]/gi,"");r=r.split("=");r=r.map((function(r){return r.trim().match(/(".*?"|[^"\s]+)+(?=\s*|\s*$)/g)}));var s=[];for(var l=0;l<r.length;l++){var u=r[l];if(l===0){s.push({key:u[0],data:""})}else if(l===r.length-1){s[s.length-1].data=parseData(u[0])}else{s[s.length-1].data=parseData(u[0]);s.push({key:u[1],data:""})}}var v={key:o,data:{}};s.forEach((function(r){v.data[r.key]=r.data}));return v}function parseData(r){if(!r||r.length===0)return"";if(r.indexOf('"')===0||r.indexOf("'")===0)return r.substring(1,r.length-1);if(r.indexOf(",")!==-1)return parseIntList(r);return parseInt(r,10)}function parseIntList(r){return r.split(",").map((function(r){return parseInt(r,10)}))}},180:r=>{var i=[66,77,70];r.exports=function readBMFontBinary(r){if(r.length<6)throw new Error("invalid buffer length for BMFont");var a=i.every((function(i,a){return r.readUInt8(a)===i}));if(!a)throw new Error("BMFont missing BMF byte header");var o=3;var s=r.readUInt8(o++);if(s>3)throw new Error("Only supports BMFont Binary v3 (BMFont App v1.10)");var l={kernings:[],chars:[]};for(var u=0;u<5;u++)o+=readBlock(l,r,o);return l};function readBlock(r,i,a){if(a>i.length-1)return 0;var o=i.readUInt8(a++);var s=i.readInt32LE(a);a+=4;switch(o){case 1:r.info=readInfo(i,a);break;case 2:r.common=readCommon(i,a);break;case 3:r.pages=readPages(i,a,s);break;case 4:r.chars=readChars(i,a,s);break;case 5:r.kernings=readKernings(i,a,s);break}return 5+s}function readInfo(r,i){var a={};a.size=r.readInt16LE(i);var o=r.readUInt8(i+2);a.smooth=o>>7&1;a.unicode=o>>6&1;a.italic=o>>5&1;a.bold=o>>4&1;if(o>>3&1)a.fixedHeight=1;a.charset=r.readUInt8(i+3)||"";a.stretchH=r.readUInt16LE(i+4);a.aa=r.readUInt8(i+6);a.padding=[r.readInt8(i+7),r.readInt8(i+8),r.readInt8(i+9),r.readInt8(i+10)];a.spacing=[r.readInt8(i+11),r.readInt8(i+12)];a.outline=r.readUInt8(i+13);a.face=readStringNT(r,i+14);return a}function readCommon(r,i){var a={};a.lineHeight=r.readUInt16LE(i);a.base=r.readUInt16LE(i+2);a.scaleW=r.readUInt16LE(i+4);a.scaleH=r.readUInt16LE(i+6);a.pages=r.readUInt16LE(i+8);var o=r.readUInt8(i+10);a.packed=0;a.alphaChnl=r.readUInt8(i+11);a.redChnl=r.readUInt8(i+12);a.greenChnl=r.readUInt8(i+13);a.blueChnl=r.readUInt8(i+14);return a}function readPages(r,i,a){var o=[];var s=readNameNT(r,i);var l=s.length+1;var u=a/l;for(var v=0;v<u;v++){o[v]=r.slice(i,i+s.length).toString("utf8");i+=l}return o}function readChars(r,i,a){var o=[];var s=a/20;for(var l=0;l<s;l++){var u={};var v=l*20;u.id=r.readUInt32LE(i+0+v);u.x=r.readUInt16LE(i+4+v);u.y=r.readUInt16LE(i+6+v);u.width=r.readUInt16LE(i+8+v);u.height=r.readUInt16LE(i+10+v);u.xoffset=r.readInt16LE(i+12+v);u.yoffset=r.readInt16LE(i+14+v);u.xadvance=r.readInt16LE(i+16+v);u.page=r.readUInt8(i+18+v);u.chnl=r.readUInt8(i+19+v);o[l]=u}return o}function readKernings(r,i,a){var o=[];var s=a/10;for(var l=0;l<s;l++){var u={};var v=l*10;u.first=r.readUInt32LE(i+0+v);u.second=r.readUInt32LE(i+4+v);u.amount=r.readInt16LE(i+8+v);o[l]=u}return o}function readNameNT(r,i){var a=i;for(;a<r.length;a++){if(r[a]===0)break}return r.slice(i,a)}function readStringNT(r,i){return readNameNT(r,i).toString("utf8")}},3396:(r,i,a)=>{var o=a(8776);var s=a(6248);r.exports=function parseBMFontXML(r){r=r.toString().trim();var i={pages:[],chars:[],kernings:[]};o.parseString(r,(function(r,a){if(r)throw r;if(!a.font)throw"XML bitmap font doesn't have <font> root";a=a.font;i.common=s(a.common[0].$);i.info=s(a.info[0].$);for(var o=0;o<a.pages.length;o++){var l=a.pages[o].page[0].$;if(typeof l.id==="undefined")throw new Error("malformed file -- needs page id=N");if(typeof l.file!=="string")throw new Error('malformed file -- needs page file="path"');i.pages[parseInt(l.id,10)]=l.file}if(a.chars){var u=a.chars[0]["char"]||[];for(var o=0;o<u.length;o++){i.chars.push(s(u[o].$))}}if(a.kernings){var v=a.kernings[0]["kerning"]||[];for(var o=0;o<v.length;o++){i.kernings.push(s(v[o].$))}}}));return i}},6248:r=>{var i="chasrset";r.exports=function parseAttributes(r){if(i in r){r["charset"]=r[i];delete r[i]}for(var a in r){if(a==="face"||a==="charset")continue;else if(a==="padding"||a==="spacing")r[a]=parseIntList(r[a]);else r[a]=parseInt(r[a],10)}return r};function parseIntList(r){return r.split(",").map((function(r){return parseInt(r,10)}))}},1293:(r,i,a)=>{"use strict";var o=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(r){return typeof r}:function(r){return r&&typeof Symbol==="function"&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r};var s=a(3685);var l=a(5687);var u=a(7310);var v=a(3477);var b=a(9796);var y=a(3837);var x=function phin(r,i){if(typeof r!=="string"){if(!r.hasOwnProperty("url")){throw new Error("Missing url option from options for request method.")}}var a=(typeof r==="undefined"?"undefined":o(r))==="object"?u.parse(r.url):u.parse(r);var y={hostname:a.hostname,port:a.port||(a.protocol.toLowerCase()==="http:"?80:443),path:a.path,method:"GET",headers:{},auth:a.auth||null,parse:"none",stream:false};if((typeof r==="undefined"?"undefined":o(r))==="object"){y=Object.assign(y,r)}y.port=Number(y.port);if(y.hasOwnProperty("timeout"))delete y.timeout;if(y.compressed===true){y.headers["accept-encoding"]="gzip, deflate"}if(r.hasOwnProperty("form")){if(o(r.form)!=="object"){throw new Error("phin 'form' option must be of type Object if present.")}var x=v.stringify(r.form);y.headers["Content-Type"]="application/x-www-form-urlencoded";y.headers["Content-Length"]=Buffer.byteLength(x);r.data=x}var A=void 0;var E=function resHandler(r){var a=r;if(y.compressed===true){if(r.headers["content-encoding"]==="gzip"){a=r.pipe(b.createGunzip())}else if(r.headers["content-encoding"]==="deflate"){a=r.pipe(b.createInflate())}}if(y.stream===true){r.stream=a;if(i)i(null,r)}else{r.body=new Buffer([]);a.on("data",(function(i){r.body=Buffer.concat([r.body,i])}));a.on("end",(function(){if(i){if(y.parse==="json"){try{r.body=JSON.parse(r.body.toString())}catch(a){i("Invalid JSON received.",r);return}}i(null,r)}}))}};switch(a.protocol.toLowerCase()){case"http:":A=s.request(y,E);break;case"https:":A=l.request(y,E);break;default:if(i)i(new Error("Invalid / unknown URL protocol. Expected HTTP or HTTPS."),null);return}if(typeof r.timeout==="number"){A.setTimeout(r.timeout,(function(){A.abort();if(i)i(new Error("Timeout has been reached."),null);i=null}))}A.on("error",(function(r){if(i)i(r,null)}));if(r.hasOwnProperty("data")){var M=r.data;if(!(r.data instanceof Buffer)&&o(r.data)==="object"){var L=y.headers["content-type"]||y.headers["Content-Type"];if(L==="application/x-www-form-urlencoded"){M=v.stringify(r.data)}else{try{M=JSON.stringify(r.data)}catch(r){if(i)i(new Error("Couldn't stringify object. (Likely due to a circular reference.)"),null)}}}A.write(M)}A.end()};x.promisified=function(r,i){return new Promise((function(a,o){x(r,(function(r,i){if(r){o(r)}else{a(i)}}),i)}))};if(y.promisify){x[y.promisify.custom]=x.promisified}r.exports=x},7129:r=>{"use strict";r.exports=pixelmatch;function pixelmatch(r,i,a,o,s,l){if(!l)l={};var u=l.threshold===undefined?.1:l.threshold;var v=35215*u*u,b=0;for(var y=0;y<s;y++){for(var x=0;x<o;x++){var A=(y*o+x)*4;var E=colorDelta(r,i,A,A);if(E>v){if(!l.includeAA&&(antialiased(r,x,y,o,s,i)||antialiased(i,x,y,o,s,r))){if(a)drawPixel(a,A,255,255,0)}else{if(a)drawPixel(a,A,255,0,0);b++}}else if(a){var M=blend(grayPixel(r,A),.1);drawPixel(a,A,M,M,M)}}}return b}function antialiased(r,i,a,o,s,l){var u=Math.max(i-1,0),v=Math.max(a-1,0),b=Math.min(i+1,o-1),y=Math.min(a+1,s-1),x=(a*o+i)*4,A=0,E=0,M=0,L=0,P=0,T,I,O,S;for(var k=u;k<=b;k++){for(var D=v;D<=y;D++){if(k===i&&D===a)continue;var z=colorDelta(r,r,x,(D*o+k)*4,true);if(z===0)A++;else if(z<0)M++;else if(z>0)E++;if(A>2)return false;if(!l)continue;if(z<L){L=z;T=k;I=D}if(z>P){P=z;O=k;S=D}}}if(!l)return true;if(M===0||E===0)return false;return!antialiased(r,T,I,o,s)&&!antialiased(l,T,I,o,s)||!antialiased(r,O,S,o,s)&&!antialiased(l,O,S,o,s)}function colorDelta(r,i,a,o,s){var l=r[a+3]/255,u=i[o+3]/255,v=blend(r[a+0],l),b=blend(r[a+1],l),y=blend(r[a+2],l),x=blend(i[o+0],u),A=blend(i[o+1],u),E=blend(i[o+2],u),M=rgb2y(v,b,y)-rgb2y(x,A,E);if(s)return M;var L=rgb2i(v,b,y)-rgb2i(x,A,E),P=rgb2q(v,b,y)-rgb2q(x,A,E);return.5053*M*M+.299*L*L+.1957*P*P}function rgb2y(r,i,a){return r*.29889531+i*.58662247+a*.11448223}function rgb2i(r,i,a){return r*.59597799-i*.2741761-a*.32180189}function rgb2q(r,i,a){return r*.21147017-i*.52261711+a*.31114694}function blend(r,i){return 255+(r-255)*i}function drawPixel(r,i,a,o,s){r[i+0]=a;r[i+1]=o;r[i+2]=s;r[i+3]=255}function grayPixel(r,i){var a=r[i+3]/255,o=blend(r[i+0],a),s=blend(r[i+1],a),l=blend(r[i+2],a);return rgb2y(o,s,l)}},7958:(r,i,a)=>{"use strict";var o=a(393);var s=[function(){},function(r,i,a,o){if(o===i.length){throw new Error("Ran out of data")}var s=i[o];r[a]=s;r[a+1]=s;r[a+2]=s;r[a+3]=255},function(r,i,a,o){if(o+1>=i.length){throw new Error("Ran out of data")}var s=i[o];r[a]=s;r[a+1]=s;r[a+2]=s;r[a+3]=i[o+1]},function(r,i,a,o){if(o+2>=i.length){throw new Error("Ran out of data")}r[a]=i[o];r[a+1]=i[o+1];r[a+2]=i[o+2];r[a+3]=255},function(r,i,a,o){if(o+3>=i.length){throw new Error("Ran out of data")}r[a]=i[o];r[a+1]=i[o+1];r[a+2]=i[o+2];r[a+3]=i[o+3]}];var l=[function(){},function(r,i,a,o){var s=i[0];r[a]=s;r[a+1]=s;r[a+2]=s;r[a+3]=o},function(r,i,a){var o=i[0];r[a]=o;r[a+1]=o;r[a+2]=o;r[a+3]=i[1]},function(r,i,a,o){r[a]=i[0];r[a+1]=i[1];r[a+2]=i[2];r[a+3]=o},function(r,i,a){r[a]=i[0];r[a+1]=i[1];r[a+2]=i[2];r[a+3]=i[3]}];function bitRetriever(r,i){var a=[];var o=0;function split(){if(o===r.length){throw new Error("Ran out of data")}var s=r[o];o++;var l,u,v,b,y,x,A,E;switch(i){default:throw new Error("unrecognised depth");case 16:A=r[o];o++;a.push((s<<8)+A);break;case 4:A=s&15;E=s>>4;a.push(E,A);break;case 2:y=s&3;x=s>>2&3;A=s>>4&3;E=s>>6&3;a.push(E,A,x,y);break;case 1:l=s&1;u=s>>1&1;v=s>>2&1;b=s>>3&1;y=s>>4&1;x=s>>5&1;A=s>>6&1;E=s>>7&1;a.push(E,A,x,y,b,v,u,l);break}}return{get:function(r){while(a.length<r){split()}var i=a.slice(0,r);a=a.slice(r);return i},resetAfterLine:function(){a.length=0},end:function(){if(o!==r.length){throw new Error("extra data found")}}}}function mapImage8Bit(r,i,a,o,l,u){var v=r.width;var b=r.height;var y=r.index;for(var x=0;x<b;x++){for(var A=0;A<v;A++){var E=a(A,x,y);s[o](i,l,E,u);u+=o}}return u}function mapImageCustomBit(r,i,a,o,s,u){var v=r.width;var b=r.height;var y=r.index;for(var x=0;x<b;x++){for(var A=0;A<v;A++){var E=s.get(o);var M=a(A,x,y);l[o](i,E,M,u)}s.resetAfterLine()}}i.dataToBitMap=function(r,i){var a=i.width;var s=i.height;var l=i.depth;var u=i.bpp;var v=i.interlace;if(l!==8){var b=bitRetriever(r,l)}var y;if(l<=8){y=new Buffer(a*s*4)}else{y=new Uint16Array(a*s*4)}var x=Math.pow(2,l)-1;var A=0;var E;var M;if(v){E=o.getImagePasses(a,s);M=o.getInterlaceIterator(a,s)}else{var L=0;M=function(){var r=L;L+=4;return r};E=[{width:a,height:s}]}for(var P=0;P<E.length;P++){if(l===8){A=mapImage8Bit(E[P],y,M,u,r,A)}else{mapImageCustomBit(E[P],y,M,u,b,x)}}if(l===8){if(A!==r.length){throw new Error("extra data found")}}else{b.end()}return y}},3472:(r,i,a)=>{"use strict";var o=a(6367);r.exports=function(r,i,a,s){var l=[o.COLORTYPE_COLOR_ALPHA,o.COLORTYPE_ALPHA].indexOf(s.colorType)!==-1;if(s.colorType===s.inputColorType){var u=function(){var r=new ArrayBuffer(2);new DataView(r).setInt16(0,256,true);return new Int16Array(r)[0]!==256}();if(s.bitDepth===8||s.bitDepth===16&&u){return r}}var v=s.bitDepth!==16?r:new Uint16Array(r.buffer);var b=255;var y=o.COLORTYPE_TO_BPP_MAP[s.inputColorType];if(y===4&&!s.inputHasAlpha){y=3}var x=o.COLORTYPE_TO_BPP_MAP[s.colorType];if(s.bitDepth===16){b=65535;x*=2}var A=new Buffer(i*a*x);var E=0;var M=0;var L=s.bgColor||{};if(L.red===undefined){L.red=b}if(L.green===undefined){L.green=b}if(L.blue===undefined){L.blue=b}function getRGBA(){var r;var i;var a;var u=b;switch(s.inputColorType){case o.COLORTYPE_COLOR_ALPHA:u=v[E+3];r=v[E];i=v[E+1];a=v[E+2];break;case o.COLORTYPE_COLOR:r=v[E];i=v[E+1];a=v[E+2];break;case o.COLORTYPE_ALPHA:u=v[E+1];r=v[E];i=r;a=r;break;case o.COLORTYPE_GRAYSCALE:r=v[E];i=r;a=r;break;default:throw new Error("input color type:"+s.inputColorType+" is not supported at present")}if(s.inputHasAlpha){if(!l){u/=b;r=Math.min(Math.max(Math.round((1-u)*L.red+u*r),0),b);i=Math.min(Math.max(Math.round((1-u)*L.green+u*i),0),b);a=Math.min(Math.max(Math.round((1-u)*L.blue+u*a),0),b)}}return{red:r,green:i,blue:a,alpha:u}}for(var P=0;P<a;P++){for(var T=0;T<i;T++){var I=getRGBA(v,E);switch(s.colorType){case o.COLORTYPE_COLOR_ALPHA:case o.COLORTYPE_COLOR:if(s.bitDepth===8){A[M]=I.red;A[M+1]=I.green;A[M+2]=I.blue;if(l){A[M+3]=I.alpha}}else{A.writeUInt16BE(I.red,M);A.writeUInt16BE(I.green,M+2);A.writeUInt16BE(I.blue,M+4);if(l){A.writeUInt16BE(I.alpha,M+6)}}break;case o.COLORTYPE_ALPHA:case o.COLORTYPE_GRAYSCALE:var O=(I.red+I.green+I.blue)/3;if(s.bitDepth===8){A[M]=O;if(l){A[M+1]=I.alpha}}else{A.writeUInt16BE(O,M);if(l){A.writeUInt16BE(I.alpha,M+2)}}break;default:throw new Error("unrecognised color Type "+s.colorType)}E+=y;M+=x}}return A}},6458:(r,i,a)=>{"use strict";var o=a(3837);var s=a(2781);var l=r.exports=function(){s.call(this);this._buffers=[];this._buffered=0;this._reads=[];this._paused=false;this._encoding="utf8";this.writable=true};o.inherits(l,s);l.prototype.read=function(r,i){this._reads.push({length:Math.abs(r),allowLess:r<0,func:i});process.nextTick(function(){this._process();if(this._paused&&this._reads.length>0){this._paused=false;this.emit("drain")}}.bind(this))};l.prototype.write=function(r,i){if(!this.writable){this.emit("error",new Error("Stream not writable"));return false}var a;if(Buffer.isBuffer(r)){a=r}else{a=new Buffer(r,i||this._encoding)}this._buffers.push(a);this._buffered+=a.length;this._process();if(this._reads&&this._reads.length===0){this._paused=true}return this.writable&&!this._paused};l.prototype.end=function(r,i){if(r){this.write(r,i)}this.writable=false;if(!this._buffers){return}if(this._buffers.length===0){this._end()}else{this._buffers.push(null);this._process()}};l.prototype.destroySoon=l.prototype.end;l.prototype._end=function(){if(this._reads.length>0){this.emit("error",new Error("Unexpected end of input"))}this.destroy()};l.prototype.destroy=function(){if(!this._buffers){return}this.writable=false;this._reads=null;this._buffers=null;this.emit("close")};l.prototype._processReadAllowingLess=function(r){this._reads.shift();var i=this._buffers[0];if(i.length>r.length){this._buffered-=r.length;this._buffers[0]=i.slice(r.length);r.func.call(this,i.slice(0,r.length))}else{this._buffered-=i.length;this._buffers.shift();r.func.call(this,i)}};l.prototype._processRead=function(r){this._reads.shift();var i=0;var a=0;var o=new Buffer(r.length);while(i<r.length){var s=this._buffers[a++];var l=Math.min(s.length,r.length-i);s.copy(o,i,0,l);i+=l;if(l!==s.length){this._buffers[--a]=s.slice(l)}}if(a>0){this._buffers.splice(0,a)}this._buffered-=r.length;r.func.call(this,o)};l.prototype._process=function(){try{while(this._buffered>0&&this._reads&&this._reads.length>0){var r=this._reads[0];if(r.allowLess){this._processReadAllowingLess(r)}else if(this._buffered>=r.length){this._processRead(r)}else{break}}if(this._buffers&&!this.writable){this._end()}}catch(r){this.emit("error",r)}}},6367:r=>{"use strict";r.exports={PNG_SIGNATURE:[137,80,78,71,13,10,26,10],TYPE_IHDR:1229472850,TYPE_IEND:1229278788,TYPE_IDAT:1229209940,TYPE_PLTE:1347179589,TYPE_tRNS:1951551059,TYPE_gAMA:1732332865,COLORTYPE_GRAYSCALE:0,COLORTYPE_PALETTE:1,COLORTYPE_COLOR:2,COLORTYPE_ALPHA:4,COLORTYPE_PALETTE_COLOR:3,COLORTYPE_COLOR_ALPHA:6,COLORTYPE_TO_BPP_MAP:{0:1,2:3,3:1,4:2,6:4},GAMMA_DIVISION:1e5}},1490:r=>{"use strict";var i=[];(function(){for(var r=0;r<256;r++){var a=r;for(var o=0;o<8;o++){if(a&1){a=3988292384^a>>>1}else{a=a>>>1}}i[r]=a}})();var a=r.exports=function(){this._crc=-1};a.prototype.write=function(r){for(var a=0;a<r.length;a++){this._crc=i[(this._crc^r[a])&255]^this._crc>>>8}return true};a.prototype.crc32=function(){return this._crc^-1};a.crc32=function(r){var a=-1;for(var o=0;o<r.length;o++){a=i[(a^r[o])&255]^a>>>8}return a^-1}},8436:(r,i,a)=>{"use strict";var o=a(8976);function filterNone(r,i,a,o,s){for(var l=0;l<a;l++){o[s+l]=r[i+l]}}function filterSumNone(r,i,a){var o=0;var s=i+a;for(var l=i;l<s;l++){o+=Math.abs(r[l])}return o}function filterSub(r,i,a,o,s,l){for(var u=0;u<a;u++){var v=u>=l?r[i+u-l]:0;var b=r[i+u]-v;o[s+u]=b}}function filterSumSub(r,i,a,o){var s=0;for(var l=0;l<a;l++){var u=l>=o?r[i+l-o]:0;var v=r[i+l]-u;s+=Math.abs(v)}return s}function filterUp(r,i,a,o,s){for(var l=0;l<a;l++){var u=i>0?r[i+l-a]:0;var v=r[i+l]-u;o[s+l]=v}}function filterSumUp(r,i,a){var o=0;var s=i+a;for(var l=i;l<s;l++){var u=i>0?r[l-a]:0;var v=r[l]-u;o+=Math.abs(v)}return o}function filterAvg(r,i,a,o,s,l){for(var u=0;u<a;u++){var v=u>=l?r[i+u-l]:0;var b=i>0?r[i+u-a]:0;var y=r[i+u]-(v+b>>1);o[s+u]=y}}function filterSumAvg(r,i,a,o){var s=0;for(var l=0;l<a;l++){var u=l>=o?r[i+l-o]:0;var v=i>0?r[i+l-a]:0;var b=r[i+l]-(u+v>>1);s+=Math.abs(b)}return s}function filterPaeth(r,i,a,s,l,u){for(var v=0;v<a;v++){var b=v>=u?r[i+v-u]:0;var y=i>0?r[i+v-a]:0;var x=i>0&&v>=u?r[i+v-(a+u)]:0;var A=r[i+v]-o(b,y,x);s[l+v]=A}}function filterSumPaeth(r,i,a,s){var l=0;for(var u=0;u<a;u++){var v=u>=s?r[i+u-s]:0;var b=i>0?r[i+u-a]:0;var y=i>0&&u>=s?r[i+u-(a+s)]:0;var x=r[i+u]-o(v,b,y);l+=Math.abs(x)}return l}var s={0:filterNone,1:filterSub,2:filterUp,3:filterAvg,4:filterPaeth};var l={0:filterSumNone,1:filterSumSub,2:filterSumUp,3:filterSumAvg,4:filterSumPaeth};r.exports=function(r,i,a,o,u){var v;if(!("filterType"in o)||o.filterType===-1){v=[0,1,2,3,4]}else if(typeof o.filterType==="number"){v=[o.filterType]}else{throw new Error("unrecognised filter types")}if(o.bitDepth===16){u*=2}var b=i*u;var y=0;var x=0;var A=new Buffer((b+1)*a);var E=v[0];for(var M=0;M<a;M++){if(v.length>1){var L=Infinity;for(var P=0;P<v.length;P++){var T=l[v[P]](r,x,b,u);if(T<L){E=v[P];L=T}}}A[y]=E;y++;s[E](r,x,b,A,y,u);y+=b;x+=b}return A}},1004:(r,i,a)=>{"use strict";var o=a(3837);var s=a(6458);var l=a(2452);var u=r.exports=function(r){s.call(this);var i=[];var a=this;this._filter=new l(r,{read:this.read.bind(this),write:function(r){i.push(r)},complete:function(){a.emit("complete",Buffer.concat(i))}});this._filter.start()};o.inherits(u,s)},1697:(r,i,a)=>{"use strict";var o=a(1827);var s=a(2452);i.process=function(r,i){var a=[];var l=new o(r);var u=new s(i,{read:l.read.bind(l),write:function(r){a.push(r)},complete:function(){}});u.start();l.process();return Buffer.concat(a)}},2452:(r,i,a)=>{"use strict";var o=a(393);var s=a(8976);function getByteWidth(r,i,a){var o=r*i;if(a!==8){o=Math.ceil(o/(8/a))}return o}var l=r.exports=function(r,i){var a=r.width;var s=r.height;var l=r.interlace;var u=r.bpp;var v=r.depth;this.read=i.read;this.write=i.write;this.complete=i.complete;this._imageIndex=0;this._images=[];if(l){var b=o.getImagePasses(a,s);for(var y=0;y<b.length;y++){this._images.push({byteWidth:getByteWidth(b[y].width,u,v),height:b[y].height,lineIndex:0})}}else{this._images.push({byteWidth:getByteWidth(a,u,v),height:s,lineIndex:0})}if(v===8){this._xComparison=u}else if(v===16){this._xComparison=u*2}else{this._xComparison=1}};l.prototype.start=function(){this.read(this._images[this._imageIndex].byteWidth+1,this._reverseFilterLine.bind(this))};l.prototype._unFilterType1=function(r,i,a){var o=this._xComparison;var s=o-1;for(var l=0;l<a;l++){var u=r[1+l];var v=l>s?i[l-o]:0;i[l]=u+v}};l.prototype._unFilterType2=function(r,i,a){var o=this._lastLine;for(var s=0;s<a;s++){var l=r[1+s];var u=o?o[s]:0;i[s]=l+u}};l.prototype._unFilterType3=function(r,i,a){var o=this._xComparison;var s=o-1;var l=this._lastLine;for(var u=0;u<a;u++){var v=r[1+u];var b=l?l[u]:0;var y=u>s?i[u-o]:0;var x=Math.floor((y+b)/2);i[u]=v+x}};l.prototype._unFilterType4=function(r,i,a){var o=this._xComparison;var l=o-1;var u=this._lastLine;for(var v=0;v<a;v++){var b=r[1+v];var y=u?u[v]:0;var x=v>l?i[v-o]:0;var A=v>l&&u?u[v-o]:0;var E=s(x,y,A);i[v]=b+E}};l.prototype._reverseFilterLine=function(r){var i=r[0];var a;var o=this._images[this._imageIndex];var s=o.byteWidth;if(i===0){a=r.slice(1,s+1)}else{a=new Buffer(s);switch(i){case 1:this._unFilterType1(r,a,s);break;case 2:this._unFilterType2(r,a,s);break;case 3:this._unFilterType3(r,a,s);break;case 4:this._unFilterType4(r,a,s);break;default:throw new Error("Unrecognised filter type - "+i)}}this.write(a);o.lineIndex++;if(o.lineIndex>=o.height){this._lastLine=null;this._imageIndex++;o=this._images[this._imageIndex]}else{this._lastLine=a}if(o){this.read(o.byteWidth+1,this._reverseFilterLine.bind(this))}else{this._lastLine=null;this.complete()}}},3585:r=>{"use strict";function dePalette(r,i,a,o,s){var l=0;for(var u=0;u<o;u++){for(var v=0;v<a;v++){var b=s[r[l]];if(!b){throw new Error("index "+r[l]+" not in palette")}for(var y=0;y<4;y++){i[l+y]=b[y]}l+=4}}}function replaceTransparentColor(r,i,a,o,s){var l=0;for(var u=0;u<o;u++){for(var v=0;v<a;v++){var b=false;if(s.length===1){if(s[0]===r[l]){b=true}}else if(s[0]===r[l]&&s[1]===r[l+1]&&s[2]===r[l+2]){b=true}if(b){for(var y=0;y<4;y++){i[l+y]=0}}l+=4}}}function scaleDepth(r,i,a,o,s){var l=255;var u=Math.pow(2,s)-1;var v=0;for(var b=0;b<o;b++){for(var y=0;y<a;y++){for(var x=0;x<4;x++){i[v+x]=Math.floor(r[v+x]*l/u+.5)}v+=4}}}r.exports=function(r,i){var a=i.depth;var o=i.width;var s=i.height;var l=i.colorType;var u=i.transColor;var v=i.palette;var b=r;if(l===3){dePalette(r,b,o,s,v)}else{if(u){replaceTransparentColor(r,b,o,s,u)}if(a!==8){if(a===16){b=new Buffer(o*s*4)}scaleDepth(r,b,o,s,a)}}return b}},393:(r,i)=>{"use strict";var a=[{x:[0],y:[0]},{x:[4],y:[0]},{x:[0,4],y:[4]},{x:[2,6],y:[0,4]},{x:[0,2,4,6],y:[2,6]},{x:[1,3,5,7],y:[0,2,4,6]},{x:[0,1,2,3,4,5,6,7],y:[1,3,5,7]}];i.getImagePasses=function(r,i){var o=[];var s=r%8;var l=i%8;var u=(r-s)/8;var v=(i-l)/8;for(var b=0;b<a.length;b++){var y=a[b];var x=u*y.x.length;var A=v*y.y.length;for(var E=0;E<y.x.length;E++){if(y.x[E]<s){x++}else{break}}for(E=0;E<y.y.length;E++){if(y.y[E]<l){A++}else{break}}if(x>0&&A>0){o.push({width:x,height:A,index:b})}}return o};i.getInterlaceIterator=function(r){return function(i,o,s){var l=i%a[s].x.length;var u=(i-l)/a[s].x.length*8+a[s].x[l];var v=o%a[s].y.length;var b=(o-v)/a[s].y.length*8+a[s].y[v];return u*4+b*r*4}}},3302:(r,i,a)=>{"use strict";var o=a(3837);var s=a(2781);var l=a(6367);var u=a(8217);var v=r.exports=function(r){s.call(this);var i=r||{};this._packer=new u(i);this._deflate=this._packer.createDeflate();this.readable=true};o.inherits(v,s);v.prototype.pack=function(r,i,a,o){this.emit("data",new Buffer(l.PNG_SIGNATURE));this.emit("data",this._packer.packIHDR(i,a));if(o){this.emit("data",this._packer.packGAMA(o))}var s=this._packer.filterData(r,i,a);this._deflate.on("error",this.emit.bind(this,"error"));this._deflate.on("data",function(r){this.emit("data",this._packer.packIDAT(r))}.bind(this));this._deflate.on("end",function(){this.emit("data",this._packer.packIEND());this.emit("end")}.bind(this));this._deflate.end(s)}},4459:(r,i,a)=>{"use strict";var o=true;var s=a(9796);if(!s.deflateSync){o=false}var l=a(6367);var u=a(8217);r.exports=function(r,i){if(!o){throw new Error("To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0")}var a=i||{};var v=new u(a);var b=[];b.push(new Buffer(l.PNG_SIGNATURE));b.push(v.packIHDR(r.width,r.height));if(r.gamma){b.push(v.packGAMA(r.gamma))}var y=v.filterData(r.data,r.width,r.height);var x=s.deflateSync(y,v.getDeflateOptions());y=null;if(!x||!x.length){throw new Error("bad png - invalid compressed data response")}b.push(v.packIDAT(x));b.push(v.packIEND());return Buffer.concat(b)}},8217:(r,i,a)=>{"use strict";var o=a(6367);var s=a(1490);var l=a(3472);var u=a(8436);var v=a(9796);var b=r.exports=function(r){this._options=r;r.deflateChunkSize=r.deflateChunkSize||32*1024;r.deflateLevel=r.deflateLevel!=null?r.deflateLevel:9;r.deflateStrategy=r.deflateStrategy!=null?r.deflateStrategy:3;r.inputHasAlpha=r.inputHasAlpha!=null?r.inputHasAlpha:true;r.deflateFactory=r.deflateFactory||v.createDeflate;r.bitDepth=r.bitDepth||8;r.colorType=typeof r.colorType==="number"?r.colorType:o.COLORTYPE_COLOR_ALPHA;r.inputColorType=typeof r.inputColorType==="number"?r.inputColorType:o.COLORTYPE_COLOR_ALPHA;if([o.COLORTYPE_GRAYSCALE,o.COLORTYPE_COLOR,o.COLORTYPE_COLOR_ALPHA,o.COLORTYPE_ALPHA].indexOf(r.colorType)===-1){throw new Error("option color type:"+r.colorType+" is not supported at present")}if([o.COLORTYPE_GRAYSCALE,o.COLORTYPE_COLOR,o.COLORTYPE_COLOR_ALPHA,o.COLORTYPE_ALPHA].indexOf(r.inputColorType)===-1){throw new Error("option input color type:"+r.inputColorType+" is not supported at present")}if(r.bitDepth!==8&&r.bitDepth!==16){throw new Error("option bit depth:"+r.bitDepth+" is not supported at present")}};b.prototype.getDeflateOptions=function(){return{chunkSize:this._options.deflateChunkSize,level:this._options.deflateLevel,strategy:this._options.deflateStrategy}};b.prototype.createDeflate=function(){return this._options.deflateFactory(this.getDeflateOptions())};b.prototype.filterData=function(r,i,a){var s=l(r,i,a,this._options);var v=o.COLORTYPE_TO_BPP_MAP[this._options.colorType];var b=u(s,i,a,this._options,v);return b};b.prototype._packChunk=function(r,i){var a=i?i.length:0;var o=new Buffer(a+12);o.writeUInt32BE(a,0);o.writeUInt32BE(r,4);if(i){i.copy(o,8)}o.writeInt32BE(s.crc32(o.slice(4,o.length-4)),o.length-4);return o};b.prototype.packGAMA=function(r){var i=new Buffer(4);i.writeUInt32BE(Math.floor(r*o.GAMMA_DIVISION),0);return this._packChunk(o.TYPE_gAMA,i)};b.prototype.packIHDR=function(r,i){var a=new Buffer(13);a.writeUInt32BE(r,0);a.writeUInt32BE(i,4);a[8]=this._options.bitDepth;a[9]=this._options.colorType;a[10]=0;a[11]=0;a[12]=0;return this._packChunk(o.TYPE_IHDR,a)};b.prototype.packIDAT=function(r){return this._packChunk(o.TYPE_IDAT,r)};b.prototype.packIEND=function(){return this._packChunk(o.TYPE_IEND,null)}},8976:r=>{"use strict";r.exports=function paethPredictor(r,i,a){var o=r+i-a;var s=Math.abs(o-r);var l=Math.abs(o-i);var u=Math.abs(o-a);if(s<=l&&s<=u){return r}if(l<=u){return i}return a}},6120:(r,i,a)=>{"use strict";var o=a(3837);var s=a(9796);var l=a(6458);var u=a(1004);var v=a(7077);var b=a(7958);var y=a(3585);var x=r.exports=function(r){l.call(this);this._parser=new v(r,{read:this.read.bind(this),error:this._handleError.bind(this),metadata:this._handleMetaData.bind(this),gamma:this.emit.bind(this,"gamma"),palette:this._handlePalette.bind(this),transColor:this._handleTransColor.bind(this),finished:this._finished.bind(this),inflateData:this._inflateData.bind(this),simpleTransparency:this._simpleTransparency.bind(this),headersFinished:this._headersFinished.bind(this)});this._options=r;this.writable=true;this._parser.start()};o.inherits(x,l);x.prototype._handleError=function(r){this.emit("error",r);this.writable=false;this.destroy();if(this._inflate&&this._inflate.destroy){this._inflate.destroy()}if(this._filter){this._filter.destroy();this._filter.on("error",(function(){}))}this.errord=true};x.prototype._inflateData=function(r){if(!this._inflate){if(this._bitmapInfo.interlace){this._inflate=s.createInflate();this._inflate.on("error",this.emit.bind(this,"error"));this._filter.on("complete",this._complete.bind(this));this._inflate.pipe(this._filter)}else{var i=(this._bitmapInfo.width*this._bitmapInfo.bpp*this._bitmapInfo.depth+7>>3)+1;var a=i*this._bitmapInfo.height;var o=Math.max(a,s.Z_MIN_CHUNK);this._inflate=s.createInflate({chunkSize:o});var l=a;var u=this.emit.bind(this,"error");this._inflate.on("error",(function(r){if(!l){return}u(r)}));this._filter.on("complete",this._complete.bind(this));var v=this._filter.write.bind(this._filter);this._inflate.on("data",(function(r){if(!l){return}if(r.length>l){r=r.slice(0,l)}l-=r.length;v(r)}));this._inflate.on("end",this._filter.end.bind(this._filter))}}this._inflate.write(r)};x.prototype._handleMetaData=function(r){this._metaData=r;this._bitmapInfo=Object.create(r);this._filter=new u(this._bitmapInfo)};x.prototype._handleTransColor=function(r){this._bitmapInfo.transColor=r};x.prototype._handlePalette=function(r){this._bitmapInfo.palette=r};x.prototype._simpleTransparency=function(){this._metaData.alpha=true};x.prototype._headersFinished=function(){this.emit("metadata",this._metaData)};x.prototype._finished=function(){if(this.errord){return}if(!this._inflate){this.emit("error","No Inflate block")}else{this._inflate.end()}this.destroySoon()};x.prototype._complete=function(r){if(this.errord){return}try{var i=b.dataToBitMap(r,this._bitmapInfo);var a=y(i,this._bitmapInfo);i=null}catch(r){this._handleError(r);return}this.emit("parsed",a)}},9274:(r,i,a)=>{"use strict";var o=true;var s=a(9796);var l=a(2287);if(!s.deflateSync){o=false}var u=a(1827);var v=a(1697);var b=a(7077);var y=a(7958);var x=a(3585);r.exports=function(r,i){if(!o){throw new Error("To use the sync capability of this library in old node versions, please pin pngjs to v2.3.0")}var a;function handleError(r){a=r}var A;function handleMetaData(r){A=r}function handleTransColor(r){A.transColor=r}function handlePalette(r){A.palette=r}function handleSimpleTransparency(){A.alpha=true}var E;function handleGamma(r){E=r}var M=[];function handleInflateData(r){M.push(r)}var L=new u(r);var P=new b(i,{read:L.read.bind(L),error:handleError,metadata:handleMetaData,gamma:handleGamma,palette:handlePalette,transColor:handleTransColor,inflateData:handleInflateData,simpleTransparency:handleSimpleTransparency});P.start();L.process();if(a){throw a}var T=Buffer.concat(M);M.length=0;var I;if(A.interlace){I=s.inflateSync(T)}else{var O=(A.width*A.bpp*A.depth+7>>3)+1;var S=O*A.height;I=l(T,{chunkSize:S,maxLength:S})}T=null;if(!I||!I.length){throw new Error("bad png - invalid inflate data response")}var k=v.process(I,A);T=null;var D=y.dataToBitMap(k,A);k=null;var z=x(D,A);A.data=z;A.gamma=E||0;return A}},7077:(r,i,a)=>{"use strict";var o=a(6367);var s=a(1490);var l=r.exports=function(r,i){this._options=r;r.checkCRC=r.checkCRC!==false;this._hasIHDR=false;this._hasIEND=false;this._emittedHeadersFinished=false;this._palette=[];this._colorType=0;this._chunks={};this._chunks[o.TYPE_IHDR]=this._handleIHDR.bind(this);this._chunks[o.TYPE_IEND]=this._handleIEND.bind(this);this._chunks[o.TYPE_IDAT]=this._handleIDAT.bind(this);this._chunks[o.TYPE_PLTE]=this._handlePLTE.bind(this);this._chunks[o.TYPE_tRNS]=this._handleTRNS.bind(this);this._chunks[o.TYPE_gAMA]=this._handleGAMA.bind(this);this.read=i.read;this.error=i.error;this.metadata=i.metadata;this.gamma=i.gamma;this.transColor=i.transColor;this.palette=i.palette;this.parsed=i.parsed;this.inflateData=i.inflateData;this.finished=i.finished;this.simpleTransparency=i.simpleTransparency;this.headersFinished=i.headersFinished||function(){}};l.prototype.start=function(){this.read(o.PNG_SIGNATURE.length,this._parseSignature.bind(this))};l.prototype._parseSignature=function(r){var i=o.PNG_SIGNATURE;for(var a=0;a<i.length;a++){if(r[a]!==i[a]){this.error(new Error("Invalid file signature"));return}}this.read(8,this._parseChunkBegin.bind(this))};l.prototype._parseChunkBegin=function(r){var i=r.readUInt32BE(0);var a=r.readUInt32BE(4);var l="";for(var u=4;u<8;u++){l+=String.fromCharCode(r[u])}var v=Boolean(r[4]&32);if(!this._hasIHDR&&a!==o.TYPE_IHDR){this.error(new Error("Expected IHDR on beggining"));return}this._crc=new s;this._crc.write(new Buffer(l));if(this._chunks[a]){return this._chunks[a](i)}if(!v){this.error(new Error("Unsupported critical chunk type "+l));return}this.read(i+4,this._skipChunk.bind(this))};l.prototype._skipChunk=function(){this.read(8,this._parseChunkBegin.bind(this))};l.prototype._handleChunkEnd=function(){this.read(4,this._parseChunkEnd.bind(this))};l.prototype._parseChunkEnd=function(r){var i=r.readInt32BE(0);var a=this._crc.crc32();if(this._options.checkCRC&&a!==i){this.error(new Error("Crc error - "+i+" - "+a));return}if(!this._hasIEND){this.read(8,this._parseChunkBegin.bind(this))}};l.prototype._handleIHDR=function(r){this.read(r,this._parseIHDR.bind(this))};l.prototype._parseIHDR=function(r){this._crc.write(r);var i=r.readUInt32BE(0);var a=r.readUInt32BE(4);var s=r[8];var l=r[9];var u=r[10];var v=r[11];var b=r[12];if(s!==8&&s!==4&&s!==2&&s!==1&&s!==16){this.error(new Error("Unsupported bit depth "+s));return}if(!(l in o.COLORTYPE_TO_BPP_MAP)){this.error(new Error("Unsupported color type"));return}if(u!==0){this.error(new Error("Unsupported compression method"));return}if(v!==0){this.error(new Error("Unsupported filter method"));return}if(b!==0&&b!==1){this.error(new Error("Unsupported interlace method"));return}this._colorType=l;var y=o.COLORTYPE_TO_BPP_MAP[this._colorType];this._hasIHDR=true;this.metadata({width:i,height:a,depth:s,interlace:Boolean(b),palette:Boolean(l&o.COLORTYPE_PALETTE),color:Boolean(l&o.COLORTYPE_COLOR),alpha:Boolean(l&o.COLORTYPE_ALPHA),bpp:y,colorType:l});this._handleChunkEnd()};l.prototype._handlePLTE=function(r){this.read(r,this._parsePLTE.bind(this))};l.prototype._parsePLTE=function(r){this._crc.write(r);var i=Math.floor(r.length/3);for(var a=0;a<i;a++){this._palette.push([r[a*3],r[a*3+1],r[a*3+2],255])}this.palette(this._palette);this._handleChunkEnd()};l.prototype._handleTRNS=function(r){this.simpleTransparency();this.read(r,this._parseTRNS.bind(this))};l.prototype._parseTRNS=function(r){this._crc.write(r);if(this._colorType===o.COLORTYPE_PALETTE_COLOR){if(this._palette.length===0){this.error(new Error("Transparency chunk must be after palette"));return}if(r.length>this._palette.length){this.error(new Error("More transparent colors than palette size"));return}for(var i=0;i<r.length;i++){this._palette[i][3]=r[i]}this.palette(this._palette)}if(this._colorType===o.COLORTYPE_GRAYSCALE){this.transColor([r.readUInt16BE(0)])}if(this._colorType===o.COLORTYPE_COLOR){this.transColor([r.readUInt16BE(0),r.readUInt16BE(2),r.readUInt16BE(4)])}this._handleChunkEnd()};l.prototype._handleGAMA=function(r){this.read(r,this._parseGAMA.bind(this))};l.prototype._parseGAMA=function(r){this._crc.write(r);this.gamma(r.readUInt32BE(0)/o.GAMMA_DIVISION);this._handleChunkEnd()};l.prototype._handleIDAT=function(r){if(!this._emittedHeadersFinished){this._emittedHeadersFinished=true;this.headersFinished()}this.read(-r,this._parseIDAT.bind(this,r))};l.prototype._parseIDAT=function(r,i){this._crc.write(i);if(this._colorType===o.COLORTYPE_PALETTE_COLOR&&this._palette.length===0){throw new Error("Expected palette not found")}this.inflateData(i);var a=r-i.length;if(a>0){this._handleIDAT(a)}else{this._handleChunkEnd()}};l.prototype._handleIEND=function(r){this.read(r,this._parseIEND.bind(this))};l.prototype._parseIEND=function(r){this._crc.write(r);this._hasIEND=true;this._handleChunkEnd();if(this.finished){this.finished()}}},3615:(r,i,a)=>{"use strict";var o=a(9274);var s=a(4459);i.read=function(r,i){return o(r,i||{})};i.write=function(r,i){return s(r,i)}},6249:(r,i,a)=>{"use strict";var o=a(3837);var s=a(2781);var l=a(6120);var u=a(3302);var v=a(3615);var b=i.PNG=function(r){s.call(this);r=r||{};this.width=r.width|0;this.height=r.height|0;this.data=this.width>0&&this.height>0?new Buffer(4*this.width*this.height):null;if(r.fill&&this.data){this.data.fill(0)}this.gamma=0;this.readable=this.writable=true;this._parser=new l(r);this._parser.on("error",this.emit.bind(this,"error"));this._parser.on("close",this._handleClose.bind(this));this._parser.on("metadata",this._metadata.bind(this));this._parser.on("gamma",this._gamma.bind(this));this._parser.on("parsed",function(r){this.data=r;this.emit("parsed",r)}.bind(this));this._packer=new u(r);this._packer.on("data",this.emit.bind(this,"data"));this._packer.on("end",this.emit.bind(this,"end"));this._parser.on("close",this._handleClose.bind(this));this._packer.on("error",this.emit.bind(this,"error"))};o.inherits(b,s);b.sync=v;b.prototype.pack=function(){if(!this.data||!this.data.length){this.emit("error","No data provided");return this}process.nextTick(function(){this._packer.pack(this.data,this.width,this.height,this.gamma)}.bind(this));return this};b.prototype.parse=function(r,i){if(i){var a,o;a=function(r){this.removeListener("error",o);this.data=r;i(null,this)}.bind(this);o=function(r){this.removeListener("parsed",a);i(r,null)}.bind(this);this.once("parsed",a);this.once("error",o)}this.end(r);return this};b.prototype.write=function(r){this._parser.write(r);return true};b.prototype.end=function(r){this._parser.end(r)};b.prototype._metadata=function(r){this.width=r.width;this.height=r.height;this.emit("metadata",r)};b.prototype._gamma=function(r){this.gamma=r};b.prototype._handleClose=function(){if(!this._parser.writable&&!this._packer.readable){this.emit("close")}};b.bitblt=function(r,i,a,o,s,l,u,v){a|=0;o|=0;s|=0;l|=0;u|=0;v|=0;if(a>r.width||o>r.height||a+s>r.width||o+l>r.height){throw new Error("bitblt reading outside image")}if(u>i.width||v>i.height||u+s>i.width||v+l>i.height){throw new Error("bitblt writing outside image")}for(var b=0;b<l;b++){r.data.copy(i.data,(v+b)*i.width+u<<2,(o+b)*r.width+a<<2,(o+b)*r.width+a+s<<2)}};b.prototype.bitblt=function(r,i,a,o,s,l,u){b.bitblt(this,r,i,a,o,s,l,u);return this};b.adjustGamma=function(r){if(r.gamma){for(var i=0;i<r.height;i++){for(var a=0;a<r.width;a++){var o=r.width*i+a<<2;for(var s=0;s<3;s++){var l=r.data[o+s]/255;l=Math.pow(l,1/2.2/r.gamma);r.data[o+s]=Math.round(l*255)}}}r.gamma=0}};b.prototype.adjustGamma=function(){b.adjustGamma(this)}},2287:(r,i,a)=>{"use strict";var o=a(9491).ok;var s=a(9796);var l=a(3837);var u=a(4300).kMaxLength;function Inflate(r){if(!(this instanceof Inflate)){return new Inflate(r)}if(r&&r.chunkSize<s.Z_MIN_CHUNK){r.chunkSize=s.Z_MIN_CHUNK}s.Inflate.call(this,r);this._offset=this._offset===undefined?this._outOffset:this._offset;this._buffer=this._buffer||this._outBuffer;if(r&&r.maxLength!=null){this._maxLength=r.maxLength}}function createInflate(r){return new Inflate(r)}function _close(r,i){if(i){process.nextTick(i)}if(!r._handle){return}r._handle.close();r._handle=null}Inflate.prototype._processChunk=function(r,i,a){if(typeof a==="function"){return s.Inflate._processChunk.call(this,r,i,a)}var l=this;var v=r&&r.length;var b=this._chunkSize-this._offset;var y=this._maxLength;var x=0;var A=[];var E=0;var M;this.on("error",(function(r){M=r}));function handleChunk(r,i){if(l._hadError){return}var a=b-i;o(a>=0,"have should not go down");if(a>0){var s=l._buffer.slice(l._offset,l._offset+a);l._offset+=a;if(s.length>y){s=s.slice(0,y)}A.push(s);E+=s.length;y-=s.length;if(y===0){return false}}if(i===0||l._offset>=l._chunkSize){b=l._chunkSize;l._offset=0;l._buffer=Buffer.allocUnsafe(l._chunkSize)}if(i===0){x+=v-r;v=r;return true}return false}o(this._handle,"zlib binding closed");do{var L=this._handle.writeSync(i,r,x,v,this._buffer,this._offset,b);L=L||this._writeState}while(!this._hadError&&handleChunk(L[0],L[1]));if(this._hadError){throw M}if(E>=u){_close(this);throw new RangeError("Cannot create final Buffer. It would be larger than 0x"+u.toString(16)+" bytes")}var P=Buffer.concat(A,E);_close(this);return P};l.inherits(Inflate,s.Inflate);function zlibBufferSync(r,i){if(typeof i==="string"){i=Buffer.from(i)}if(!(i instanceof Buffer)){throw new TypeError("Not a string or buffer")}var a=r._finishFlushFlag;if(a==null){a=s.Z_FINISH}return r._processChunk(i,a)}function inflateSync(r,i){return zlibBufferSync(new Inflate(i),r)}r.exports=i=inflateSync;i.Inflate=Inflate;i.createInflate=createInflate;i.inflateSync=inflateSync},1827:r=>{"use strict";var i=r.exports=function(r){this._buffer=r;this._reads=[]};i.prototype.read=function(r,i){this._reads.push({length:Math.abs(r),allowLess:r<0,func:i})};i.prototype.process=function(){while(this._reads.length>0&&this._buffer.length){var r=this._reads[0];if(this._buffer.length&&(this._buffer.length>=r.length||r.allowLess)){this._reads.shift();var i=this._buffer;this._buffer=i.slice(r.length);r.func.call(this,i.slice(0,r.length))}else{break}}if(this._reads.length>0){return new Error("There are some read requests waitng on finished stream")}if(this._buffer.length>0){return new Error("unrecognised content at end of stream")}}},1204:r=>{var i=function(r){"use strict";var i=Object.prototype;var a=i.hasOwnProperty;var o;var s=typeof Symbol==="function"?Symbol:{};var l=s.iterator||"@@iterator";var u=s.asyncIterator||"@@asyncIterator";var v=s.toStringTag||"@@toStringTag";function define(r,i,a){Object.defineProperty(r,i,{value:a,enumerable:true,configurable:true,writable:true});return r[i]}try{define({},"")}catch(r){define=function(r,i,a){return r[i]=a}}function wrap(r,i,a,o){var s=i&&i.prototype instanceof Generator?i:Generator;var l=Object.create(s.prototype);var u=new Context(o||[]);l._invoke=makeInvokeMethod(r,a,u);return l}r.wrap=wrap;function tryCatch(r,i,a){try{return{type:"normal",arg:r.call(i,a)}}catch(r){return{type:"throw",arg:r}}}var b="suspendedStart";var y="suspendedYield";var x="executing";var A="completed";var E={};function Generator(){}function GeneratorFunction(){}function GeneratorFunctionPrototype(){}var M={};define(M,l,(function(){return this}));var L=Object.getPrototypeOf;var P=L&&L(L(values([])));if(P&&P!==i&&a.call(P,l)){M=P}var T=GeneratorFunctionPrototype.prototype=Generator.prototype=Object.create(M);GeneratorFunction.prototype=GeneratorFunctionPrototype;define(T,"constructor",GeneratorFunctionPrototype);define(GeneratorFunctionPrototype,"constructor",GeneratorFunction);GeneratorFunction.displayName=define(GeneratorFunctionPrototype,v,"GeneratorFunction");function defineIteratorMethods(r){["next","throw","return"].forEach((function(i){define(r,i,(function(r){return this._invoke(i,r)}))}))}r.isGeneratorFunction=function(r){var i=typeof r==="function"&&r.constructor;return i?i===GeneratorFunction||(i.displayName||i.name)==="GeneratorFunction":false};r.mark=function(r){if(Object.setPrototypeOf){Object.setPrototypeOf(r,GeneratorFunctionPrototype)}else{r.__proto__=GeneratorFunctionPrototype;define(r,v,"GeneratorFunction")}r.prototype=Object.create(T);return r};r.awrap=function(r){return{__await:r}};function AsyncIterator(r,i){function invoke(o,s,l,u){var v=tryCatch(r[o],r,s);if(v.type==="throw"){u(v.arg)}else{var b=v.arg;var y=b.value;if(y&&typeof y==="object"&&a.call(y,"__await")){return i.resolve(y.__await).then((function(r){invoke("next",r,l,u)}),(function(r){invoke("throw",r,l,u)}))}return i.resolve(y).then((function(r){b.value=r;l(b)}),(function(r){return invoke("throw",r,l,u)}))}}var o;function enqueue(r,a){function callInvokeWithMethodAndArg(){return new i((function(i,o){invoke(r,a,i,o)}))}return o=o?o.then(callInvokeWithMethodAndArg,callInvokeWithMethodAndArg):callInvokeWithMethodAndArg()}this._invoke=enqueue}defineIteratorMethods(AsyncIterator.prototype);define(AsyncIterator.prototype,u,(function(){return this}));r.AsyncIterator=AsyncIterator;r.async=function(i,a,o,s,l){if(l===void 0)l=Promise;var u=new AsyncIterator(wrap(i,a,o,s),l);return r.isGeneratorFunction(a)?u:u.next().then((function(r){return r.done?r.value:u.next()}))};function makeInvokeMethod(r,i,a){var o=b;return function invoke(s,l){if(o===x){throw new Error("Generator is already running")}if(o===A){if(s==="throw"){throw l}return doneResult()}a.method=s;a.arg=l;while(true){var u=a.delegate;if(u){var v=maybeInvokeDelegate(u,a);if(v){if(v===E)continue;return v}}if(a.method==="next"){a.sent=a._sent=a.arg}else if(a.method==="throw"){if(o===b){o=A;throw a.arg}a.dispatchException(a.arg)}else if(a.method==="return"){a.abrupt("return",a.arg)}o=x;var M=tryCatch(r,i,a);if(M.type==="normal"){o=a.done?A:y;if(M.arg===E){continue}return{value:M.arg,done:a.done}}else if(M.type==="throw"){o=A;a.method="throw";a.arg=M.arg}}}}function maybeInvokeDelegate(r,i){var a=r.iterator[i.method];if(a===o){i.delegate=null;if(i.method==="throw"){if(r.iterator["return"]){i.method="return";i.arg=o;maybeInvokeDelegate(r,i);if(i.method==="throw"){return E}}i.method="throw";i.arg=new TypeError("The iterator does not provide a 'throw' method")}return E}var s=tryCatch(a,r.iterator,i.arg);if(s.type==="throw"){i.method="throw";i.arg=s.arg;i.delegate=null;return E}var l=s.arg;if(!l){i.method="throw";i.arg=new TypeError("iterator result is not an object");i.delegate=null;return E}if(l.done){i[r.resultName]=l.value;i.next=r.nextLoc;if(i.method!=="return"){i.method="next";i.arg=o}}else{return l}i.delegate=null;return E}defineIteratorMethods(T);define(T,v,"Generator");define(T,l,(function(){return this}));define(T,"toString",(function(){return"[object Generator]"}));function pushTryEntry(r){var i={tryLoc:r[0]};if(1 in r){i.catchLoc=r[1]}if(2 in r){i.finallyLoc=r[2];i.afterLoc=r[3]}this.tryEntries.push(i)}function resetTryEntry(r){var i=r.completion||{};i.type="normal";delete i.arg;r.completion=i}function Context(r){this.tryEntries=[{tryLoc:"root"}];r.forEach(pushTryEntry,this);this.reset(true)}r.keys=function(r){var i=[];for(var a in r){i.push(a)}i.reverse();return function next(){while(i.length){var a=i.pop();if(a in r){next.value=a;next.done=false;return next}}next.done=true;return next}};function values(r){if(r){var i=r[l];if(i){return i.call(r)}if(typeof r.next==="function"){return r}if(!isNaN(r.length)){var s=-1,u=function next(){while(++s<r.length){if(a.call(r,s)){next.value=r[s];next.done=false;return next}}next.value=o;next.done=true;return next};return u.next=u}}return{next:doneResult}}r.values=values;function doneResult(){return{value:o,done:true}}Context.prototype={constructor:Context,reset:function(r){this.prev=0;this.next=0;this.sent=this._sent=o;this.done=false;this.delegate=null;this.method="next";this.arg=o;this.tryEntries.forEach(resetTryEntry);if(!r){for(var i in this){if(i.charAt(0)==="t"&&a.call(this,i)&&!isNaN(+i.slice(1))){this[i]=o}}}},stop:function(){this.done=true;var r=this.tryEntries[0];var i=r.completion;if(i.type==="throw"){throw i.arg}return this.rval},dispatchException:function(r){if(this.done){throw r}var i=this;function handle(a,s){u.type="throw";u.arg=r;i.next=a;if(s){i.method="next";i.arg=o}return!!s}for(var s=this.tryEntries.length-1;s>=0;--s){var l=this.tryEntries[s];var u=l.completion;if(l.tryLoc==="root"){return handle("end")}if(l.tryLoc<=this.prev){var v=a.call(l,"catchLoc");var b=a.call(l,"finallyLoc");if(v&&b){if(this.prev<l.catchLoc){return handle(l.catchLoc,true)}else if(this.prev<l.finallyLoc){return handle(l.finallyLoc)}}else if(v){if(this.prev<l.catchLoc){return handle(l.catchLoc,true)}}else if(b){if(this.prev<l.finallyLoc){return handle(l.finallyLoc)}}else{throw new Error("try statement without catch or finally")}}}},abrupt:function(r,i){for(var o=this.tryEntries.length-1;o>=0;--o){var s=this.tryEntries[o];if(s.tryLoc<=this.prev&&a.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var l=s;break}}if(l&&(r==="break"||r==="continue")&&l.tryLoc<=i&&i<=l.finallyLoc){l=null}var u=l?l.completion:{};u.type=r;u.arg=i;if(l){this.method="next";this.next=l.finallyLoc;return E}return this.complete(u)},complete:function(r,i){if(r.type==="throw"){throw r.arg}if(r.type==="break"||r.type==="continue"){this.next=r.arg}else if(r.type==="return"){this.rval=this.arg=r.arg;this.method="return";this.next="end"}else if(r.type==="normal"&&i){this.next=i}return E},finish:function(r){for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i];if(a.finallyLoc===r){this.complete(a.completion,a.afterLoc);resetTryEntry(a);return E}}},catch:function(r){for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i];if(a.tryLoc===r){var o=a.completion;if(o.type==="throw"){var s=o.arg;resetTryEntry(a)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(r,i,a){this.delegate={iterator:values(r),resultName:i,nextLoc:a};if(this.method==="next"){this.arg=o}return E}};return r}(true?r.exports:0);try{regeneratorRuntime=i}catch(r){if(typeof globalThis==="object"){globalThis.regeneratorRuntime=i}else{Function("r","regeneratorRuntime = r")(i)}}},2013:(r,i,a)=>{(function(r){r.parser=function(r,i){return new SAXParser(r,i)};r.SAXParser=SAXParser;r.SAXStream=SAXStream;r.createStream=createStream;r.MAX_BUFFER_LENGTH=64*1024;var i=["comment","sgmlDecl","textNode","tagName","doctype","procInstName","procInstBody","entity","attribName","attribValue","cdata","script"];r.EVENTS=["text","processinginstruction","sgmldeclaration","doctype","comment","opentagstart","attribute","opentag","closetag","opencdata","cdata","closecdata","error","end","ready","script","opennamespace","closenamespace"];function SAXParser(i,a){if(!(this instanceof SAXParser)){return new SAXParser(i,a)}var o=this;clearBuffers(o);o.q=o.c="";o.bufferCheckPosition=r.MAX_BUFFER_LENGTH;o.opt=a||{};o.opt.lowercase=o.opt.lowercase||o.opt.lowercasetags;o.looseCase=o.opt.lowercase?"toLowerCase":"toUpperCase";o.tags=[];o.closed=o.closedRoot=o.sawRoot=false;o.tag=o.error=null;o.strict=!!i;o.noscript=!!(i||o.opt.noscript);o.state=L.BEGIN;o.strictEntities=o.opt.strictEntities;o.ENTITIES=o.strictEntities?Object.create(r.XML_ENTITIES):Object.create(r.ENTITIES);o.attribList=[];if(o.opt.xmlns){o.ns=Object.create(y)}o.trackPosition=o.opt.position!==false;if(o.trackPosition){o.position=o.line=o.column=0}emit(o,"onready")}if(!Object.create){Object.create=function(r){function F(){}F.prototype=r;var i=new F;return i}}if(!Object.keys){Object.keys=function(r){var i=[];for(var a in r)if(r.hasOwnProperty(a))i.push(a);return i}}function checkBufferLength(a){var o=Math.max(r.MAX_BUFFER_LENGTH,10);var s=0;for(var l=0,u=i.length;l<u;l++){var v=a[i[l]].length;if(v>o){switch(i[l]){case"textNode":closeText(a);break;case"cdata":emitNode(a,"oncdata",a.cdata);a.cdata="";break;case"script":emitNode(a,"onscript",a.script);a.script="";break;default:error(a,"Max buffer length exceeded: "+i[l])}}s=Math.max(s,v)}var b=r.MAX_BUFFER_LENGTH-s;a.bufferCheckPosition=b+a.position}function clearBuffers(r){for(var a=0,o=i.length;a<o;a++){r[i[a]]=""}}function flushBuffers(r){closeText(r);if(r.cdata!==""){emitNode(r,"oncdata",r.cdata);r.cdata=""}if(r.script!==""){emitNode(r,"onscript",r.script);r.script=""}}SAXParser.prototype={end:function(){end(this)},write:write,resume:function(){this.error=null;return this},close:function(){return this.write(null)},flush:function(){flushBuffers(this)}};var o;try{o=a(2781).Stream}catch(r){o=function(){}}var s=r.EVENTS.filter((function(r){return r!=="error"&&r!=="end"}));function createStream(r,i){return new SAXStream(r,i)}function SAXStream(r,i){if(!(this instanceof SAXStream)){return new SAXStream(r,i)}o.apply(this);this._parser=new SAXParser(r,i);this.writable=true;this.readable=true;var a=this;this._parser.onend=function(){a.emit("end")};this._parser.onerror=function(r){a.emit("error",r);a._parser.error=null};this._decoder=null;s.forEach((function(r){Object.defineProperty(a,"on"+r,{get:function(){return a._parser["on"+r]},set:function(i){if(!i){a.removeAllListeners(r);a._parser["on"+r]=i;return i}a.on(r,i)},enumerable:true,configurable:false})}))}SAXStream.prototype=Object.create(o.prototype,{constructor:{value:SAXStream}});SAXStream.prototype.write=function(r){if(typeof Buffer==="function"&&typeof Buffer.isBuffer==="function"&&Buffer.isBuffer(r)){if(!this._decoder){var i=a(1576).StringDecoder;this._decoder=new i("utf8")}r=this._decoder.write(r)}this._parser.write(r.toString());this.emit("data",r);return true};SAXStream.prototype.end=function(r){if(r&&r.length){this.write(r)}this._parser.end();return true};SAXStream.prototype.on=function(r,i){var a=this;if(!a._parser["on"+r]&&s.indexOf(r)!==-1){a._parser["on"+r]=function(){var i=arguments.length===1?[arguments[0]]:Array.apply(null,arguments);i.splice(0,0,r);a.emit.apply(a,i)}}return o.prototype.on.call(a,r,i)};var l="[CDATA[";var u="DOCTYPE";var v="http://www.w3.org/XML/1998/namespace";var b="http://www.w3.org/2000/xmlns/";var y={xml:v,xmlns:b};var x=/[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;var A=/[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;var E=/[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/;var M=/[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;function isWhitespace(r){return r===" "||r==="\n"||r==="\r"||r==="\t"}function isQuote(r){return r==='"'||r==="'"}function isAttribEnd(r){return r===">"||isWhitespace(r)}function isMatch(r,i){return r.test(i)}function notMatch(r,i){return!isMatch(r,i)}var L=0;r.STATE={BEGIN:L++,BEGIN_WHITESPACE:L++,TEXT:L++,TEXT_ENTITY:L++,OPEN_WAKA:L++,SGML_DECL:L++,SGML_DECL_QUOTED:L++,DOCTYPE:L++,DOCTYPE_QUOTED:L++,DOCTYPE_DTD:L++,DOCTYPE_DTD_QUOTED:L++,COMMENT_STARTING:L++,COMMENT:L++,COMMENT_ENDING:L++,COMMENT_ENDED:L++,CDATA:L++,CDATA_ENDING:L++,CDATA_ENDING_2:L++,PROC_INST:L++,PROC_INST_BODY:L++,PROC_INST_ENDING:L++,OPEN_TAG:L++,OPEN_TAG_SLASH:L++,ATTRIB:L++,ATTRIB_NAME:L++,ATTRIB_NAME_SAW_WHITE:L++,ATTRIB_VALUE:L++,ATTRIB_VALUE_QUOTED:L++,ATTRIB_VALUE_CLOSED:L++,ATTRIB_VALUE_UNQUOTED:L++,ATTRIB_VALUE_ENTITY_Q:L++,ATTRIB_VALUE_ENTITY_U:L++,CLOSE_TAG:L++,CLOSE_TAG_SAW_WHITE:L++,SCRIPT:L++,SCRIPT_ENDING:L++};r.XML_ENTITIES={amp:"&",gt:">",lt:"<",quot:'"',apos:"'"};r.ENTITIES={amp:"&",gt:">",lt:"<",quot:'"',apos:"'",AElig:198,Aacute:193,Acirc:194,Agrave:192,Aring:197,Atilde:195,Auml:196,Ccedil:199,ETH:208,Eacute:201,Ecirc:202,Egrave:200,Euml:203,Iacute:205,Icirc:206,Igrave:204,Iuml:207,Ntilde:209,Oacute:211,Ocirc:212,Ograve:210,Oslash:216,Otilde:213,Ouml:214,THORN:222,Uacute:218,Ucirc:219,Ugrave:217,Uuml:220,Yacute:221,aacute:225,acirc:226,aelig:230,agrave:224,aring:229,atilde:227,auml:228,ccedil:231,eacute:233,ecirc:234,egrave:232,eth:240,euml:235,iacute:237,icirc:238,igrave:236,iuml:239,ntilde:241,oacute:243,ocirc:244,ograve:242,oslash:248,otilde:245,ouml:246,szlig:223,thorn:254,uacute:250,ucirc:251,ugrave:249,uuml:252,yacute:253,yuml:255,copy:169,reg:174,nbsp:160,iexcl:161,cent:162,pound:163,curren:164,yen:165,brvbar:166,sect:167,uml:168,ordf:170,laquo:171,not:172,shy:173,macr:175,deg:176,plusmn:177,sup1:185,sup2:178,sup3:179,acute:180,micro:181,para:182,middot:183,cedil:184,ordm:186,raquo:187,frac14:188,frac12:189,frac34:190,iquest:191,times:215,divide:247,OElig:338,oelig:339,Scaron:352,scaron:353,Yuml:376,fnof:402,circ:710,tilde:732,Alpha:913,Beta:914,Gamma:915,Delta:916,Epsilon:917,Zeta:918,Eta:919,Theta:920,Iota:921,Kappa:922,Lambda:923,Mu:924,Nu:925,Xi:926,Omicron:927,Pi:928,Rho:929,Sigma:931,Tau:932,Upsilon:933,Phi:934,Chi:935,Psi:936,Omega:937,alpha:945,beta:946,gamma:947,delta:948,epsilon:949,zeta:950,eta:951,theta:952,iota:953,kappa:954,lambda:955,mu:956,nu:957,xi:958,omicron:959,pi:960,rho:961,sigmaf:962,sigma:963,tau:964,upsilon:965,phi:966,chi:967,psi:968,omega:969,thetasym:977,upsih:978,piv:982,ensp:8194,emsp:8195,thinsp:8201,zwnj:8204,zwj:8205,lrm:8206,rlm:8207,ndash:8211,mdash:8212,lsquo:8216,rsquo:8217,sbquo:8218,ldquo:8220,rdquo:8221,bdquo:8222,dagger:8224,Dagger:8225,bull:8226,hellip:8230,permil:8240,prime:8242,Prime:8243,lsaquo:8249,rsaquo:8250,oline:8254,frasl:8260,euro:8364,image:8465,weierp:8472,real:8476,trade:8482,alefsym:8501,larr:8592,uarr:8593,rarr:8594,darr:8595,harr:8596,crarr:8629,lArr:8656,uArr:8657,rArr:8658,dArr:8659,hArr:8660,forall:8704,part:8706,exist:8707,empty:8709,nabla:8711,isin:8712,notin:8713,ni:8715,prod:8719,sum:8721,minus:8722,lowast:8727,radic:8730,prop:8733,infin:8734,ang:8736,and:8743,or:8744,cap:8745,cup:8746,int:8747,there4:8756,sim:8764,cong:8773,asymp:8776,ne:8800,equiv:8801,le:8804,ge:8805,sub:8834,sup:8835,nsub:8836,sube:8838,supe:8839,oplus:8853,otimes:8855,perp:8869,sdot:8901,lceil:8968,rceil:8969,lfloor:8970,rfloor:8971,lang:9001,rang:9002,loz:9674,spades:9824,clubs:9827,hearts:9829,diams:9830};Object.keys(r.ENTITIES).forEach((function(i){var a=r.ENTITIES[i];var o=typeof a==="number"?String.fromCharCode(a):a;r.ENTITIES[i]=o}));for(var P in r.STATE){r.STATE[r.STATE[P]]=P}L=r.STATE;function emit(r,i,a){r[i]&&r[i](a)}function emitNode(r,i,a){if(r.textNode)closeText(r);emit(r,i,a)}function closeText(r){r.textNode=textopts(r.opt,r.textNode);if(r.textNode)emit(r,"ontext",r.textNode);r.textNode=""}function textopts(r,i){if(r.trim)i=i.trim();if(r.normalize)i=i.replace(/\s+/g," ");return i}function error(r,i){closeText(r);if(r.trackPosition){i+="\nLine: "+r.line+"\nColumn: "+r.column+"\nChar: "+r.c}i=new Error(i);r.error=i;emit(r,"onerror",i);return r}function end(r){if(r.sawRoot&&!r.closedRoot)strictFail(r,"Unclosed root tag");if(r.state!==L.BEGIN&&r.state!==L.BEGIN_WHITESPACE&&r.state!==L.TEXT){error(r,"Unexpected end")}closeText(r);r.c="";r.closed=true;emit(r,"onend");SAXParser.call(r,r.strict,r.opt);return r}function strictFail(r,i){if(typeof r!=="object"||!(r instanceof SAXParser)){throw new Error("bad call to strictFail")}if(r.strict){error(r,i)}}function newTag(r){if(!r.strict)r.tagName=r.tagName[r.looseCase]();var i=r.tags[r.tags.length-1]||r;var a=r.tag={name:r.tagName,attributes:{}};if(r.opt.xmlns){a.ns=i.ns}r.attribList.length=0;emitNode(r,"onopentagstart",a)}function qname(r,i){var a=r.indexOf(":");var o=a<0?["",r]:r.split(":");var s=o[0];var l=o[1];if(i&&r==="xmlns"){s="xmlns";l=""}return{prefix:s,local:l}}function attrib(r){if(!r.strict){r.attribName=r.attribName[r.looseCase]()}if(r.attribList.indexOf(r.attribName)!==-1||r.tag.attributes.hasOwnProperty(r.attribName)){r.attribName=r.attribValue="";return}if(r.opt.xmlns){var i=qname(r.attribName,true);var a=i.prefix;var o=i.local;if(a==="xmlns"){if(o==="xml"&&r.attribValue!==v){strictFail(r,"xml: prefix must be bound to "+v+"\n"+"Actual: "+r.attribValue)}else if(o==="xmlns"&&r.attribValue!==b){strictFail(r,"xmlns: prefix must be bound to "+b+"\n"+"Actual: "+r.attribValue)}else{var s=r.tag;var l=r.tags[r.tags.length-1]||r;if(s.ns===l.ns){s.ns=Object.create(l.ns)}s.ns[o]=r.attribValue}}r.attribList.push([r.attribName,r.attribValue])}else{r.tag.attributes[r.attribName]=r.attribValue;emitNode(r,"onattribute",{name:r.attribName,value:r.attribValue})}r.attribName=r.attribValue=""}function openTag(r,i){if(r.opt.xmlns){var a=r.tag;var o=qname(r.tagName);a.prefix=o.prefix;a.local=o.local;a.uri=a.ns[o.prefix]||"";if(a.prefix&&!a.uri){strictFail(r,"Unbound namespace prefix: "+JSON.stringify(r.tagName));a.uri=o.prefix}var s=r.tags[r.tags.length-1]||r;if(a.ns&&s.ns!==a.ns){Object.keys(a.ns).forEach((function(i){emitNode(r,"onopennamespace",{prefix:i,uri:a.ns[i]})}))}for(var l=0,u=r.attribList.length;l<u;l++){var v=r.attribList[l];var b=v[0];var y=v[1];var x=qname(b,true);var A=x.prefix;var E=x.local;var M=A===""?"":a.ns[A]||"";var P={name:b,value:y,prefix:A,local:E,uri:M};if(A&&A!=="xmlns"&&!M){strictFail(r,"Unbound namespace prefix: "+JSON.stringify(A));P.uri=A}r.tag.attributes[b]=P;emitNode(r,"onattribute",P)}r.attribList.length=0}r.tag.isSelfClosing=!!i;r.sawRoot=true;r.tags.push(r.tag);emitNode(r,"onopentag",r.tag);if(!i){if(!r.noscript&&r.tagName.toLowerCase()==="script"){r.state=L.SCRIPT}else{r.state=L.TEXT}r.tag=null;r.tagName=""}r.attribName=r.attribValue="";r.attribList.length=0}function closeTag(r){if(!r.tagName){strictFail(r,"Weird empty close tag.");r.textNode+="</>";r.state=L.TEXT;return}if(r.script){if(r.tagName!=="script"){r.script+="</"+r.tagName+">";r.tagName="";r.state=L.SCRIPT;return}emitNode(r,"onscript",r.script);r.script=""}var i=r.tags.length;var a=r.tagName;if(!r.strict){a=a[r.looseCase]()}var o=a;while(i--){var s=r.tags[i];if(s.name!==o){strictFail(r,"Unexpected close tag")}else{break}}if(i<0){strictFail(r,"Unmatched closing tag: "+r.tagName);r.textNode+="</"+r.tagName+">";r.state=L.TEXT;return}r.tagName=a;var l=r.tags.length;while(l-- >i){var u=r.tag=r.tags.pop();r.tagName=r.tag.name;emitNode(r,"onclosetag",r.tagName);var v={};for(var b in u.ns){v[b]=u.ns[b]}var y=r.tags[r.tags.length-1]||r;if(r.opt.xmlns&&u.ns!==y.ns){Object.keys(u.ns).forEach((function(i){var a=u.ns[i];emitNode(r,"onclosenamespace",{prefix:i,uri:a})}))}}if(i===0)r.closedRoot=true;r.tagName=r.attribValue=r.attribName="";r.attribList.length=0;r.state=L.TEXT}function parseEntity(r){var i=r.entity;var a=i.toLowerCase();var o;var s="";if(r.ENTITIES[i]){return r.ENTITIES[i]}if(r.ENTITIES[a]){return r.ENTITIES[a]}i=a;if(i.charAt(0)==="#"){if(i.charAt(1)==="x"){i=i.slice(2);o=parseInt(i,16);s=o.toString(16)}else{i=i.slice(1);o=parseInt(i,10);s=o.toString(10)}}i=i.replace(/^0+/,"");if(isNaN(o)||s.toLowerCase()!==i){strictFail(r,"Invalid character entity");return"&"+r.entity+";"}return String.fromCodePoint(o)}function beginWhiteSpace(r,i){if(i==="<"){r.state=L.OPEN_WAKA;r.startTagPosition=r.position}else if(!isWhitespace(i)){strictFail(r,"Non-whitespace before first tag.");r.textNode=i;r.state=L.TEXT}}function charAt(r,i){var a="";if(i<r.length){a=r.charAt(i)}return a}function write(r){var i=this;if(this.error){throw this.error}if(i.closed){return error(i,"Cannot write after close. Assign an onready handler.")}if(r===null){return end(i)}if(typeof r==="object"){r=r.toString()}var a=0;var o="";while(true){o=charAt(r,a++);i.c=o;if(!o){break}if(i.trackPosition){i.position++;if(o==="\n"){i.line++;i.column=0}else{i.column++}}switch(i.state){case L.BEGIN:i.state=L.BEGIN_WHITESPACE;if(o==="\ufeff"){continue}beginWhiteSpace(i,o);continue;case L.BEGIN_WHITESPACE:beginWhiteSpace(i,o);continue;case L.TEXT:if(i.sawRoot&&!i.closedRoot){var s=a-1;while(o&&o!=="<"&&o!=="&"){o=charAt(r,a++);if(o&&i.trackPosition){i.position++;if(o==="\n"){i.line++;i.column=0}else{i.column++}}}i.textNode+=r.substring(s,a-1)}if(o==="<"&&!(i.sawRoot&&i.closedRoot&&!i.strict)){i.state=L.OPEN_WAKA;i.startTagPosition=i.position}else{if(!isWhitespace(o)&&(!i.sawRoot||i.closedRoot)){strictFail(i,"Text data outside of root node.")}if(o==="&"){i.state=L.TEXT_ENTITY}else{i.textNode+=o}}continue;case L.SCRIPT:if(o==="<"){i.state=L.SCRIPT_ENDING}else{i.script+=o}continue;case L.SCRIPT_ENDING:if(o==="/"){i.state=L.CLOSE_TAG}else{i.script+="<"+o;i.state=L.SCRIPT}continue;case L.OPEN_WAKA:if(o==="!"){i.state=L.SGML_DECL;i.sgmlDecl=""}else if(isWhitespace(o)){}else if(isMatch(x,o)){i.state=L.OPEN_TAG;i.tagName=o}else if(o==="/"){i.state=L.CLOSE_TAG;i.tagName=""}else if(o==="?"){i.state=L.PROC_INST;i.procInstName=i.procInstBody=""}else{strictFail(i,"Unencoded <");if(i.startTagPosition+1<i.position){var v=i.position-i.startTagPosition;o=new Array(v).join(" ")+o}i.textNode+="<"+o;i.state=L.TEXT}continue;case L.SGML_DECL:if((i.sgmlDecl+o).toUpperCase()===l){emitNode(i,"onopencdata");i.state=L.CDATA;i.sgmlDecl="";i.cdata=""}else if(i.sgmlDecl+o==="--"){i.state=L.COMMENT;i.comment="";i.sgmlDecl=""}else if((i.sgmlDecl+o).toUpperCase()===u){i.state=L.DOCTYPE;if(i.doctype||i.sawRoot){strictFail(i,"Inappropriately located doctype declaration")}i.doctype="";i.sgmlDecl=""}else if(o===">"){emitNode(i,"onsgmldeclaration",i.sgmlDecl);i.sgmlDecl="";i.state=L.TEXT}else if(isQuote(o)){i.state=L.SGML_DECL_QUOTED;i.sgmlDecl+=o}else{i.sgmlDecl+=o}continue;case L.SGML_DECL_QUOTED:if(o===i.q){i.state=L.SGML_DECL;i.q=""}i.sgmlDecl+=o;continue;case L.DOCTYPE:if(o===">"){i.state=L.TEXT;emitNode(i,"ondoctype",i.doctype);i.doctype=true}else{i.doctype+=o;if(o==="["){i.state=L.DOCTYPE_DTD}else if(isQuote(o)){i.state=L.DOCTYPE_QUOTED;i.q=o}}continue;case L.DOCTYPE_QUOTED:i.doctype+=o;if(o===i.q){i.q="";i.state=L.DOCTYPE}continue;case L.DOCTYPE_DTD:i.doctype+=o;if(o==="]"){i.state=L.DOCTYPE}else if(isQuote(o)){i.state=L.DOCTYPE_DTD_QUOTED;i.q=o}continue;case L.DOCTYPE_DTD_QUOTED:i.doctype+=o;if(o===i.q){i.state=L.DOCTYPE_DTD;i.q=""}continue;case L.COMMENT:if(o==="-"){i.state=L.COMMENT_ENDING}else{i.comment+=o}continue;case L.COMMENT_ENDING:if(o==="-"){i.state=L.COMMENT_ENDED;i.comment=textopts(i.opt,i.comment);if(i.comment){emitNode(i,"oncomment",i.comment)}i.comment=""}else{i.comment+="-"+o;i.state=L.COMMENT}continue;case L.COMMENT_ENDED:if(o!==">"){strictFail(i,"Malformed comment");i.comment+="--"+o;i.state=L.COMMENT}else{i.state=L.TEXT}continue;case L.CDATA:if(o==="]"){i.state=L.CDATA_ENDING}else{i.cdata+=o}continue;case L.CDATA_ENDING:if(o==="]"){i.state=L.CDATA_ENDING_2}else{i.cdata+="]"+o;i.state=L.CDATA}continue;case L.CDATA_ENDING_2:if(o===">"){if(i.cdata){emitNode(i,"oncdata",i.cdata)}emitNode(i,"onclosecdata");i.cdata="";i.state=L.TEXT}else if(o==="]"){i.cdata+="]"}else{i.cdata+="]]"+o;i.state=L.CDATA}continue;case L.PROC_INST:if(o==="?"){i.state=L.PROC_INST_ENDING}else if(isWhitespace(o)){i.state=L.PROC_INST_BODY}else{i.procInstName+=o}continue;case L.PROC_INST_BODY:if(!i.procInstBody&&isWhitespace(o)){continue}else if(o==="?"){i.state=L.PROC_INST_ENDING}else{i.procInstBody+=o}continue;case L.PROC_INST_ENDING:if(o===">"){emitNode(i,"onprocessinginstruction",{name:i.procInstName,body:i.procInstBody});i.procInstName=i.procInstBody="";i.state=L.TEXT}else{i.procInstBody+="?"+o;i.state=L.PROC_INST_BODY}continue;case L.OPEN_TAG:if(isMatch(A,o)){i.tagName+=o}else{newTag(i);if(o===">"){openTag(i)}else if(o==="/"){i.state=L.OPEN_TAG_SLASH}else{if(!isWhitespace(o)){strictFail(i,"Invalid character in tag name")}i.state=L.ATTRIB}}continue;case L.OPEN_TAG_SLASH:if(o===">"){openTag(i,true);closeTag(i)}else{strictFail(i,"Forward-slash in opening tag not followed by >");i.state=L.ATTRIB}continue;case L.ATTRIB:if(isWhitespace(o)){continue}else if(o===">"){openTag(i)}else if(o==="/"){i.state=L.OPEN_TAG_SLASH}else if(isMatch(x,o)){i.attribName=o;i.attribValue="";i.state=L.ATTRIB_NAME}else{strictFail(i,"Invalid attribute name")}continue;case L.ATTRIB_NAME:if(o==="="){i.state=L.ATTRIB_VALUE}else if(o===">"){strictFail(i,"Attribute without value");i.attribValue=i.attribName;attrib(i);openTag(i)}else if(isWhitespace(o)){i.state=L.ATTRIB_NAME_SAW_WHITE}else if(isMatch(A,o)){i.attribName+=o}else{strictFail(i,"Invalid attribute name")}continue;case L.ATTRIB_NAME_SAW_WHITE:if(o==="="){i.state=L.ATTRIB_VALUE}else if(isWhitespace(o)){continue}else{strictFail(i,"Attribute without value");i.tag.attributes[i.attribName]="";i.attribValue="";emitNode(i,"onattribute",{name:i.attribName,value:""});i.attribName="";if(o===">"){openTag(i)}else if(isMatch(x,o)){i.attribName=o;i.state=L.ATTRIB_NAME}else{strictFail(i,"Invalid attribute name");i.state=L.ATTRIB}}continue;case L.ATTRIB_VALUE:if(isWhitespace(o)){continue}else if(isQuote(o)){i.q=o;i.state=L.ATTRIB_VALUE_QUOTED}else{strictFail(i,"Unquoted attribute value");i.state=L.ATTRIB_VALUE_UNQUOTED;i.attribValue=o}continue;case L.ATTRIB_VALUE_QUOTED:if(o!==i.q){if(o==="&"){i.state=L.ATTRIB_VALUE_ENTITY_Q}else{i.attribValue+=o}continue}attrib(i);i.q="";i.state=L.ATTRIB_VALUE_CLOSED;continue;case L.ATTRIB_VALUE_CLOSED:if(isWhitespace(o)){i.state=L.ATTRIB}else if(o===">"){openTag(i)}else if(o==="/"){i.state=L.OPEN_TAG_SLASH}else if(isMatch(x,o)){strictFail(i,"No whitespace between attributes");i.attribName=o;i.attribValue="";i.state=L.ATTRIB_NAME}else{strictFail(i,"Invalid attribute name")}continue;case L.ATTRIB_VALUE_UNQUOTED:if(!isAttribEnd(o)){if(o==="&"){i.state=L.ATTRIB_VALUE_ENTITY_U}else{i.attribValue+=o}continue}attrib(i);if(o===">"){openTag(i)}else{i.state=L.ATTRIB}continue;case L.CLOSE_TAG:if(!i.tagName){if(isWhitespace(o)){continue}else if(notMatch(x,o)){if(i.script){i.script+="</"+o;i.state=L.SCRIPT}else{strictFail(i,"Invalid tagname in closing tag.")}}else{i.tagName=o}}else if(o===">"){closeTag(i)}else if(isMatch(A,o)){i.tagName+=o}else if(i.script){i.script+="</"+i.tagName;i.tagName="";i.state=L.SCRIPT}else{if(!isWhitespace(o)){strictFail(i,"Invalid tagname in closing tag")}i.state=L.CLOSE_TAG_SAW_WHITE}continue;case L.CLOSE_TAG_SAW_WHITE:if(isWhitespace(o)){continue}if(o===">"){closeTag(i)}else{strictFail(i,"Invalid characters in closing tag")}continue;case L.TEXT_ENTITY:case L.ATTRIB_VALUE_ENTITY_Q:case L.ATTRIB_VALUE_ENTITY_U:var b;var y;switch(i.state){case L.TEXT_ENTITY:b=L.TEXT;y="textNode";break;case L.ATTRIB_VALUE_ENTITY_Q:b=L.ATTRIB_VALUE_QUOTED;y="attribValue";break;case L.ATTRIB_VALUE_ENTITY_U:b=L.ATTRIB_VALUE_UNQUOTED;y="attribValue";break}if(o===";"){i[y]+=parseEntity(i);i.entity="";i.state=b}else if(isMatch(i.entity.length?M:E,o)){i.entity+=o}else{strictFail(i,"Invalid character in entity name");i[y]+="&"+i.entity+o;i.entity="";i.state=b}continue;default:throw new Error(i,"Unknown state: "+i.state)}}if(i.position>=i.bufferCheckPosition){checkBufferLength(i)}return i}
/*! http://mths.be/fromcodepoint v0.1.0 by @mathias */if(!String.fromCodePoint){(function(){var r=String.fromCharCode;var i=Math.floor;var fromCodePoint=function(){var a=16384;var o=[];var s;var l;var u=-1;var v=arguments.length;if(!v){return""}var b="";while(++u<v){var y=Number(arguments[u]);if(!isFinite(y)||y<0||y>1114111||i(y)!==y){throw RangeError("Invalid code point: "+y)}if(y<=65535){o.push(y)}else{y-=65536;s=(y>>10)+55296;l=y%1024+56320;o.push(s,l)}if(u+1===v||o.length>a){b+=r.apply(null,o);o.length=0}}return b};if(Object.defineProperty){Object.defineProperty(String,"fromCodePoint",{value:fromCodePoint,configurable:true,writable:true})}else{String.fromCodePoint=fromCodePoint}})()}})(false?0:i)},1997:(r,i)=>{"use strict";Object.defineProperty(i,"__esModule",{value:true});i.clone=clone;i.addLast=addLast;i.addFirst=addFirst;i.removeLast=removeLast;i.removeFirst=removeFirst;i.insert=insert;i.removeAt=removeAt;i.replaceAt=replaceAt;i.getIn=getIn;i.set=set;i.setIn=setIn;i.update=update;i.updateIn=updateIn;i.merge=merge;i.mergeDeep=mergeDeep;i.mergeIn=mergeIn;i.omit=omit;i.addDefaults=addDefaults;i["default"]=void 0;
/*!
 * Timm
 *
 * Immutability helpers with fast reads and acceptable writes.
 *
 * @copyright Guillermo Grau Panea 2016
 * @license MIT
 */const a="INVALID_ARGS";const o=process.env.NODE_ENV!=="production";function throwStr(r){throw new Error(r)}function getKeysAndSymbols(r){const i=Object.keys(r);if(Object.getOwnPropertySymbols){return i.concat(Object.getOwnPropertySymbols(r))}return i}const s={}.hasOwnProperty;function clone(r){if(Array.isArray(r))return r.slice();const i=r;const a=getKeysAndSymbols(i);const o={};for(let r=0;r<a.length;r++){const s=a[r];o[s]=i[s]}return o}function isObject(r){return r!=null&&typeof r==="object"}function addLast(r,i){if(Array.isArray(i))return r.concat(i);return r.concat([i])}function addFirst(r,i){if(Array.isArray(i))return i.concat(r);return[i].concat(r)}function removeLast(r){if(!r.length)return r;return r.slice(0,r.length-1)}function removeFirst(r){if(!r.length)return r;return r.slice(1)}function insert(r,i,a){return r.slice(0,i).concat(Array.isArray(a)?a:[a]).concat(r.slice(i))}function removeAt(r,i){if(i>=r.length||i<0)return r;return r.slice(0,i).concat(r.slice(i+1))}function replaceAt(r,i,a){if(r[i]===a)return r;const o=r.length;const s=Array(o);for(let i=0;i<o;i++){s[i]=r[i]}s[i]=a;return s}function getIn(r,i){if(!Array.isArray(i)){throwStr(o?"A path array should be provided when calling getIn()":a)}if(r==null)return undefined;let s=r;for(let r=0;r<i.length;r++){const a=i[r];s=s!=null?s[a]:undefined;if(s===undefined)return s}return s}function set(r,i,a){let o=r;if(o==null)o=typeof i==="number"?[]:{};if(o[i]===a)return o;const s=clone(o);s[i]=a;return s}function setIn(r,i,a){if(!i.length)return a;return doSetIn(r,i,a,0)}function doSetIn(r,i,a,o){let s;const l=i[o];if(o===i.length-1){s=a}else{const u=isObject(r)&&isObject(r[l])?r[l]:typeof i[o+1]==="number"?[]:{};s=doSetIn(u,i,a,o+1)}return set(r,l,s)}function update(r,i,a){const o=r==null?undefined:r[i];const s=a(o);return set(r,i,s)}function updateIn(r,i,a){const o=getIn(r,i);const s=a(o);return setIn(r,i,s)}function merge(r,i,a,o,s,l,...u){return u.length?doMerge.call(null,false,false,r,i,a,o,s,l,...u):doMerge(false,false,r,i,a,o,s,l)}function mergeDeep(r,i,a,o,s,l,...u){return u.length?doMerge.call(null,false,true,r,i,a,o,s,l,...u):doMerge(false,true,r,i,a,o,s,l)}function mergeIn(r,i,a,o,s,l,u,...v){let b=getIn(r,i);if(b==null)b={};let y;if(v.length){y=doMerge.call(null,false,false,b,a,o,s,l,u,...v)}else{y=doMerge(false,false,b,a,o,s,l,u)}return setIn(r,i,y)}function omit(r,i){const a=Array.isArray(i)?i:[i];let o=false;for(let i=0;i<a.length;i++){if(s.call(r,a[i])){o=true;break}}if(!o)return r;const l={};const u=getKeysAndSymbols(r);for(let i=0;i<u.length;i++){const o=u[i];if(a.indexOf(o)>=0)continue;l[o]=r[o]}return l}function addDefaults(r,i,a,o,s,l,...u){return u.length?doMerge.call(null,true,false,r,i,a,o,s,l,...u):doMerge(true,false,r,i,a,o,s,l)}function doMerge(r,i,s,...l){let u=s;if(!(u!=null)){throwStr(o?"At least one object should be provided to merge()":a)}let v=false;for(let a=0;a<l.length;a++){const o=l[a];if(o==null)continue;const s=getKeysAndSymbols(o);if(!s.length)continue;for(let a=0;a<=s.length;a++){const l=s[a];if(r&&u[l]!==undefined)continue;let b=o[l];if(i&&isObject(u[l])&&isObject(b)){b=doMerge(r,i,u[l],b)}if(b===undefined||b===u[l])continue;if(!v){v=true;u=clone(u)}u[l]=b}}return u}const l={clone:clone,addLast:addLast,addFirst:addFirst,removeLast:removeLast,removeFirst:removeFirst,insert:insert,removeAt:removeAt,replaceAt:replaceAt,getIn:getIn,set:set,setIn:setIn,update:update,updateIn:updateIn,merge:merge,mergeDeep:mergeDeep,mergeIn:mergeIn,omit:omit,addDefaults:addDefaults};var u=l;i["default"]=u},3959:r=>{(function(i){var a=/^\s+/,o=/\s+$/,s=0,l=i.round,u=i.min,v=i.max,b=i.random;function tinycolor(r,i){r=r?r:"";i=i||{};if(r instanceof tinycolor){return r}if(!(this instanceof tinycolor)){return new tinycolor(r,i)}var a=inputToRGB(r);this._originalInput=r,this._r=a.r,this._g=a.g,this._b=a.b,this._a=a.a,this._roundA=l(100*this._a)/100,this._format=i.format||a.format;this._gradientType=i.gradientType;if(this._r<1){this._r=l(this._r)}if(this._g<1){this._g=l(this._g)}if(this._b<1){this._b=l(this._b)}this._ok=a.ok;this._tc_id=s++}tinycolor.prototype={isDark:function(){return this.getBrightness()<128},isLight:function(){return!this.isDark()},isValid:function(){return this._ok},getOriginalInput:function(){return this._originalInput},getFormat:function(){return this._format},getAlpha:function(){return this._a},getBrightness:function(){var r=this.toRgb();return(r.r*299+r.g*587+r.b*114)/1e3},getLuminance:function(){var r=this.toRgb();var a,o,s,l,u,v;a=r.r/255;o=r.g/255;s=r.b/255;if(a<=.03928){l=a/12.92}else{l=i.pow((a+.055)/1.055,2.4)}if(o<=.03928){u=o/12.92}else{u=i.pow((o+.055)/1.055,2.4)}if(s<=.03928){v=s/12.92}else{v=i.pow((s+.055)/1.055,2.4)}return.2126*l+.7152*u+.0722*v},setAlpha:function(r){this._a=boundAlpha(r);this._roundA=l(100*this._a)/100;return this},toHsv:function(){var r=rgbToHsv(this._r,this._g,this._b);return{h:r.h*360,s:r.s,v:r.v,a:this._a}},toHsvString:function(){var r=rgbToHsv(this._r,this._g,this._b);var i=l(r.h*360),a=l(r.s*100),o=l(r.v*100);return this._a==1?"hsv("+i+", "+a+"%, "+o+"%)":"hsva("+i+", "+a+"%, "+o+"%, "+this._roundA+")"},toHsl:function(){var r=rgbToHsl(this._r,this._g,this._b);return{h:r.h*360,s:r.s,l:r.l,a:this._a}},toHslString:function(){var r=rgbToHsl(this._r,this._g,this._b);var i=l(r.h*360),a=l(r.s*100),o=l(r.l*100);return this._a==1?"hsl("+i+", "+a+"%, "+o+"%)":"hsla("+i+", "+a+"%, "+o+"%, "+this._roundA+")"},toHex:function(r){return rgbToHex(this._r,this._g,this._b,r)},toHexString:function(r){return"#"+this.toHex(r)},toHex8:function(r){return rgbaToHex(this._r,this._g,this._b,this._a,r)},toHex8String:function(r){return"#"+this.toHex8(r)},toRgb:function(){return{r:l(this._r),g:l(this._g),b:l(this._b),a:this._a}},toRgbString:function(){return this._a==1?"rgb("+l(this._r)+", "+l(this._g)+", "+l(this._b)+")":"rgba("+l(this._r)+", "+l(this._g)+", "+l(this._b)+", "+this._roundA+")"},toPercentageRgb:function(){return{r:l(bound01(this._r,255)*100)+"%",g:l(bound01(this._g,255)*100)+"%",b:l(bound01(this._b,255)*100)+"%",a:this._a}},toPercentageRgbString:function(){return this._a==1?"rgb("+l(bound01(this._r,255)*100)+"%, "+l(bound01(this._g,255)*100)+"%, "+l(bound01(this._b,255)*100)+"%)":"rgba("+l(bound01(this._r,255)*100)+"%, "+l(bound01(this._g,255)*100)+"%, "+l(bound01(this._b,255)*100)+"%, "+this._roundA+")"},toName:function(){if(this._a===0){return"transparent"}if(this._a<1){return false}return x[rgbToHex(this._r,this._g,this._b,true)]||false},toFilter:function(r){var i="#"+rgbaToArgbHex(this._r,this._g,this._b,this._a);var a=i;var o=this._gradientType?"GradientType = 1, ":"";if(r){var s=tinycolor(r);a="#"+rgbaToArgbHex(s._r,s._g,s._b,s._a)}return"progid:DXImageTransform.Microsoft.gradient("+o+"startColorstr="+i+",endColorstr="+a+")"},toString:function(r){var i=!!r;r=r||this._format;var a=false;var o=this._a<1&&this._a>=0;var s=!i&&o&&(r==="hex"||r==="hex6"||r==="hex3"||r==="hex4"||r==="hex8"||r==="name");if(s){if(r==="name"&&this._a===0){return this.toName()}return this.toRgbString()}if(r==="rgb"){a=this.toRgbString()}if(r==="prgb"){a=this.toPercentageRgbString()}if(r==="hex"||r==="hex6"){a=this.toHexString()}if(r==="hex3"){a=this.toHexString(true)}if(r==="hex4"){a=this.toHex8String(true)}if(r==="hex8"){a=this.toHex8String()}if(r==="name"){a=this.toName()}if(r==="hsl"){a=this.toHslString()}if(r==="hsv"){a=this.toHsvString()}return a||this.toHexString()},clone:function(){return tinycolor(this.toString())},_applyModification:function(r,i){var a=r.apply(null,[this].concat([].slice.call(i)));this._r=a._r;this._g=a._g;this._b=a._b;this.setAlpha(a._a);return this},lighten:function(){return this._applyModification(lighten,arguments)},brighten:function(){return this._applyModification(brighten,arguments)},darken:function(){return this._applyModification(darken,arguments)},desaturate:function(){return this._applyModification(desaturate,arguments)},saturate:function(){return this._applyModification(saturate,arguments)},greyscale:function(){return this._applyModification(greyscale,arguments)},spin:function(){return this._applyModification(spin,arguments)},_applyCombination:function(r,i){return r.apply(null,[this].concat([].slice.call(i)))},analogous:function(){return this._applyCombination(analogous,arguments)},complement:function(){return this._applyCombination(complement,arguments)},monochromatic:function(){return this._applyCombination(monochromatic,arguments)},splitcomplement:function(){return this._applyCombination(splitcomplement,arguments)},triad:function(){return this._applyCombination(triad,arguments)},tetrad:function(){return this._applyCombination(tetrad,arguments)}};tinycolor.fromRatio=function(r,i){if(typeof r=="object"){var a={};for(var o in r){if(r.hasOwnProperty(o)){if(o==="a"){a[o]=r[o]}else{a[o]=convertToPercentage(r[o])}}}r=a}return tinycolor(r,i)};function inputToRGB(r){var i={r:0,g:0,b:0};var a=1;var o=null;var s=null;var l=null;var b=false;var y=false;if(typeof r=="string"){r=stringInputToObject(r)}if(typeof r=="object"){if(isValidCSSUnit(r.r)&&isValidCSSUnit(r.g)&&isValidCSSUnit(r.b)){i=rgbToRgb(r.r,r.g,r.b);b=true;y=String(r.r).substr(-1)==="%"?"prgb":"rgb"}else if(isValidCSSUnit(r.h)&&isValidCSSUnit(r.s)&&isValidCSSUnit(r.v)){o=convertToPercentage(r.s);s=convertToPercentage(r.v);i=hsvToRgb(r.h,o,s);b=true;y="hsv"}else if(isValidCSSUnit(r.h)&&isValidCSSUnit(r.s)&&isValidCSSUnit(r.l)){o=convertToPercentage(r.s);l=convertToPercentage(r.l);i=hslToRgb(r.h,o,l);b=true;y="hsl"}if(r.hasOwnProperty("a")){a=r.a}}a=boundAlpha(a);return{ok:b,format:r.format||y,r:u(255,v(i.r,0)),g:u(255,v(i.g,0)),b:u(255,v(i.b,0)),a:a}}function rgbToRgb(r,i,a){return{r:bound01(r,255)*255,g:bound01(i,255)*255,b:bound01(a,255)*255}}function rgbToHsl(r,i,a){r=bound01(r,255);i=bound01(i,255);a=bound01(a,255);var o=v(r,i,a),s=u(r,i,a);var l,b,y=(o+s)/2;if(o==s){l=b=0}else{var x=o-s;b=y>.5?x/(2-o-s):x/(o+s);switch(o){case r:l=(i-a)/x+(i<a?6:0);break;case i:l=(a-r)/x+2;break;case a:l=(r-i)/x+4;break}l/=6}return{h:l,s:b,l:y}}function hslToRgb(r,i,a){var o,s,l;r=bound01(r,360);i=bound01(i,100);a=bound01(a,100);function hue2rgb(r,i,a){if(a<0)a+=1;if(a>1)a-=1;if(a<1/6)return r+(i-r)*6*a;if(a<1/2)return i;if(a<2/3)return r+(i-r)*(2/3-a)*6;return r}if(i===0){o=s=l=a}else{var u=a<.5?a*(1+i):a+i-a*i;var v=2*a-u;o=hue2rgb(v,u,r+1/3);s=hue2rgb(v,u,r);l=hue2rgb(v,u,r-1/3)}return{r:o*255,g:s*255,b:l*255}}function rgbToHsv(r,i,a){r=bound01(r,255);i=bound01(i,255);a=bound01(a,255);var o=v(r,i,a),s=u(r,i,a);var l,b,y=o;var x=o-s;b=o===0?0:x/o;if(o==s){l=0}else{switch(o){case r:l=(i-a)/x+(i<a?6:0);break;case i:l=(a-r)/x+2;break;case a:l=(r-i)/x+4;break}l/=6}return{h:l,s:b,v:y}}function hsvToRgb(r,a,o){r=bound01(r,360)*6;a=bound01(a,100);o=bound01(o,100);var s=i.floor(r),l=r-s,u=o*(1-a),v=o*(1-l*a),b=o*(1-(1-l)*a),y=s%6,x=[o,v,u,u,b,o][y],A=[b,o,o,v,u,u][y],E=[u,u,b,o,o,v][y];return{r:x*255,g:A*255,b:E*255}}function rgbToHex(r,i,a,o){var s=[pad2(l(r).toString(16)),pad2(l(i).toString(16)),pad2(l(a).toString(16))];if(o&&s[0].charAt(0)==s[0].charAt(1)&&s[1].charAt(0)==s[1].charAt(1)&&s[2].charAt(0)==s[2].charAt(1)){return s[0].charAt(0)+s[1].charAt(0)+s[2].charAt(0)}return s.join("")}function rgbaToHex(r,i,a,o,s){var u=[pad2(l(r).toString(16)),pad2(l(i).toString(16)),pad2(l(a).toString(16)),pad2(convertDecimalToHex(o))];if(s&&u[0].charAt(0)==u[0].charAt(1)&&u[1].charAt(0)==u[1].charAt(1)&&u[2].charAt(0)==u[2].charAt(1)&&u[3].charAt(0)==u[3].charAt(1)){return u[0].charAt(0)+u[1].charAt(0)+u[2].charAt(0)+u[3].charAt(0)}return u.join("")}function rgbaToArgbHex(r,i,a,o){var s=[pad2(convertDecimalToHex(o)),pad2(l(r).toString(16)),pad2(l(i).toString(16)),pad2(l(a).toString(16))];return s.join("")}tinycolor.equals=function(r,i){if(!r||!i){return false}return tinycolor(r).toRgbString()==tinycolor(i).toRgbString()};tinycolor.random=function(){return tinycolor.fromRatio({r:b(),g:b(),b:b()})};function desaturate(r,i){i=i===0?0:i||10;var a=tinycolor(r).toHsl();a.s-=i/100;a.s=clamp01(a.s);return tinycolor(a)}function saturate(r,i){i=i===0?0:i||10;var a=tinycolor(r).toHsl();a.s+=i/100;a.s=clamp01(a.s);return tinycolor(a)}function greyscale(r){return tinycolor(r).desaturate(100)}function lighten(r,i){i=i===0?0:i||10;var a=tinycolor(r).toHsl();a.l+=i/100;a.l=clamp01(a.l);return tinycolor(a)}function brighten(r,i){i=i===0?0:i||10;var a=tinycolor(r).toRgb();a.r=v(0,u(255,a.r-l(255*-(i/100))));a.g=v(0,u(255,a.g-l(255*-(i/100))));a.b=v(0,u(255,a.b-l(255*-(i/100))));return tinycolor(a)}function darken(r,i){i=i===0?0:i||10;var a=tinycolor(r).toHsl();a.l-=i/100;a.l=clamp01(a.l);return tinycolor(a)}function spin(r,i){var a=tinycolor(r).toHsl();var o=(a.h+i)%360;a.h=o<0?360+o:o;return tinycolor(a)}function complement(r){var i=tinycolor(r).toHsl();i.h=(i.h+180)%360;return tinycolor(i)}function triad(r){var i=tinycolor(r).toHsl();var a=i.h;return[tinycolor(r),tinycolor({h:(a+120)%360,s:i.s,l:i.l}),tinycolor({h:(a+240)%360,s:i.s,l:i.l})]}function tetrad(r){var i=tinycolor(r).toHsl();var a=i.h;return[tinycolor(r),tinycolor({h:(a+90)%360,s:i.s,l:i.l}),tinycolor({h:(a+180)%360,s:i.s,l:i.l}),tinycolor({h:(a+270)%360,s:i.s,l:i.l})]}function splitcomplement(r){var i=tinycolor(r).toHsl();var a=i.h;return[tinycolor(r),tinycolor({h:(a+72)%360,s:i.s,l:i.l}),tinycolor({h:(a+216)%360,s:i.s,l:i.l})]}function analogous(r,i,a){i=i||6;a=a||30;var o=tinycolor(r).toHsl();var s=360/a;var l=[tinycolor(r)];for(o.h=(o.h-(s*i>>1)+720)%360;--i;){o.h=(o.h+s)%360;l.push(tinycolor(o))}return l}function monochromatic(r,i){i=i||6;var a=tinycolor(r).toHsv();var o=a.h,s=a.s,l=a.v;var u=[];var v=1/i;while(i--){u.push(tinycolor({h:o,s:s,v:l}));l=(l+v)%1}return u}tinycolor.mix=function(r,i,a){a=a===0?0:a||50;var o=tinycolor(r).toRgb();var s=tinycolor(i).toRgb();var l=a/100;var u={r:(s.r-o.r)*l+o.r,g:(s.g-o.g)*l+o.g,b:(s.b-o.b)*l+o.b,a:(s.a-o.a)*l+o.a};return tinycolor(u)};tinycolor.readability=function(r,a){var o=tinycolor(r);var s=tinycolor(a);return(i.max(o.getLuminance(),s.getLuminance())+.05)/(i.min(o.getLuminance(),s.getLuminance())+.05)};tinycolor.isReadable=function(r,i,a){var o=tinycolor.readability(r,i);var s,l;l=false;s=validateWCAG2Parms(a);switch(s.level+s.size){case"AAsmall":case"AAAlarge":l=o>=4.5;break;case"AAlarge":l=o>=3;break;case"AAAsmall":l=o>=7;break}return l};tinycolor.mostReadable=function(r,i,a){var o=null;var s=0;var l;var u,v,b;a=a||{};u=a.includeFallbackColors;v=a.level;b=a.size;for(var y=0;y<i.length;y++){l=tinycolor.readability(r,i[y]);if(l>s){s=l;o=tinycolor(i[y])}}if(tinycolor.isReadable(r,o,{level:v,size:b})||!u){return o}else{a.includeFallbackColors=false;return tinycolor.mostReadable(r,["#fff","#000"],a)}};var y=tinycolor.names={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"0ff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"00f",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",burntsienna:"ea7e5d",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"0ff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"f0f",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"663399",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"};var x=tinycolor.hexNames=flip(y);function flip(r){var i={};for(var a in r){if(r.hasOwnProperty(a)){i[r[a]]=a}}return i}function boundAlpha(r){r=parseFloat(r);if(isNaN(r)||r<0||r>1){r=1}return r}function bound01(r,a){if(isOnePointZero(r)){r="100%"}var o=isPercentage(r);r=u(a,v(0,parseFloat(r)));if(o){r=parseInt(r*a,10)/100}if(i.abs(r-a)<1e-6){return 1}return r%a/parseFloat(a)}function clamp01(r){return u(1,v(0,r))}function parseIntFromHex(r){return parseInt(r,16)}function isOnePointZero(r){return typeof r=="string"&&r.indexOf(".")!=-1&&parseFloat(r)===1}function isPercentage(r){return typeof r==="string"&&r.indexOf("%")!=-1}function pad2(r){return r.length==1?"0"+r:""+r}function convertToPercentage(r){if(r<=1){r=r*100+"%"}return r}function convertDecimalToHex(r){return i.round(parseFloat(r)*255).toString(16)}function convertHexToDecimal(r){return parseIntFromHex(r)/255}var A=function(){var r="[-\\+]?\\d+%?";var i="[-\\+]?\\d*\\.\\d+%?";var a="(?:"+i+")|(?:"+r+")";var o="[\\s|\\(]+("+a+")[,|\\s]+("+a+")[,|\\s]+("+a+")\\s*\\)?";var s="[\\s|\\(]+("+a+")[,|\\s]+("+a+")[,|\\s]+("+a+")[,|\\s]+("+a+")\\s*\\)?";return{CSS_UNIT:new RegExp(a),rgb:new RegExp("rgb"+o),rgba:new RegExp("rgba"+s),hsl:new RegExp("hsl"+o),hsla:new RegExp("hsla"+s),hsv:new RegExp("hsv"+o),hsva:new RegExp("hsva"+s),hex3:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,hex4:/^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex8:/^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/}}();function isValidCSSUnit(r){return!!A.CSS_UNIT.exec(r)}function stringInputToObject(r){r=r.replace(a,"").replace(o,"").toLowerCase();var i=false;if(y[r]){r=y[r];i=true}else if(r=="transparent"){return{r:0,g:0,b:0,a:0,format:"name"}}var s;if(s=A.rgb.exec(r)){return{r:s[1],g:s[2],b:s[3]}}if(s=A.rgba.exec(r)){return{r:s[1],g:s[2],b:s[3],a:s[4]}}if(s=A.hsl.exec(r)){return{h:s[1],s:s[2],l:s[3]}}if(s=A.hsla.exec(r)){return{h:s[1],s:s[2],l:s[3],a:s[4]}}if(s=A.hsv.exec(r)){return{h:s[1],s:s[2],v:s[3]}}if(s=A.hsva.exec(r)){return{h:s[1],s:s[2],v:s[3],a:s[4]}}if(s=A.hex8.exec(r)){return{r:parseIntFromHex(s[1]),g:parseIntFromHex(s[2]),b:parseIntFromHex(s[3]),a:convertHexToDecimal(s[4]),format:i?"name":"hex8"}}if(s=A.hex6.exec(r)){return{r:parseIntFromHex(s[1]),g:parseIntFromHex(s[2]),b:parseIntFromHex(s[3]),format:i?"name":"hex"}}if(s=A.hex4.exec(r)){return{r:parseIntFromHex(s[1]+""+s[1]),g:parseIntFromHex(s[2]+""+s[2]),b:parseIntFromHex(s[3]+""+s[3]),a:convertHexToDecimal(s[4]+""+s[4]),format:i?"name":"hex8"}}if(s=A.hex3.exec(r)){return{r:parseIntFromHex(s[1]+""+s[1]),g:parseIntFromHex(s[2]+""+s[2]),b:parseIntFromHex(s[3]+""+s[3]),format:i?"name":"hex"}}return false}function validateWCAG2Parms(r){var i,a;r=r||{level:"AA",size:"small"};i=(r.level||"AA").toUpperCase();a=(r.size||"small").toLowerCase();if(i!=="AA"&&i!=="AAA"){i="AA"}if(a!=="small"&&a!=="large"){a="small"}return{level:i,size:a}}if(true&&r.exports){r.exports=tinycolor}else if(typeof define==="function"&&define.amd){define((function(){return tinycolor}))}else{window.tinycolor=tinycolor}})(Math)},6337:(r,i,a)=>{(function(){var i={};if(true){r.exports=i}else{}var o;if(true){o=a(5670)}else{}function log(){if(typeof process=="undefined"||process.env.NODE_ENV=="development")console.log.apply(console,arguments)}(function(r,i){(function(){var i="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"===typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r},a=function(){function g(r){this.message="JPEG error: "+r}g.prototype=Error();g.prototype.name="JpegError";return g.constructor=g}(),o=function(){function g(r,i){this.message=r;this.g=i}g.prototype=Error();g.prototype.name="DNLMarkerError";return g.constructor=g}();(function(){function g(){this.M=null;this.B=-1}function W(r,i){for(var a=0,o=[],s,l,u=16;0<u&&!r[u-1];)u--;o.push({children:[],index:0});var v=o[0],b;for(s=0;s<u;s++){for(l=0;l<r[s];l++){v=o.pop();for(v.children[v.index]=i[a];0<v.index;)v=o.pop();v.index++;for(o.push(v);o.length<=s;)o.push(b={children:[],index:0}),v.children[v.index]=b.children,v=b;a++}s+1<u&&(o.push(b={children:[],index:0}),v.children[v.index]=b.children,v=b)}return o[0].children}function X(r,l,u,v,b,y,x,A,E){function n(){if(0<I)return I--,T>>I&1;T=r[l++];if(255===T){var i=r[l++];if(i){if(220===i&&M){l+=2;var s=r[l++]<<8|r[l++];if(0<s&&s!==u.g)throw new o("Found DNL marker (0xFFDC) while parsing scan data",s)}throw new a("unexpected marker "+(T<<8|i).toString(16))}}I=7;return T>>>7}function q(r){for(;;){r=r[n()];if("number"===typeof r)return r;if("object"!==("undefined"===typeof r?"undefined":i(r)))throw new a("invalid huffman sequence")}}function h(r){for(var i=0;0<r;)i=i<<1|n(),r--;return i}function c(r){if(1===r)return 1===n()?1:-1;var i=h(r);return i>=1<<r-1?i:i+(-1<<r)+1}function C(r,i){var a=q(r.D);a=0===a?0:c(a);r.a[i]=r.m+=a;for(a=1;64>a;){var o=q(r.o),l=o&15;o>>=4;if(0===l){if(15>o)break;a+=16}else a+=o,r.a[i+s[a]]=c(l),a++}}function w(r,i){var a=q(r.D);a=0===a?0:c(a)<<E;r.a[i]=r.m+=a}function p(r,i){r.a[i]|=n()<<E}function m(r,i){if(0<O)O--;else for(var a=y;a<=x;){var o=q(r.o),l=o&15;o>>=4;if(0===l){if(15>o){O=h(o)+(1<<o)-1;break}a+=16}else a+=o,r.a[i+s[a]]=c(l)*(1<<E),a++}}function t(r,i){for(var o=y,l=0,u;o<=x;){u=i+s[o];var v=0>r.a[u]?-1:1;switch(S){case 0:l=q(r.o);u=l&15;l>>=4;if(0===u)15>l?(O=h(l)+(1<<l),S=4):(l=16,S=1);else{if(1!==u)throw new a("invalid ACn encoding");k=c(u);S=l?2:3}continue;case 1:case 2:r.a[u]?r.a[u]+=v*(n()<<E):(l--,0===l&&(S=2===S?3:0));break;case 3:r.a[u]?r.a[u]+=v*(n()<<E):(r.a[u]=k<<E,S=0);break;case 4:r.a[u]&&(r.a[u]+=v*(n()<<E))}o++}4===S&&(O--,0===O&&(S=0))}var M=9<arguments.length&&void 0!==arguments[9]?arguments[9]:!1,L=u.P,P=l,T=0,I=0,O=0,S=0,k,D=v.length,z,R,B,V;var j=u.S?0===y?0===A?w:p:0===A?m:t:C;var H=0;var U=1===D?v[0].c*v[0].l:L*u.O;for(var _,G;H<U;){var J=b?Math.min(U-H,b):U;for(z=0;z<D;z++)v[z].m=0;O=0;if(1===D){var Z=v[0];for(V=0;V<J;V++)j(Z,64*((Z.c+1)*(H/Z.c|0)+H%Z.c)),H++}else for(V=0;V<J;V++){for(z=0;z<D;z++)for(Z=v[z],_=Z.h,G=Z.j,R=0;R<G;R++)for(B=0;B<_;B++)j(Z,64*((Z.c+1)*((H/L|0)*Z.j+R)+(H%L*Z.h+B)));H++}I=0;(Z=N(r,l))&&Z.f&&((0,_util.warn)("decodeScan - unexpected MCU data, current marker is: "+Z.f),l=Z.offset);Z=Z&&Z.F;if(!Z||65280>=Z)throw new a("marker was not found");if(65488<=Z&&65495>=Z)l+=2;else break}(Z=N(r,l))&&Z.f&&((0,_util.warn)("decodeScan - unexpected Scan data, current marker is: "+Z.f),l=Z.offset);return l-P}function Y(r,i){for(var o=i.c,s=i.l,l=new Int16Array(64),u=0;u<s;u++)for(var v=0;v<o;v++){var b=64*((i.c+1)*u+v),y=l,x=i.G,A=i.a;if(!x)throw new a("missing required Quantization Table.");for(var E=0;64>E;E+=8){var M=A[b+E];var L=A[b+E+1];var P=A[b+E+2];var T=A[b+E+3];var I=A[b+E+4];var O=A[b+E+5];var S=A[b+E+6];var k=A[b+E+7];M*=x[E];if(0===(L|P|T|I|O|S|k))M=5793*M+512>>10,y[E]=M,y[E+1]=M,y[E+2]=M,y[E+3]=M,y[E+4]=M,y[E+5]=M,y[E+6]=M,y[E+7]=M;else{L*=x[E+1];P*=x[E+2];T*=x[E+3];I*=x[E+4];O*=x[E+5];S*=x[E+6];k*=x[E+7];var D=5793*M+128>>8;var z=5793*I+128>>8;var R=P;var B=S;I=2896*(L-k)+128>>8;k=2896*(L+k)+128>>8;T<<=4;O<<=4;D=D+z+1>>1;z=D-z;M=3784*R+1567*B+128>>8;R=1567*R-3784*B+128>>8;B=M;I=I+O+1>>1;O=I-O;k=k+T+1>>1;T=k-T;D=D+B+1>>1;B=D-B;z=z+R+1>>1;R=z-R;M=2276*I+3406*k+2048>>12;I=3406*I-2276*k+2048>>12;k=M;M=799*T+4017*O+2048>>12;T=4017*T-799*O+2048>>12;O=M;y[E]=D+k;y[E+7]=D-k;y[E+1]=z+O;y[E+6]=z-O;y[E+2]=R+T;y[E+5]=R-T;y[E+3]=B+I;y[E+4]=B-I}}for(x=0;8>x;++x)M=y[x],L=y[x+8],P=y[x+16],T=y[x+24],I=y[x+32],O=y[x+40],S=y[x+48],k=y[x+56],0===(L|P|T|I|O|S|k)?(M=5793*M+8192>>14,M=-2040>M?0:2024<=M?255:M+2056>>4,A[b+x]=M,A[b+x+8]=M,A[b+x+16]=M,A[b+x+24]=M,A[b+x+32]=M,A[b+x+40]=M,A[b+x+48]=M,A[b+x+56]=M):(D=5793*M+2048>>12,z=5793*I+2048>>12,R=P,B=S,I=2896*(L-k)+2048>>12,k=2896*(L+k)+2048>>12,D=(D+z+1>>1)+4112,z=D-z,M=3784*R+1567*B+2048>>12,R=1567*R-3784*B+2048>>12,B=M,I=I+O+1>>1,O=I-O,k=k+T+1>>1,T=k-T,D=D+B+1>>1,B=D-B,z=z+R+1>>1,R=z-R,M=2276*I+3406*k+2048>>12,I=3406*I-2276*k+2048>>12,k=M,M=799*T+4017*O+2048>>12,T=4017*T-799*O+2048>>12,O=M,M=D+k,k=D-k,L=z+O,S=z-O,P=R+T,O=R-T,T=B+I,I=B-I,M=16>M?0:4080<=M?255:M>>4,L=16>L?0:4080<=L?255:L>>4,P=16>P?0:4080<=P?255:P>>4,T=16>T?0:4080<=T?255:T>>4,I=16>I?0:4080<=I?255:I>>4,O=16>O?0:4080<=O?255:O>>4,S=16>S?0:4080<=S?255:S>>4,k=16>k?0:4080<=k?255:k>>4,A[b+x]=M,A[b+x+8]=L,A[b+x+16]=P,A[b+x+24]=T,A[b+x+32]=I,A[b+x+40]=O,A[b+x+48]=S,A[b+x+56]=k)}return i.a}function N(r,i){var a=2<arguments.length&&void 0!==arguments[2]?arguments[2]:i,o=r.length-1;a=a<i?a:i;if(i>=o)return null;var s=r[i]<<8|r[i+1];if(65472<=s&&65534>=s)return{f:null,F:s,offset:i};for(var l=r[a]<<8|r[a+1];!(65472<=l&&65534>=l);){if(++a>=o)return null;l=r[a]<<8|r[a+1]}return{f:s.toString(16),F:l,offset:a}}var s=new Uint8Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]);g.prototype={parse:function(r){function d(){var i=r[u]<<8|r[u+1];u+=2;return i}function f(){var i=d();i=u+i-2;var a=N(r,i,u);a&&a.f&&((0,_util.warn)("readDataBlock - incorrect length, current marker is: "+a.f),i=a.offset);i=r.subarray(u,i);u+=i.length;return i}function e(r){for(var i=Math.ceil(r.v/8/r.s),a=Math.ceil(r.g/8/r.u),o=0;o<r.b.length;o++){k=r.b[o];var s=Math.ceil(Math.ceil(r.v/8)*k.h/r.s),l=Math.ceil(Math.ceil(r.g/8)*k.j/r.u);k.a=new Int16Array(64*a*k.j*(i*k.h+1));k.c=s;k.l=l}r.P=i;r.O=a}var i=(1<arguments.length&&void 0!==arguments[1]?arguments[1]:{}).N,l=void 0===i?null:i,u=0,v=null,b=0;i=[];var y=[],x=[],A=d();if(65496!==A)throw new a("SOI not found");for(A=d();65497!==A;){switch(A){case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var E=f();65518===A&&65===E[0]&&100===E[1]&&111===E[2]&&98===E[3]&&101===E[4]&&(v={version:E[5]<<8|E[6],Y:E[7]<<8|E[8],Z:E[9]<<8|E[10],W:E[11]});break;case 65499:A=d()+u-2;for(var M;u<A;){var L=r[u++],P=new Uint16Array(64);if(0===L>>4)for(E=0;64>E;E++)M=s[E],P[M]=r[u++];else if(1===L>>4)for(E=0;64>E;E++)M=s[E],P[M]=d();else throw new a("DQT - invalid table spec");i[L&15]=P}break;case 65472:case 65473:case 65474:if(T)throw new a("Only single frame JPEGs supported");d();var T={};T.X=65473===A;T.S=65474===A;T.precision=r[u++];A=d();T.g=l||A;T.v=d();T.b=[];T.C={};E=r[u++];for(A=P=L=0;A<E;A++){M=r[u];var I=r[u+1]>>4;var O=r[u+1]&15;L<I&&(L=I);P<O&&(P=O);I=T.b.push({h:I,j:O,T:r[u+2],G:null});T.C[M]=I-1;u+=3}T.s=L;T.u=P;e(T);break;case 65476:M=d();for(A=2;A<M;){L=r[u++];P=new Uint8Array(16);for(E=I=0;16>E;E++,u++)I+=P[E]=r[u];O=new Uint8Array(I);for(E=0;E<I;E++,u++)O[E]=r[u];A+=17+I;(0===L>>4?x:y)[L&15]=W(P,O)}break;case 65501:d();var S=d();break;case 65498:E=1===++b&&!l;d();L=r[u++];M=[];for(A=0;A<L;A++){P=T.C[r[u++]];var k=T.b[P];P=r[u++];k.D=x[P>>4];k.o=y[P&15];M.push(k)}A=r[u++];L=r[u++];P=r[u++];try{var D=X(r,u,T,M,S,A,L,P>>4,P&15,E);u+=D}catch(i){if(i instanceof o)return(0,_util.warn)('Attempting to re-parse JPEG image using "scanLines" parameter found in DNL marker (0xFFDC) segment.'),this.parse(r,{N:i.g});throw i}break;case 65500:u+=4;break;case 65535:255!==r[u]&&u--;break;default:if(255===r[u-3]&&192<=r[u-2]&&254>=r[u-2])u-=3;else if((E=N(r,u-2))&&E.f)(0,_util.warn)("JpegImage.parse - unexpected data, current marker is: "+E.f),u=E.offset;else throw new a("unknown marker "+A.toString(16))}A=d()}this.width=T.v;this.height=T.g;this.A=v;this.b=[];for(A=0;A<T.b.length;A++){k=T.b[A];if(S=i[k.T])k.G=S;this.b.push({R:Y(T,k),U:k.h/T.s,V:k.j/T.u,c:k.c,l:k.l})}this.i=this.b.length},L:function(r,i){var a=this.width/r,o=this.height/i,s,l,u=this.b.length,v=r*i*u,b=new Uint8ClampedArray(v),y=new Uint32Array(r);for(l=0;l<u;l++){var x=this.b[l];var A=x.U*a;var E=x.V*o;var M=l;var L=x.R;var P=x.c+1<<3;for(s=0;s<r;s++)x=0|s*A,y[s]=(x&4294967288)<<3|x&7;for(A=0;A<i;A++)for(x=0|A*E,x=P*(x&4294967288)|(x&7)<<3,s=0;s<r;s++)b[M]=L[x+y[s]],M+=u}if(o=this.M)for(l=0;l<v;)for(a=x=0;x<u;x++,l++,a+=2)b[l]=(b[l]*o[a]>>8)+o[a+1];return b},w:function(){return this.A?!!this.A.W:3===this.i?0===this.B?!1:!0:1===this.B?!0:!1},I:function(r){for(var i,a,o,s=0,l=r.length;s<l;s+=3)i=r[s],a=r[s+1],o=r[s+2],r[s]=i-179.456+1.402*o,r[s+1]=i+135.459-.344*a-.714*o,r[s+2]=i-226.816+1.772*a;return r},K:function(r){for(var i,a,o,s,l=0,u=0,v=r.length;u<v;u+=4)i=r[u],a=r[u+1],o=r[u+2],s=r[u+3],r[l++]=-122.67195406894+a*(-660635669420364e-19*a+.000437130475926232*o-54080610064599e-18*i+.00048449797120281*s-.154362151871126)+o*(-.000957964378445773*o+.000817076911346625*i-.00477271405408747*s+1.53380253221734)+i*(.000961250184130688*i-.00266257332283933*s+.48357088451265)+s*(-.000336197177618394*s+.484791561490776),r[l++]=107.268039397724+a*(219927104525741e-19*a-.000640992018297945*o+.000659397001245577*i+.000426105652938837*s-.176491792462875)+o*(-.000778269941513683*o+.00130872261408275*i+.000770482631801132*s-.151051492775562)+i*(.00126935368114843*i-.00265090189010898*s+.25802910206845)+s*(-.000318913117588328*s-.213742400323665),r[l++]=-20.810012546947+a*(-.000570115196973677*a-263409051004589e-19*o+.0020741088115012*i-.00288260236853442*s+.814272968359295)+o*(-153496057440975e-19*o-.000132689043961446*i+.000560833691242812*s-.195152027534049)+i*(.00174418132927582*i-.00255243321439347*s+.116935020465145)+s*(-.000343531996510555*s+.24165260232407);return r.subarray(0,l)},J:function(r){for(var i,a,o,s=0,l=r.length;s<l;s+=4)i=r[s],a=r[s+1],o=r[s+2],r[s]=434.456-i-1.402*o,r[s+1]=119.541-i+.344*a+.714*o,r[s+2]=481.816-i-1.772*a;return r},H:function(r){for(var i,a,o,s,l=0,u=1/255,v=0,b=r.length;v<b;v+=4)i=r[v]*u,a=r[v+1]*u,o=r[v+2]*u,s=r[v+3]*u,r[l++]=255+i*(-4.387332384609988*i+54.48615194189176*a+18.82290502165302*o+212.25662451639585*s-285.2331026137004)+a*(1.7149763477362134*a-5.6096736904047315*o-17.873870861415444*s-5.497006427196366)+o*(-2.5217340131683033*o-21.248923337353073*s+17.5119270841813)-s*(21.86122147463605*s+189.48180835922747),r[l++]=255+i*(8.841041422036149*i+60.118027045597366*a+6.871425592049007*o+31.159100130055922*s-79.2970844816548)+a*(-15.310361306967817*a+17.575251261109482*o+131.35250912493976*s-190.9453302588951)+o*(4.444339102852739*o+9.8632861493405*s-24.86741582555878)-s*(20.737325471181034*s+187.80453709719578),r[l++]=255+i*(.8842522430003296*i+8.078677503112928*a+30.89978309703729*o-.23883238689178934*s-14.183576799673286)+a*(10.49593273432072*a+63.02378494754052*o+50.606957656360734*s-112.23884253719248)+o*(.03296041114873217*o+115.60384449646641*s-193.58209356861505)-s*(22.33816807309886*s+180.12613974708367);return r.subarray(0,l)},getData:function(r,i,o){if(4<this.i)throw new a("Unsupported color mode");r=this.L(r,i);if(1===this.i&&o){o=r.length;i=new Uint8ClampedArray(3*o);for(var s=0,l=0;l<o;l++){var u=r[l];i[s++]=u;i[s++]=u;i[s++]=u}return i}if(3===this.i&&this.w())return this.I(r);if(4===this.i){if(this.w())return o?this.K(r):this.J(r);if(o)return this.H(r)}return r}};r.JpegDecoder=g})()})();r.encodeImage=function(i,a,o,s){var l={t256:[a],t257:[o],t258:[8,8,8,8],t259:[1],t262:[2],t273:[1e3],t277:[4],t278:[o],t279:[a*o*4],t282:[1],t283:[1],t284:[1],t286:[0],t287:[0],t296:[1],t305:["Photopea (UTIF.js)"],t338:[1]};if(s)for(var u in s)l[u]=s[u];var v=new Uint8Array(r.encode([l]));var b=new Uint8Array(i);var y=new Uint8Array(1e3+a*o*4);for(var u=0;u<v.length;u++)y[u]=v[u];for(var u=0;u<b.length;u++)y[1e3+u]=b[u];return y.buffer};r.encode=function(i){var a=new Uint8Array(2e4),o=4,s=r._binBE;a[0]=77;a[1]=77;a[3]=42;var l=8;s.writeUint(a,o,l);o+=4;for(var u=0;u<i.length;u++){var v=r._writeIFD(s,a,l,i[u]);l=v[1];if(u<i.length-1)s.writeUint(a,v[0],l)}return a.slice(0,l).buffer};r.decode=function(i){r.decode._decodeG3.allow2D=null;var a=new Uint8Array(i),o=0;var s=r._binBE.readASCII(a,o,2);o+=2;var l=s=="II"?r._binLE:r._binBE;var u=l.readUshort(a,o);o+=2;var v=l.readUint(a,o);o+=4;var b=[];while(true){var y=r._readIFD(l,a,v,b);v=l.readUint(a,y);if(v==0)break}return b};r.decodeImages=function(i,a){var o=new Uint8Array(i);var s=r._binBE.readASCII(o,0,2);for(var l=0;l<a.length;l++){var u=a[l];if(u["t256"]==null)continue;u.isLE=s=="II";u.width=u["t256"][0];u.height=u["t257"][0];var v=u["t259"]?u["t259"][0]:1;var b=u["t266"]?u["t266"][0]:1;if(u["t284"]&&u["t284"][0]==2)log("PlanarConfiguration 2 should not be used!");var y=(u["t258"]?Math.min(32,u["t258"][0]):1)*(u["t277"]?u["t277"][0]:1);var x=Math.ceil(u.width*y/8)*8;var A=u["t273"];if(A==null)A=u["t324"];var E=u["t279"];if(v==1&&A.length==1)E=[u.height*(x>>>3)];if(E==null)E=u["t325"];var M=new Uint8Array(u.height*(x>>>3)),L=0;if(u["t322"]!=null){var P=u["t322"][0],T=u["t323"][0];var I=Math.floor((u.width+P-1)/P);var O=Math.floor((u.height+T-1)/T);var S=new Uint8Array(Math.ceil(P*T*y/8)|0);for(var k=0;k<O;k++)for(var D=0;D<I;D++){var z=k*I+D;for(var R=0;R<S.length;R++)S[R]=0;r.decode._decompress(u,o,A[z],E[z],v,S,0,b);if(v==6)M=S;else r._copyTile(S,Math.ceil(P*y/8)|0,T,M,Math.ceil(u.width*y/8)|0,u.height,Math.ceil(D*P*y/8)|0,k*T)}L=M.length*8}else{var B=u["t278"]?u["t278"][0]:u.height;B=Math.min(B,u.height);for(var z=0;z<A.length;z++){r.decode._decompress(u,o,A[z],E[z],v,M,Math.ceil(L/8)|0,b);L+=x*B}L=Math.min(L,M.length*8)}u.data=new Uint8Array(M.buffer,0,Math.ceil(L/8)|0)}};r.decode._decompress=function(a,o,s,l,u,v,b,y){if(false){}else if(u==1)for(var x=0;x<l;x++)v[b+x]=o[s+x];else if(u==3)r.decode._decodeG3(o,s,l,v,b,a.width,y);else if(u==4)r.decode._decodeG4(o,s,l,v,b,a.width,y);else if(u==5)r.decode._decodeLZW(o,s,v,b);else if(u==6)r.decode._decodeOldJPEG(a,o,s,l,v,b);else if(u==7)r.decode._decodeNewJPEG(a,o,s,l,v,b);else if(u==8){var A=new Uint8Array(o.buffer,s,l);var E=i["inflate"](A);for(var M=0;M<E.length;M++)v[b+M]=E[M]}else if(u==32773)r.decode._decodePackBits(o,s,l,v,b);else if(u==32809)r.decode._decodeThunder(o,s,l,v,b);else log("Unknown compression",u);if(a["t317"]&&a["t317"][0]==2){var L=a["t277"]?a["t277"][0]:1,P=a["t278"]?a["t278"][0]:a.height,T=a.width*L;for(var I=0;I<P;I++){var O=b+I*T;if(L==3)for(var x=3;x<T;x+=3){v[O+x]=v[O+x]+v[O+x-3]&255;v[O+x+1]=v[O+x+1]+v[O+x-2]&255;v[O+x+2]=v[O+x+2]+v[O+x-1]&255}else for(var x=L;x<T;x++)v[O+x]=v[O+x]+v[O+x-L]&255}}};r.decode._decodeNikon=function(r,i,a,o,s){var l=[[0,1,5,1,1,1,1,1,1,2,0,0,0,0,0,0,5,4,3,6,2,7,1,0,8,9,11,10,12],[0,1,5,1,1,1,1,1,1,2,0,0,0,0,0,0,57,90,56,39,22,5,4,3,2,1,0,11,12,12],[0,1,4,2,3,1,2,0,0,0,0,0,0,0,0,0,5,4,6,3,7,2,8,1,9,0,10,11,12],[0,1,4,3,1,1,1,1,1,2,0,0,0,0,0,0,5,6,4,7,8,3,9,2,1,0,10,11,12,13,14],[0,1,5,1,1,1,1,1,1,1,2,0,0,0,0,0,8,92,75,58,41,7,6,5,4,3,2,1,0,13,14],[0,1,4,2,2,3,1,2,0,0,0,0,0,0,0,0,7,6,8,5,9,4,10,3,11,12,2,0,1,13,14]];var u,v,b,y,x;var A,E,M,L=0,P=0,T=0,I,O,a,S,k;log(r.slice(i,i+100));u=r[i];i++;v=r[i];i++;log(u.toString(16),v.toString(16),a)};r.decode._decodeNewJPEG=function(i,a,o,s,l,u){var v=i["t347"],b=v?v.length:0,y=new Uint8Array(b+s);if(v){var x=216,A=217,E=0;for(var M=0;M<b-1;M++){if(v[M]==255&&v[M+1]==A)break;y[E++]=v[M]}var L=a[o],P=a[o+1];if(L!=255||P!=x){y[E++]=L;y[E++]=P}for(var M=2;M<s;M++)y[E++]=a[o+M]}else for(var M=0;M<s;M++)y[M]=a[o+M];if(i["t262"]==32803){var T=i["t258"][0],I=new LosslessJpegDecoder;var O=I.decode(y),S=O.length;if(false){}else if(T==16)for(var M=0;M<S;M++){l[u++]=O[M]&255;l[u++]=O[M]>>>8}else if(T==12)for(var M=0;M<S;M+=2){l[u++]=O[M]>>>4;l[u++]=(O[M]<<4|O[M+1]>>>8)&255;l[u++]=O[M+1]&255}else throw new Error("unsupported bit depth "+T)}else{var k=new r.JpegDecoder;k.parse(y);var D=k.getData(k.width,k.height);for(var M=0;M<D.length;M++)l[u+M]=D[M]}if(i["t262"][0]==6)i["t262"][0]=2};r.decode._decodeOldJPEGInit=function(r,i,a,o){var s=216,l=217,u=219,v=196,b=221,y=192,x=218;var A=0,E=0,M,L,P=false,T,I,O;var S=r["t513"],k=S?S[0]:0;var D=r["t514"],z=D?D[0]:0;var R=r["t324"]||r["t273"]||S;var B=r["t530"],V=0,j=0;var H=r["t277"]?r["t277"][0]:1;var U=r["t515"];if(R){E=R[0];P=R.length>1}if(!P){if(i[a]==255&&i[a+1]==s)return{jpegOffset:a};if(S!=null){if(i[a+k]==255&&i[a+k+1]==s)A=a+k;else log("JPEGInterchangeFormat does not point to SOI");if(D==null)log("JPEGInterchangeFormatLength field is missing");else if(k>=E||k+z<=E)log("JPEGInterchangeFormatLength field value is invalid");if(A!=null)return{jpegOffset:A}}}if(B!=null){V=B[0];j=B[1]}if(S!=null)if(D!=null)if(z>=2&&k+z<=E){if(i[a+k+z-2]==255&&i[a+k+z-1]==s)M=new Uint8Array(z-2);else M=new Uint8Array(z);for(T=0;T<M.length;T++)M[T]=i[a+k+T];log("Incorrect JPEG interchange format: using JPEGInterchangeFormat offset to derive tables")}else log("JPEGInterchangeFormat+JPEGInterchangeFormatLength > offset to first strip or tile");if(M==null){var _=0,G=[];G[_++]=255;G[_++]=s;var J=r["t519"];if(J==null)throw new Error("JPEGQTables tag is missing");for(T=0;T<J.length;T++){G[_++]=255;G[_++]=u;G[_++]=0;G[_++]=67;G[_++]=T;for(I=0;I<64;I++)G[_++]=i[a+J[T]+I]}for(O=0;O<2;O++){var Z=r[O==0?"t520":"t521"];if(Z==null)throw new Error((O==0?"JPEGDCTables":"JPEGACTables")+" tag is missing");for(T=0;T<Z.length;T++){G[_++]=255;G[_++]=v;var K=19;for(I=0;I<16;I++)K+=i[a+Z[T]+I];G[_++]=K>>>8;G[_++]=K&255;G[_++]=T|O<<4;for(I=0;I<16;I++)G[_++]=i[a+Z[T]+I];for(I=0;I<K;I++)G[_++]=i[a+Z[T]+16+I]}}G[_++]=255;G[_++]=y;G[_++]=0;G[_++]=8+3*H;G[_++]=8;G[_++]=r.height>>>8&255;G[_++]=r.height&255;G[_++]=r.width>>>8&255;G[_++]=r.width&255;G[_++]=H;if(H==1){G[_++]=1;G[_++]=17;G[_++]=0}else for(T=0;T<3;T++){G[_++]=T+1;G[_++]=T!=0?17:(V&15)<<4|j&15;G[_++]=T}if(U!=null&&U[0]!=0){G[_++]=255;G[_++]=b;G[_++]=0;G[_++]=4;G[_++]=U[0]>>>8&255;G[_++]=U[0]&255}M=new Uint8Array(G)}var Q=-1;T=0;while(T<M.length-1){if(M[T]==255&&M[T+1]==y){Q=T;break}T++}if(Q==-1){var $=new Uint8Array(M.length+10+3*H);$.set(M);var tt=M.length;Q=M.length;M=$;M[tt++]=255;M[tt++]=y;M[tt++]=0;M[tt++]=8+3*H;M[tt++]=8;M[tt++]=r.height>>>8&255;M[tt++]=r.height&255;M[tt++]=r.width>>>8&255;M[tt++]=r.width&255;M[tt++]=H;if(H==1){M[tt++]=1;M[tt++]=17;M[tt++]=0}else for(T=0;T<3;T++){M[tt++]=T+1;M[tt++]=T!=0?17:(V&15)<<4|j&15;M[tt++]=T}}if(i[E]==255&&i[E+1]==x){var et=i[E+2]<<8|i[E+3];L=new Uint8Array(et+2);L[0]=i[E];L[1]=i[E+1];L[2]=i[E+2];L[3]=i[E+3];for(T=0;T<et-2;T++)L[T+4]=i[E+T+4]}else{L=new Uint8Array(2+6+2*H);var rt=0;L[rt++]=255;L[rt++]=x;L[rt++]=0;L[rt++]=6+2*H;L[rt++]=H;if(H==1){L[rt++]=1;L[rt++]=0}else for(T=0;T<3;T++){L[rt++]=T+1;L[rt++]=T<<4|T}L[rt++]=0;L[rt++]=63;L[rt++]=0}return{jpegOffset:a,tables:M,sosMarker:L,sofPosition:Q}};r.decode._decodeOldJPEG=function(i,a,o,s,l,u){var v,b,y,x,A;var E=r.decode._decodeOldJPEGInit(i,a,o,s);if(E.jpegOffset!=null){b=o+s-E.jpegOffset;x=new Uint8Array(b);for(v=0;v<b;v++)x[v]=a[E.jpegOffset+v]}else{y=E.tables.length;x=new Uint8Array(y+E.sosMarker.length+s+2);x.set(E.tables);A=y;x[E.sofPosition+5]=i.height>>>8&255;x[E.sofPosition+6]=i.height&255;x[E.sofPosition+7]=i.width>>>8&255;x[E.sofPosition+8]=i.width&255;if(a[o]!=255||a[o+1]!=SOS){x.set(E.sosMarker,bufoff);bufoff+=sosMarker.length}for(v=0;v<s;v++)x[bufoff++]=a[o+v];x[bufoff++]=255;x[bufoff++]=EOI}var M=new r.JpegDecoder;M.parse(x);var L=M.getData(M.width,M.height);for(var v=0;v<L.length;v++)l[u+v]=L[v];if(i["t262"][0]==6)i["t262"][0]=2};r.decode._decodePackBits=function(r,i,a,o,s){var l=new Int8Array(r.buffer),u=new Int8Array(o.buffer),v=i+a;while(i<v){var b=l[i];i++;if(b>=0&&b<128)for(var y=0;y<b+1;y++){u[s]=l[i];s++;i++}if(b>=-127&&b<0){for(var y=0;y<-b+1;y++){u[s]=l[i];s++}i++}}};r.decode._decodeThunder=function(r,i,a,o,s){var l=[0,1,0,-1],u=[0,1,2,3,0,-3,-2,-1];var v=i+a,b=s*2,y=0;while(i<v){var x=r[i],A=x>>>6,E=x&63;i++;if(A==3){y=E&15;o[b>>>1]|=y<<4*(1-b&1);b++}if(A==0)for(var M=0;M<E;M++){o[b>>>1]|=y<<4*(1-b&1);b++}if(A==2)for(var M=0;M<2;M++){var L=E>>>3*(1-M)&7;if(L!=4){y+=u[L];o[b>>>1]|=y<<4*(1-b&1);b++}}if(A==1)for(var M=0;M<3;M++){var L=E>>>2*(2-M)&3;if(L!=2){y+=l[L];o[b>>>1]|=y<<4*(1-b&1);b++}}}};r.decode._dmap={1:0,"011":1,"000011":2,"0000011":3,"010":-1,"000010":-2,"0000010":-3};r.decode._lens=function(){var addKeys=function(r,i,a,o){for(var s=0;s<i.length;s++)r[i[s]]=a+s*o};var r="00110101,000111,0111,1000,1011,1100,1110,1111,10011,10100,00111,01000,001000,000011,110100,110101,"+"101010,101011,0100111,0001100,0001000,0010111,0000011,0000100,0101000,0101011,0010011,0100100,0011000,00000010,00000011,00011010,"+"00011011,00010010,00010011,00010100,00010101,00010110,00010111,00101000,00101001,00101010,00101011,00101100,00101101,00000100,00000101,00001010,"+"00001011,01010010,01010011,01010100,01010101,00100100,00100101,01011000,01011001,01011010,01011011,01001010,01001011,00110010,00110011,00110100";var i="0000110111,010,11,10,011,0011,0010,00011,000101,000100,0000100,0000101,0000111,00000100,00000111,000011000,"+"0000010111,0000011000,0000001000,00001100111,00001101000,00001101100,00000110111,00000101000,00000010111,00000011000,000011001010,000011001011,000011001100,000011001101,000001101000,000001101001,"+"000001101010,000001101011,000011010010,000011010011,000011010100,000011010101,000011010110,000011010111,000001101100,000001101101,000011011010,000011011011,000001010100,000001010101,000001010110,000001010111,"+"000001100100,000001100101,000001010010,000001010011,000000100100,000000110111,000000111000,000000100111,000000101000,000001011000,000001011001,000000101011,000000101100,000001011010,000001100110,000001100111";var a="11011,10010,010111,0110111,00110110,00110111,01100100,01100101,01101000,01100111,011001100,011001101,011010010,011010011,011010100,011010101,011010110,"+"011010111,011011000,011011001,011011010,011011011,010011000,010011001,010011010,011000,010011011";var o="0000001111,000011001000,000011001001,000001011011,000000110011,000000110100,000000110101,0000001101100,0000001101101,0000001001010,0000001001011,0000001001100,"+"0000001001101,0000001110010,0000001110011,0000001110100,0000001110101,0000001110110,0000001110111,0000001010010,0000001010011,0000001010100,0000001010101,0000001011010,"+"0000001011011,0000001100100,0000001100101";var s="00000001000,00000001100,00000001101,000000010010,000000010011,000000010100,000000010101,000000010110,000000010111,000000011100,000000011101,000000011110,000000011111";r=r.split(",");i=i.split(",");a=a.split(",");o=o.split(",");s=s.split(",");var l={},u={};addKeys(l,r,0,1);addKeys(l,a,64,64);addKeys(l,s,1792,64);addKeys(u,i,0,1);addKeys(u,o,64,64);addKeys(u,s,1792,64);return[l,u]}();r.decode._decodeG4=function(i,a,o,s,l,u,v){var b=r.decode,y=a<<3,x=0,A="";var E=[],M=[];for(var L=0;L<u;L++)M.push(0);M=b._makeDiff(M);var P=0,T=0,I=0,O=0,S=0,k=0;var D=0,z="",R=0;var B=Math.ceil(u/8)*8;while(y>>>3<a+o){O=b._findDiff(M,P+(P==0?0:1),1-k),S=b._findDiff(M,O,k);var V=0;if(v==1)V=i[y>>>3]>>>7-(y&7)&1;if(v==2)V=i[y>>>3]>>>(y&7)&1;y++;A+=V;if(z=="H"){if(b._lens[k][A]!=null){var j=b._lens[k][A];A="";x+=j;if(j<64){b._addNtimes(E,x,k);P+=x;k=1-k;x=0;R--;if(R==0)z=""}}}else{if(A=="0001"){A="";b._addNtimes(E,S-P,k);P=S}if(A=="001"){A="";z="H";R=2}if(b._dmap[A]!=null){T=O+b._dmap[A];b._addNtimes(E,T-P,k);P=T;A="";k=1-k}}if(E.length==u&&z==""){b._writeBits(E,s,l*8+D*B);k=0;D++;P=0;M=b._makeDiff(E);E=[]}}};r.decode._findDiff=function(r,i,a){for(var o=0;o<r.length;o+=2)if(r[o]>=i&&r[o+1]==a)return r[o]};r.decode._makeDiff=function(r){var i=[];if(r[0]==1)i.push(0,1);for(var a=1;a<r.length;a++)if(r[a-1]!=r[a])i.push(a,r[a]);i.push(r.length,0,r.length,1);return i};r.decode._decodeG3=function(i,a,o,s,l,u,v){var b=r.decode,y=a<<3,x=0,A="";var E=[],M=[];for(var L=0;L<u;L++)E.push(0);var P=0,T=0,I=0,O=0,S=0,k=0;var D=-1,z="",R=0,B=false;var V=Math.ceil(u/8)*8;while(y>>>3<a+o){O=b._findDiff(M,P+(P==0?0:1),1-k),S=b._findDiff(M,O,k);var j=0;if(v==1)j=i[y>>>3]>>>7-(y&7)&1;if(v==2)j=i[y>>>3]>>>(y&7)&1;y++;A+=j;if(B){if(b._lens[k][A]!=null){var H=b._lens[k][A];A="";x+=H;if(H<64){b._addNtimes(E,x,k);k=1-k;x=0}}}else{if(z=="H"){if(b._lens[k][A]!=null){var H=b._lens[k][A];A="";x+=H;if(H<64){b._addNtimes(E,x,k);P+=x;k=1-k;x=0;R--;if(R==0)z=""}}}else{if(A=="0001"){A="";b._addNtimes(E,S-P,k);P=S}if(A=="001"){A="";z="H";R=2}if(b._dmap[A]!=null){T=O+b._dmap[A];b._addNtimes(E,T-P,k);P=T;A="";k=1-k}}}if(A.endsWith("000000000001")){if(D>=0)b._writeBits(E,s,l*8+D*V);if(v==1)B=(i[y>>>3]>>>7-(y&7)&1)==1;if(v==2)B=(i[y>>>3]>>>(y&7)&1)==1;y++;if(b._decodeG3.allow2D==null)b._decodeG3.allow2D=B;if(!b._decodeG3.allow2D){B=true;y--}A="";k=0;D++;P=0;M=b._makeDiff(E);E=[]}}if(E.length==u)b._writeBits(E,s,l*8+D*V)};r.decode._addNtimes=function(r,i,a){for(var o=0;o<i;o++)r.push(a)};r.decode._writeBits=function(r,i,a){for(var o=0;o<r.length;o++)i[a+o>>>3]|=r[o]<<7-(a+o&7)};r.decode._decodeLZW=function(i,a,o,s){if(r.decode._lzwTab==null){var l=new Uint32Array(65535),u=new Uint16Array(65535),v=new Uint8Array(2e6);for(var b=0;b<256;b++){v[b<<2]=b;l[b]=b<<2;u[b]=1}r.decode._lzwTab=[l,u,v]}var y=r.decode._copyData;var x=r.decode._lzwTab[0],A=r.decode._lzwTab[1],v=r.decode._lzwTab[2],E=258,M=258<<2;var L=9,P=a<<3;var T=256,I=257;var O=0,S=0,k=0;while(true){O=i[P>>>3]<<16|i[P+8>>>3]<<8|i[P+16>>>3];S=O>>24-(P&7)-L&(1<<L)-1;P+=L;if(S==I)break;if(S==T){L=9;E=258;M=258<<2;O=i[P>>>3]<<16|i[P+8>>>3]<<8|i[P+16>>>3];S=O>>24-(P&7)-L&(1<<L)-1;P+=L;if(S==I)break;o[s]=S;s++}else if(S<E){var D=x[S],z=A[S];y(v,D,o,s,z);s+=z;if(k>=E){x[E]=M;v[x[E]]=D[0];A[E]=1;M=M+1+3&~3;E++}else{x[E]=M;var R=x[k],B=A[k];y(v,R,v,M,B);v[M+B]=v[D];B++;A[E]=B;E++;M=M+B+3&~3}if(E+1==1<<L)L++}else{if(k>=E){x[E]=M;A[E]=0;E++}else{x[E]=M;var R=x[k],B=A[k];y(v,R,v,M,B);v[M+B]=v[M];B++;A[E]=B;E++;y(v,M,o,s,B);s+=B;M=M+B+3&~3}if(E+1==1<<L)L++}k=S}};r.decode._copyData=function(r,i,a,o,s){for(var l=0;l<s;l+=4){a[o+l]=r[i+l];a[o+l+1]=r[i+l+1];a[o+l+2]=r[i+l+2];a[o+l+3]=r[i+l+3]}};r.tags={254:"NewSubfileType",255:"SubfileType",256:"ImageWidth",257:"ImageLength",258:"BitsPerSample",259:"Compression",262:"PhotometricInterpretation",266:"FillOrder",269:"DocumentName",270:"ImageDescription",271:"Make",272:"Model",273:"StripOffset",274:"Orientation",277:"SamplesPerPixel",278:"RowsPerStrip",279:"StripByteCounts",280:"MinSampleValue",281:"MaxSampleValue",282:"XResolution",283:"YResolution",284:"PlanarConfiguration",285:"PageName",286:"XPosition",287:"YPosition",292:"T4Options",296:"ResolutionUnit",297:"PageNumber",305:"Software",306:"DateTime",315:"Artist",316:"HostComputer",317:"Predictor",318:"WhitePoint",319:"PrimaryChromaticities",320:"ColorMap",321:"HalftoneHints",322:"TileWidth",323:"TileLength",324:"TileOffset",325:"TileByteCounts",330:"SubIFDs",336:"DotRange",338:"ExtraSample",339:"SampleFormat",347:"JPEGTables",512:"JPEGProc",513:"JPEGInterchangeFormat",514:"JPEGInterchangeFormatLength",519:"JPEGQTables",520:"JPEGDCTables",521:"JPEGACTables",529:"YCbCrCoefficients",530:"YCbCrSubSampling",531:"YCbCrPositioning",532:"ReferenceBlackWhite",700:"XMP",33421:"CFARepeatPatternDim",33422:"CFAPattern",33432:"Copyright",33434:"ExposureTime",33437:"FNumber",33723:"IPTC/NAA",34377:"Photoshop",34665:"ExifIFD",34675:"ICC Profile",34850:"ExposureProgram",34853:"GPSInfo",34855:"ISOSpeedRatings",34858:"TimeZoneOffset",34859:"SelfTimeMode",36867:"DateTimeOriginal",36868:"DateTimeDigitized",37377:"ShutterSpeedValue",37378:"ApertureValue",37380:"ExposureBiasValue",37383:"MeteringMode",37385:"Flash",37386:"FocalLength",37390:"FocalPlaneXResolution",37391:"FocalPlaneYResolution",37392:"FocalPlaneResolutionUnit",37393:"ImageNumber",37398:"TIFF/EPStandardID",37399:"SensingMethod",37500:"MakerNote",37510:"UserComment",37724:"ImageSourceData",40092:"XPComment",40094:"XPKeywords",40961:"ColorSpace",40962:"PixelXDimension",40963:"PixelXDimension",41486:"FocalPlaneXResolution",41487:"FocalPlaneYResolution",41488:"FocalPlaneResolutionUnit",41985:"CustomRendered",41986:"ExposureMode",41987:"WhiteBalance",41990:"SceneCaptureType",50706:"DNGVersion",50707:"DNGBackwardVersion",50708:"UniqueCameraModel",50709:"LocalizedCameraModel",50710:"CFAPlaneColor",50711:"CFALayout",50712:"LinearizationTable",50713:"BlackLevelRepeatDim",50714:"BlackLevel",50716:"BlackLevelDeltaV",50717:"WhiteLevel",50718:"DefaultScale",50719:"DefaultCropOrigin",50720:"DefaultCropSize",50733:"BayerGreenSplit",50738:"AntiAliasStrength",50721:"ColorMatrix1",50722:"ColorMatrix2",50723:"CameraCalibration1",50724:"CameraCalibration2",50727:"AnalogBalance",50728:"AsShotNeutral",50730:"BaselineExposure",50731:"BaselineNoise",50732:"BaselineSharpness",50734:"LinearResponseLimit",50735:"CameraSerialNumber",50736:"LensInfo",50739:"ShadowScale",50740:"DNGPrivateData",50741:"MakerNoteSafety",50778:"CalibrationIlluminant1",50779:"CalibrationIlluminant2",50780:"BestQualityScale",50781:"RawDataUniqueID",50827:"OriginalRawFileName",50829:"ActiveArea",50830:"MaskedAreas",50931:"CameraCalibrationSignature",50932:"ProfileCalibrationSignature",50935:"NoiseReductionApplied",50936:"ProfileName",50937:"ProfileHueSatMapDims",50938:"ProfileHueSatMapData1",50939:"ProfileHueSatMapData2",50940:"ProfileToneCurve",50941:"ProfileEmbedPolicy",50942:"ProfileCopyright",50964:"ForwardMatrix1",50965:"ForwardMatrix2",50966:"PreviewApplicationName",50967:"PreviewApplicationVersion",50969:"PreviewSettingsDigest",50970:"PreviewColorSpace",50971:"PreviewDateTime",50972:"RawImageDigest",51008:"OpcodeList1",51009:"OpcodeList2",51022:"OpcodeList3",51041:"NoiseProfile",51089:"OriginalDefaultFinalSize",51090:"OriginalBestQualityFinalSize",51091:"OriginalDefaultCropSize",51125:"DefaultUserCrop"};r.ttypes={256:3,257:3,258:3,259:3,262:3,273:4,274:3,277:3,278:4,279:4,282:5,283:5,284:3,286:5,287:5,296:3,305:2,306:2,338:3,513:4,514:4,34665:4};r._readIFD=function(i,a,o,s){var l=i.readUshort(a,o);o+=2;var u={};s.push(u);for(var v=0;v<l;v++){var b=i.readUshort(a,o);o+=2;var y=i.readUshort(a,o);o+=2;var x=i.readUint(a,o);o+=4;var A=i.readUint(a,o);o+=4;var E=[];u["t"+b]=E;if(y==1||y==7){for(var M=0;M<x;M++)E.push(a[(x<5?o-4:A)+M])}if(y==2){E.push(i.readASCII(a,x<5?o-4:A,x-1))}if(y==3){for(var M=0;M<x;M++)E.push(i.readUshort(a,(x<3?o-4:A)+2*M))}if(y==4){for(var M=0;M<x;M++)E.push(i.readUint(a,(x<2?o-4:A)+4*M))}if(y==5){for(var M=0;M<x;M++)E.push(i.readUint(a,A+M*8)/i.readUint(a,A+M*8+4))}if(y==8){for(var M=0;M<x;M++)E.push(i.readShort(a,(x<3?o-4:A)+2*M))}if(y==9){for(var M=0;M<x;M++)E.push(i.readInt(a,(x<2?o-4:A)+4*M))}if(y==10){for(var M=0;M<x;M++)E.push(i.readInt(a,A+M*8)/i.readInt(a,A+M*8+4))}if(y==11){for(var M=0;M<x;M++)E.push(i.readFloat(a,A+M*4))}if(y==12){for(var M=0;M<x;M++)E.push(i.readDouble(a,A+M*8))}if(x!=0&&E.length==0)log("unknown TIFF tag type: ",y,"num:",x);if(b==330)for(var M=0;M<x;M++)r._readIFD(i,a,E[M],s)}return o};r._writeIFD=function(i,a,o,s){var l=Object.keys(s);i.writeUshort(a,o,l.length);o+=2;var u=o+l.length*12+4;for(var v=0;v<l.length;v++){var b=l[v];var y=parseInt(b.slice(1)),x=r.ttypes[y];if(x==null)throw new Error("unknown type of tag: "+y);var A=s[b];if(x==2)A=A[0]+"\0";var E=A.length;i.writeUshort(a,o,y);o+=2;i.writeUshort(a,o,x);o+=2;i.writeUint(a,o,E);o+=4;var M=[-1,1,1,2,4,8,0,0,0,0,0,0,8][x]*E;var L=o;if(M>4){i.writeUint(a,o,u);L=u}if(x==2){i.writeASCII(a,L,A)}if(x==3){for(var P=0;P<E;P++)i.writeUshort(a,L+2*P,A[P])}if(x==4){for(var P=0;P<E;P++)i.writeUint(a,L+4*P,A[P])}if(x==5){for(var P=0;P<E;P++){i.writeUint(a,L+8*P,Math.round(A[P]*1e4));i.writeUint(a,L+8*P+4,1e4)}}if(x==12){for(var P=0;P<E;P++)i.writeDouble(a,L+8*P,A[P])}if(M>4){M+=M&1;u+=M}o+=4}return[o,u]};r.toRGBA8=function(r){var i=r.width,a=r.height,o=i*a,s=o*4,l=r.data;var u=new Uint8Array(o*4);var v=r["t262"][0],b=r["t258"]?Math.min(32,r["t258"][0]):1,y=r.isLE?1:0;if(false){}else if(v==0){var x=Math.ceil(b*i/8);for(var A=0;A<a;A++){var E=A*x,M=A*i;if(b==1)for(var L=0;L<i;L++){var P=M+L<<2,T=l[E+(L>>3)]>>7-(L&7)&1;u[P]=u[P+1]=u[P+2]=(1-T)*255;u[P+3]=255}if(b==4)for(var L=0;L<i;L++){var P=M+L<<2,T=l[E+(L>>1)]>>4-4*(L&1)&15;u[P]=u[P+1]=u[P+2]=(15-T)*17;u[P+3]=255}if(b==8)for(var L=0;L<i;L++){var P=M+L<<2,T=l[E+L];u[P]=u[P+1]=u[P+2]=255-T;u[P+3]=255}}}else if(v==1){var x=Math.ceil(b*i/8);for(var A=0;A<a;A++){var E=A*x,M=A*i;if(b==1)for(var L=0;L<i;L++){var P=M+L<<2,T=l[E+(L>>3)]>>7-(L&7)&1;u[P]=u[P+1]=u[P+2]=T*255;u[P+3]=255}if(b==2)for(var L=0;L<i;L++){var P=M+L<<2,T=l[E+(L>>2)]>>6-2*(L&3)&3;u[P]=u[P+1]=u[P+2]=T*85;u[P+3]=255}if(b==8)for(var L=0;L<i;L++){var P=M+L<<2,T=l[E+L];u[P]=u[P+1]=u[P+2]=T;u[P+3]=255}if(b==16)for(var L=0;L<i;L++){var P=M+L<<2,T=l[E+(2*L+y)];u[P]=u[P+1]=u[P+2]=Math.min(255,T);u[P+3]=255}}}else if(v==2){if(b==8){if(r["t338"]){if(r["t338"][0]>0)for(var L=0;L<s;L++)u[L]=l[L];else for(var L=0;L<s;L+=4){u[L]=l[L];u[L+1]=l[L+1];u[L+2]=l[L+2];u[L+3]=255}}else{var I=r["t258"]?r["t258"].length:3;if(I==4)for(var L=0;L<s;L++)u[L]=l[L];if(I==3)for(var L=0;L<o;L++){var P=L<<2,O=L*3;u[P]=l[O];u[P+1]=l[O+1];u[P+2]=l[O+2];u[P+3]=255}}}else for(var L=0;L<o;L++){var P=L<<2,O=L*6;u[P]=l[O];u[P+1]=l[O+2];u[P+2]=l[O+4];u[P+3]=255}}else if(v==3){var S=r["t320"];for(var L=0;L<o;L++){var P=L<<2,k=l[L];u[P]=S[k]>>8;u[P+1]=S[256+k]>>8;u[P+2]=S[512+k]>>8;u[P+3]=255}}else if(v==5){var I=r["t258"]?r["t258"].length:4;var D=I>4?1:0;for(var L=0;L<o;L++){var P=L<<2,z=L*I;var R=255-l[z],B=255-l[z+1],V=255-l[z+2],j=(255-l[z+3])*(1/255);u[P]=~~(R*j+.5);u[P+1]=~~(B*j+.5);u[P+2]=~~(V*j+.5);u[P+3]=255*(1-D)+l[z+4]*D}}else log("Unknown Photometric interpretation: "+v);return u};r.replaceIMG=function(){var i=document.getElementsByTagName("img");for(var a=0;a<i.length;a++){var o=i[a],s=o.getAttribute("src");if(s==null)continue;var l=s.split(".").pop().toLowerCase();if(l!="tif"&&l!="tiff")continue;var u=new XMLHttpRequest;r._xhrs.push(u);r._imgs.push(o);u.open("GET",s);u.responseType="arraybuffer";u.onload=r._imgLoaded;u.send()}};r._xhrs=[];r._imgs=[];r._imgLoaded=function(i){var a=i.target.response;var o=r.decode(a),s=o[0];r.decodeImages(a,o);var l=r.toRGBA8(s),u=s.width,v=s.height;var b=r._xhrs.indexOf(i.target),y=r._imgs[b];r._xhrs.splice(b,1);r._imgs.splice(b,1);var x=document.createElement("canvas");x.width=u;x.height=v;var A=x.getContext("2d"),E=A.createImageData(u,v);for(var M=0;M<l.length;M++)E.data[M]=l[M];A.putImageData(E,0,0);var L=["style","class","id"];for(var M=0;M<L.length;M++)x.setAttribute(L[M],y.getAttribute(L[M]));y.parentNode.replaceChild(x,y)};r._binBE={nextZero:function(r,i){while(r[i]!=0)i++;return i},readUshort:function(r,i){return r[i]<<8|r[i+1]},readShort:function(i,a){var o=r._binBE.ui8;o[0]=i[a+1];o[1]=i[a+0];return r._binBE.i16[0]},readInt:function(i,a){var o=r._binBE.ui8;o[0]=i[a+3];o[1]=i[a+2];o[2]=i[a+1];o[3]=i[a+0];return r._binBE.i32[0]},readUint:function(i,a){var o=r._binBE.ui8;o[0]=i[a+3];o[1]=i[a+2];o[2]=i[a+1];o[3]=i[a+0];return r._binBE.ui32[0]},readASCII:function(r,i,a){var o="";for(var s=0;s<a;s++)o+=String.fromCharCode(r[i+s]);return o},readFloat:function(i,a){var o=r._binBE.ui8;for(var s=0;s<4;s++)o[s]=i[a+3-s];return r._binBE.fl32[0]},readDouble:function(i,a){var o=r._binBE.ui8;for(var s=0;s<8;s++)o[s]=i[a+7-s];return r._binBE.fl64[0]},writeUshort:function(r,i,a){r[i]=a>>8&255;r[i+1]=a&255},writeUint:function(r,i,a){r[i]=a>>24&255;r[i+1]=a>>16&255;r[i+2]=a>>8&255;r[i+3]=a>>0&255},writeASCII:function(r,i,a){for(var o=0;o<a.length;o++)r[i+o]=a.charCodeAt(o)},writeDouble:function(i,a,o){r._binBE.fl64[0]=o;for(var s=0;s<8;s++)i[a+s]=r._binBE.ui8[7-s]}};r._binBE.ui8=new Uint8Array(8);r._binBE.i16=new Int16Array(r._binBE.ui8.buffer);r._binBE.i32=new Int32Array(r._binBE.ui8.buffer);r._binBE.ui32=new Uint32Array(r._binBE.ui8.buffer);r._binBE.fl32=new Float32Array(r._binBE.ui8.buffer);r._binBE.fl64=new Float64Array(r._binBE.ui8.buffer);r._binLE={nextZero:r._binBE.nextZero,readUshort:function(r,i){return r[i+1]<<8|r[i]},readShort:function(i,a){var o=r._binBE.ui8;o[0]=i[a+0];o[1]=i[a+1];return r._binBE.i16[0]},readInt:function(i,a){var o=r._binBE.ui8;o[0]=i[a+0];o[1]=i[a+1];o[2]=i[a+2];o[3]=i[a+3];return r._binBE.i32[0]},readUint:function(i,a){var o=r._binBE.ui8;o[0]=i[a+0];o[1]=i[a+1];o[2]=i[a+2];o[3]=i[a+3];return r._binBE.ui32[0]},readASCII:r._binBE.readASCII,readFloat:function(i,a){var o=r._binBE.ui8;for(var s=0;s<4;s++)o[s]=i[a+s];return r._binBE.fl32[0]},readDouble:function(i,a){var o=r._binBE.ui8;for(var s=0;s<8;s++)o[s]=i[a+s];return r._binBE.fl64[0]}};r._copyTile=function(r,i,a,o,s,l,u,v){var b=Math.min(i,s-u);var y=Math.min(a,l-v);for(var x=0;x<y;x++){var A=(v+x)*s+u;var E=x*i;for(var M=0;M<b;M++)o[A+M]=r[E+M]}}})(i,o)})()},9619:function(r,i){(function(){"use strict";i.stripBOM=function(r){if(r[0]==="\ufeff"){return r.substring(1)}else{return r}}}).call(this)},7269:function(r,i,a){(function(){"use strict";var r,o,s,l,u,v={}.hasOwnProperty;r=a(9851);o=a(3617).defaults;l=function(r){return typeof r==="string"&&(r.indexOf("&")>=0||r.indexOf(">")>=0||r.indexOf("<")>=0)};u=function(r){return"<![CDATA["+s(r)+"]]>"};s=function(r){return r.replace("]]>","]]]]><![CDATA[>")};i.Builder=function(){function Builder(r){var i,a,s;this.options={};a=o["0.2"];for(i in a){if(!v.call(a,i))continue;s=a[i];this.options[i]=s}for(i in r){if(!v.call(r,i))continue;s=r[i];this.options[i]=s}}Builder.prototype.buildObject=function(i){var a,s,b,y,x;a=this.options.attrkey;s=this.options.charkey;if(Object.keys(i).length===1&&this.options.rootName===o["0.2"].rootName){x=Object.keys(i)[0];i=i[x]}else{x=this.options.rootName}b=function(r){return function(i,o){var y,x,A,E,M,L;if(typeof o!=="object"){if(r.options.cdata&&l(o)){i.raw(u(o))}else{i.txt(o)}}else if(Array.isArray(o)){for(E in o){if(!v.call(o,E))continue;x=o[E];for(M in x){A=x[M];i=b(i.ele(M),A).up()}}}else{for(M in o){if(!v.call(o,M))continue;x=o[M];if(M===a){if(typeof x==="object"){for(y in x){L=x[y];i=i.att(y,L)}}}else if(M===s){if(r.options.cdata&&l(x)){i=i.raw(u(x))}else{i=i.txt(x)}}else if(Array.isArray(x)){for(E in x){if(!v.call(x,E))continue;A=x[E];if(typeof A==="string"){if(r.options.cdata&&l(A)){i=i.ele(M).raw(u(A)).up()}else{i=i.ele(M,A).up()}}else{i=b(i.ele(M),A).up()}}}else if(typeof x==="object"){i=b(i.ele(M),x).up()}else{if(typeof x==="string"&&r.options.cdata&&l(x)){i=i.ele(M).raw(u(x)).up()}else{if(x==null){x=""}i=i.ele(M,x.toString()).up()}}}}return i}}(this);y=r.create(x,this.options.xmldec,this.options.doctype,{headless:this.options.headless,allowSurrogateChars:this.options.allowSurrogateChars});return b(y,i).end(this.options.renderOpts)};return Builder}()}).call(this)},3617:function(r,i){(function(){i.defaults={.1:{explicitCharkey:false,trim:true,normalize:true,normalizeTags:false,attrkey:"@",charkey:"#",explicitArray:false,ignoreAttrs:false,mergeAttrs:false,explicitRoot:false,validator:null,xmlns:false,explicitChildren:false,childkey:"@@",charsAsChildren:false,includeWhiteChars:false,async:false,strict:true,attrNameProcessors:null,attrValueProcessors:null,tagNameProcessors:null,valueProcessors:null,emptyTag:""},.2:{explicitCharkey:false,trim:false,normalize:false,normalizeTags:false,attrkey:"$",charkey:"_",explicitArray:true,ignoreAttrs:false,mergeAttrs:false,explicitRoot:true,validator:null,xmlns:false,explicitChildren:false,preserveChildrenOrder:false,childkey:"$$",charsAsChildren:false,includeWhiteChars:false,async:false,strict:true,attrNameProcessors:null,attrValueProcessors:null,tagNameProcessors:null,valueProcessors:null,rootName:"root",xmldec:{version:"1.0",encoding:"UTF-8",standalone:true},doctype:null,renderOpts:{pretty:true,indent:"  ",newline:"\n"},headless:false,chunkSize:1e4,emptyTag:"",cdata:false}}}).call(this)},8765:function(r,i,a){(function(){"use strict";var r,o,s,l,u,v,b,y,bind=function(r,i){return function(){return r.apply(i,arguments)}},extend=function(r,i){for(var a in i){if(x.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},x={}.hasOwnProperty;b=a(2013);s=a(2361);r=a(9619);v=a(2096);y=a(9512).setImmediate;o=a(3617).defaults;l=function(r){return typeof r==="object"&&r!=null&&Object.keys(r).length===0};u=function(r,i,a){var o,s,l;for(o=0,s=r.length;o<s;o++){l=r[o];i=l(i,a)}return i};i.Parser=function(a){extend(Parser,a);function Parser(r){this.parseStringPromise=bind(this.parseStringPromise,this);this.parseString=bind(this.parseString,this);this.reset=bind(this.reset,this);this.assignOrPush=bind(this.assignOrPush,this);this.processAsync=bind(this.processAsync,this);var a,s,l;if(!(this instanceof i.Parser)){return new i.Parser(r)}this.options={};s=o["0.2"];for(a in s){if(!x.call(s,a))continue;l=s[a];this.options[a]=l}for(a in r){if(!x.call(r,a))continue;l=r[a];this.options[a]=l}if(this.options.xmlns){this.options.xmlnskey=this.options.attrkey+"ns"}if(this.options.normalizeTags){if(!this.options.tagNameProcessors){this.options.tagNameProcessors=[]}this.options.tagNameProcessors.unshift(v.normalize)}this.reset()}Parser.prototype.processAsync=function(){var r,i;try{if(this.remaining.length<=this.options.chunkSize){r=this.remaining;this.remaining="";this.saxParser=this.saxParser.write(r);return this.saxParser.close()}else{r=this.remaining.substr(0,this.options.chunkSize);this.remaining=this.remaining.substr(this.options.chunkSize,this.remaining.length);this.saxParser=this.saxParser.write(r);return y(this.processAsync)}}catch(r){i=r;if(!this.saxParser.errThrown){this.saxParser.errThrown=true;return this.emit(i)}}};Parser.prototype.assignOrPush=function(r,i,a){if(!(i in r)){if(!this.options.explicitArray){return r[i]=a}else{return r[i]=[a]}}else{if(!(r[i]instanceof Array)){r[i]=[r[i]]}return r[i].push(a)}};Parser.prototype.reset=function(){var r,i,a,o;this.removeAllListeners();this.saxParser=b.parser(this.options.strict,{trim:false,normalize:false,xmlns:this.options.xmlns});this.saxParser.errThrown=false;this.saxParser.onerror=function(r){return function(i){r.saxParser.resume();if(!r.saxParser.errThrown){r.saxParser.errThrown=true;return r.emit("error",i)}}}(this);this.saxParser.onend=function(r){return function(){if(!r.saxParser.ended){r.saxParser.ended=true;return r.emit("end",r.resultObject)}}}(this);this.saxParser.ended=false;this.EXPLICIT_CHARKEY=this.options.explicitCharkey;this.resultObject=null;o=[];r=this.options.attrkey;i=this.options.charkey;this.saxParser.onopentag=function(a){return function(s){var l,v,b,y,A;b={};b[i]="";if(!a.options.ignoreAttrs){A=s.attributes;for(l in A){if(!x.call(A,l))continue;if(!(r in b)&&!a.options.mergeAttrs){b[r]={}}v=a.options.attrValueProcessors?u(a.options.attrValueProcessors,s.attributes[l],l):s.attributes[l];y=a.options.attrNameProcessors?u(a.options.attrNameProcessors,l):l;if(a.options.mergeAttrs){a.assignOrPush(b,y,v)}else{b[r][y]=v}}}b["#name"]=a.options.tagNameProcessors?u(a.options.tagNameProcessors,s.name):s.name;if(a.options.xmlns){b[a.options.xmlnskey]={uri:s.uri,local:s.local}}return o.push(b)}}(this);this.saxParser.onclosetag=function(r){return function(){var a,s,v,b,y,A,E,M,L,P;A=o.pop();y=A["#name"];if(!r.options.explicitChildren||!r.options.preserveChildrenOrder){delete A["#name"]}if(A.cdata===true){a=A.cdata;delete A.cdata}L=o[o.length-1];if(A[i].match(/^\s*$/)&&!a){s=A[i];delete A[i]}else{if(r.options.trim){A[i]=A[i].trim()}if(r.options.normalize){A[i]=A[i].replace(/\s{2,}/g," ").trim()}A[i]=r.options.valueProcessors?u(r.options.valueProcessors,A[i],y):A[i];if(Object.keys(A).length===1&&i in A&&!r.EXPLICIT_CHARKEY){A=A[i]}}if(l(A)){A=r.options.emptyTag!==""?r.options.emptyTag:s}if(r.options.validator!=null){P="/"+function(){var r,i,a;a=[];for(r=0,i=o.length;r<i;r++){b=o[r];a.push(b["#name"])}return a}().concat(y).join("/");(function(){var i;try{return A=r.options.validator(P,L&&L[y],A)}catch(a){i=a;return r.emit("error",i)}})()}if(r.options.explicitChildren&&!r.options.mergeAttrs&&typeof A==="object"){if(!r.options.preserveChildrenOrder){b={};if(r.options.attrkey in A){b[r.options.attrkey]=A[r.options.attrkey];delete A[r.options.attrkey]}if(!r.options.charsAsChildren&&r.options.charkey in A){b[r.options.charkey]=A[r.options.charkey];delete A[r.options.charkey]}if(Object.getOwnPropertyNames(A).length>0){b[r.options.childkey]=A}A=b}else if(L){L[r.options.childkey]=L[r.options.childkey]||[];E={};for(v in A){if(!x.call(A,v))continue;E[v]=A[v]}L[r.options.childkey].push(E);delete A["#name"];if(Object.keys(A).length===1&&i in A&&!r.EXPLICIT_CHARKEY){A=A[i]}}}if(o.length>0){return r.assignOrPush(L,y,A)}else{if(r.options.explicitRoot){M=A;A={};A[y]=M}r.resultObject=A;r.saxParser.ended=true;return r.emit("end",r.resultObject)}}}(this);a=function(r){return function(a){var s,l;l=o[o.length-1];if(l){l[i]+=a;if(r.options.explicitChildren&&r.options.preserveChildrenOrder&&r.options.charsAsChildren&&(r.options.includeWhiteChars||a.replace(/\\n/g,"").trim()!=="")){l[r.options.childkey]=l[r.options.childkey]||[];s={"#name":"__text__"};s[i]=a;if(r.options.normalize){s[i]=s[i].replace(/\s{2,}/g," ").trim()}l[r.options.childkey].push(s)}return l}}}(this);this.saxParser.ontext=a;return this.saxParser.oncdata=function(r){return function(r){var i;i=a(r);if(i){return i.cdata=true}}}(this)};Parser.prototype.parseString=function(i,a){var o;if(a!=null&&typeof a==="function"){this.on("end",(function(r){this.reset();return a(null,r)}));this.on("error",(function(r){this.reset();return a(r)}))}try{i=i.toString();if(i.trim()===""){this.emit("end",null);return true}i=r.stripBOM(i);if(this.options.async){this.remaining=i;y(this.processAsync);return this.saxParser}return this.saxParser.write(i).close()}catch(r){o=r;if(!(this.saxParser.errThrown||this.saxParser.ended)){this.emit("error",o);return this.saxParser.errThrown=true}else if(this.saxParser.ended){throw o}}};Parser.prototype.parseStringPromise=function(r){return new Promise(function(i){return function(a,o){return i.parseString(r,(function(r,i){if(r){return o(r)}else{return a(i)}}))}}(this))};return Parser}(s);i.parseString=function(r,a,o){var s,l,u;if(o!=null){if(typeof o==="function"){s=o}if(typeof a==="object"){l=a}}else{if(typeof a==="function"){s=a}l={}}u=new i.Parser(l);return u.parseString(r,s)};i.parseStringPromise=function(r,a){var o,s;if(typeof a==="object"){o=a}s=new i.Parser(o);return s.parseStringPromise(r)}}).call(this)},2096:function(r,i){(function(){"use strict";var r;r=new RegExp(/(?!xmlns)^.*:/);i.normalize=function(r){return r.toLowerCase()};i.firstCharLowerCase=function(r){return r.charAt(0).toLowerCase()+r.slice(1)};i.stripPrefix=function(i){return i.replace(r,"")};i.parseNumbers=function(r){if(!isNaN(r)){r=r%1===0?parseInt(r,10):parseFloat(r)}return r};i.parseBooleans=function(r){if(/^(?:true|false)$/i.test(r)){r=r.toLowerCase()==="true"}return r}}).call(this)},8776:function(r,i,a){(function(){"use strict";var r,o,s,l,extend=function(r,i){for(var a in i){if(u.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},u={}.hasOwnProperty;o=a(3617);r=a(7269);s=a(8765);l=a(2096);i.defaults=o.defaults;i.processors=l;i.ValidationError=function(r){extend(ValidationError,r);function ValidationError(r){this.message=r}return ValidationError}(Error);i.Builder=r.Builder;i.Parser=s.Parser;i.parseString=s.parseString;i.parseStringPromise=s.parseStringPromise}).call(this)},9152:function(r){(function(){r.exports={Disconnected:1,Preceding:2,Following:4,Contains:8,ContainedBy:16,ImplementationSpecific:32}}).call(this)},6768:function(r){(function(){r.exports={Element:1,Attribute:2,Text:3,CData:4,EntityReference:5,EntityDeclaration:6,ProcessingInstruction:7,Comment:8,Document:9,DocType:10,DocumentFragment:11,NotationDeclaration:12,Declaration:201,Raw:202,AttributeDeclaration:203,ElementDeclaration:204,Dummy:205}}).call(this)},6919:function(r){(function(){var i,a,o,s,l,u,v,b=[].slice,y={}.hasOwnProperty;i=function(){var r,i,a,o,s,u;u=arguments[0],s=2<=arguments.length?b.call(arguments,1):[];if(l(Object.assign)){Object.assign.apply(null,arguments)}else{for(r=0,a=s.length;r<a;r++){o=s[r];if(o!=null){for(i in o){if(!y.call(o,i))continue;u[i]=o[i]}}}}return u};l=function(r){return!!r&&Object.prototype.toString.call(r)==="[object Function]"};u=function(r){var i;return!!r&&((i=typeof r)==="function"||i==="object")};o=function(r){if(l(Array.isArray)){return Array.isArray(r)}else{return Object.prototype.toString.call(r)==="[object Array]"}};s=function(r){var i;if(o(r)){return!r.length}else{for(i in r){if(!y.call(r,i))continue;return false}return true}};v=function(r){var i,a;return u(r)&&(a=Object.getPrototypeOf(r))&&(i=a.constructor)&&typeof i==="function"&&i instanceof i&&Function.prototype.toString.call(i)===Function.prototype.toString.call(Object)};a=function(r){if(l(r.valueOf)){return r.valueOf()}else{return r}};r.exports.assign=i;r.exports.isFunction=l;r.exports.isObject=u;r.exports.isArray=o;r.exports.isEmpty=s;r.exports.isPlainObject=v;r.exports.getValue=a}).call(this)},8965:function(r){(function(){r.exports={None:0,OpenTag:1,InsideTag:2,CloseTag:3}}).call(this)},6427:function(r,i,a){(function(){var i,o,s;i=a(6768);s=a(4698);r.exports=o=function(){function XMLAttribute(r,a,o){this.parent=r;if(this.parent){this.options=this.parent.options;this.stringify=this.parent.stringify}if(a==null){throw new Error("Missing attribute name. "+this.debugInfo(a))}this.name=this.stringify.name(a);this.value=this.stringify.attValue(o);this.type=i.Attribute;this.isId=false;this.schemaTypeInfo=null}Object.defineProperty(XMLAttribute.prototype,"nodeType",{get:function(){return this.type}});Object.defineProperty(XMLAttribute.prototype,"ownerElement",{get:function(){return this.parent}});Object.defineProperty(XMLAttribute.prototype,"textContent",{get:function(){return this.value},set:function(r){return this.value=r||""}});Object.defineProperty(XMLAttribute.prototype,"namespaceURI",{get:function(){return""}});Object.defineProperty(XMLAttribute.prototype,"prefix",{get:function(){return""}});Object.defineProperty(XMLAttribute.prototype,"localName",{get:function(){return this.name}});Object.defineProperty(XMLAttribute.prototype,"specified",{get:function(){return true}});XMLAttribute.prototype.clone=function(){return Object.create(this)};XMLAttribute.prototype.toString=function(r){return this.options.writer.attribute(this,this.options.writer.filterOptions(r))};XMLAttribute.prototype.debugInfo=function(r){r=r||this.name;if(r==null){return"parent: <"+this.parent.name+">"}else{return"attribute: {"+r+"}, parent: <"+this.parent.name+">"}};XMLAttribute.prototype.isEqualNode=function(r){if(r.namespaceURI!==this.namespaceURI){return false}if(r.prefix!==this.prefix){return false}if(r.localName!==this.localName){return false}if(r.value!==this.value){return false}return true};return XMLAttribute}()}).call(this)},545:function(r,i,a){(function(){var i,o,s,extend=function(r,i){for(var a in i){if(l.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},l={}.hasOwnProperty;i=a(6768);s=a(3196);r.exports=o=function(r){extend(XMLCData,r);function XMLCData(r,a){XMLCData.__super__.constructor.call(this,r);if(a==null){throw new Error("Missing CDATA text. "+this.debugInfo())}this.name="#cdata-section";this.type=i.CData;this.value=this.stringify.cdata(a)}XMLCData.prototype.clone=function(){return Object.create(this)};XMLCData.prototype.toString=function(r){return this.options.writer.cdata(this,this.options.writer.filterOptions(r))};return XMLCData}(s)}).call(this)},3196:function(r,i,a){(function(){var i,o,extend=function(r,i){for(var a in i){if(s.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},s={}.hasOwnProperty;o=a(4698);r.exports=i=function(r){extend(XMLCharacterData,r);function XMLCharacterData(r){XMLCharacterData.__super__.constructor.call(this,r);this.value=""}Object.defineProperty(XMLCharacterData.prototype,"data",{get:function(){return this.value},set:function(r){return this.value=r||""}});Object.defineProperty(XMLCharacterData.prototype,"length",{get:function(){return this.value.length}});Object.defineProperty(XMLCharacterData.prototype,"textContent",{get:function(){return this.value},set:function(r){return this.value=r||""}});XMLCharacterData.prototype.clone=function(){return Object.create(this)};XMLCharacterData.prototype.substringData=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLCharacterData.prototype.appendData=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLCharacterData.prototype.insertData=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLCharacterData.prototype.deleteData=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLCharacterData.prototype.replaceData=function(r,i,a){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLCharacterData.prototype.isEqualNode=function(r){if(!XMLCharacterData.__super__.isEqualNode.apply(this,arguments).isEqualNode(r)){return false}if(r.data!==this.data){return false}return true};return XMLCharacterData}(o)}).call(this)},6057:function(r,i,a){(function(){var i,o,s,extend=function(r,i){for(var a in i){if(l.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},l={}.hasOwnProperty;i=a(6768);o=a(3196);r.exports=s=function(r){extend(XMLComment,r);function XMLComment(r,a){XMLComment.__super__.constructor.call(this,r);if(a==null){throw new Error("Missing comment text. "+this.debugInfo())}this.name="#comment";this.type=i.Comment;this.value=this.stringify.comment(a)}XMLComment.prototype.clone=function(){return Object.create(this)};XMLComment.prototype.toString=function(r){return this.options.writer.comment(this,this.options.writer.filterOptions(r))};return XMLComment}(o)}).call(this)},3361:function(r,i,a){(function(){var i,o,s;o=a(1048);s=a(1859);r.exports=i=function(){function XMLDOMConfiguration(){var r;this.defaultParams={"canonical-form":false,"cdata-sections":false,comments:false,"datatype-normalization":false,"element-content-whitespace":true,entities:true,"error-handler":new o,infoset:true,"validate-if-schema":false,namespaces:true,"namespace-declarations":true,"normalize-characters":false,"schema-location":"","schema-type":"","split-cdata-sections":true,validate:false,"well-formed":true};this.params=r=Object.create(this.defaultParams)}Object.defineProperty(XMLDOMConfiguration.prototype,"parameterNames",{get:function(){return new s(Object.keys(this.defaultParams))}});XMLDOMConfiguration.prototype.getParameter=function(r){if(this.params.hasOwnProperty(r)){return this.params[r]}else{return null}};XMLDOMConfiguration.prototype.canSetParameter=function(r,i){return true};XMLDOMConfiguration.prototype.setParameter=function(r,i){if(i!=null){return this.params[r]=i}else{return delete this.params[r]}};return XMLDOMConfiguration}()}).call(this)},1048:function(r){(function(){var i;r.exports=i=function(){function XMLDOMErrorHandler(){}XMLDOMErrorHandler.prototype.handleError=function(r){throw new Error(r)};return XMLDOMErrorHandler}()}).call(this)},4481:function(r){(function(){var i;r.exports=i=function(){function XMLDOMImplementation(){}XMLDOMImplementation.prototype.hasFeature=function(r,i){return true};XMLDOMImplementation.prototype.createDocumentType=function(r,i,a){throw new Error("This DOM method is not implemented.")};XMLDOMImplementation.prototype.createDocument=function(r,i,a){throw new Error("This DOM method is not implemented.")};XMLDOMImplementation.prototype.createHTMLDocument=function(r){throw new Error("This DOM method is not implemented.")};XMLDOMImplementation.prototype.getFeature=function(r,i){throw new Error("This DOM method is not implemented.")};return XMLDOMImplementation}()}).call(this)},1859:function(r){(function(){var i;r.exports=i=function(){function XMLDOMStringList(r){this.arr=r||[]}Object.defineProperty(XMLDOMStringList.prototype,"length",{get:function(){return this.arr.length}});XMLDOMStringList.prototype.item=function(r){return this.arr[r]||null};XMLDOMStringList.prototype.contains=function(r){return this.arr.indexOf(r)!==-1};return XMLDOMStringList}()}).call(this)},4564:function(r,i,a){(function(){var i,o,s,extend=function(r,i){for(var a in i){if(l.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},l={}.hasOwnProperty;s=a(4698);i=a(6768);r.exports=o=function(r){extend(XMLDTDAttList,r);function XMLDTDAttList(r,a,o,s,l,u){XMLDTDAttList.__super__.constructor.call(this,r);if(a==null){throw new Error("Missing DTD element name. "+this.debugInfo())}if(o==null){throw new Error("Missing DTD attribute name. "+this.debugInfo(a))}if(!s){throw new Error("Missing DTD attribute type. "+this.debugInfo(a))}if(!l){throw new Error("Missing DTD attribute default. "+this.debugInfo(a))}if(l.indexOf("#")!==0){l="#"+l}if(!l.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)){throw new Error("Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. "+this.debugInfo(a))}if(u&&!l.match(/^(#FIXED|#DEFAULT)$/)){throw new Error("Default value only applies to #FIXED or #DEFAULT. "+this.debugInfo(a))}this.elementName=this.stringify.name(a);this.type=i.AttributeDeclaration;this.attributeName=this.stringify.name(o);this.attributeType=this.stringify.dtdAttType(s);if(u){this.defaultValue=this.stringify.dtdAttDefault(u)}this.defaultValueType=l}XMLDTDAttList.prototype.toString=function(r){return this.options.writer.dtdAttList(this,this.options.writer.filterOptions(r))};return XMLDTDAttList}(s)}).call(this)},7461:function(r,i,a){(function(){var i,o,s,extend=function(r,i){for(var a in i){if(l.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},l={}.hasOwnProperty;s=a(4698);i=a(6768);r.exports=o=function(r){extend(XMLDTDElement,r);function XMLDTDElement(r,a,o){XMLDTDElement.__super__.constructor.call(this,r);if(a==null){throw new Error("Missing DTD element name. "+this.debugInfo())}if(!o){o="(#PCDATA)"}if(Array.isArray(o)){o="("+o.join(",")+")"}this.name=this.stringify.name(a);this.type=i.ElementDeclaration;this.value=this.stringify.dtdElementValue(o)}XMLDTDElement.prototype.toString=function(r){return this.options.writer.dtdElement(this,this.options.writer.filterOptions(r))};return XMLDTDElement}(s)}).call(this)},8546:function(r,i,a){(function(){var i,o,s,l,extend=function(r,i){for(var a in i){if(u.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},u={}.hasOwnProperty;l=a(6919).isObject;s=a(4698);i=a(6768);r.exports=o=function(r){extend(XMLDTDEntity,r);function XMLDTDEntity(r,a,o,s){XMLDTDEntity.__super__.constructor.call(this,r);if(o==null){throw new Error("Missing DTD entity name. "+this.debugInfo(o))}if(s==null){throw new Error("Missing DTD entity value. "+this.debugInfo(o))}this.pe=!!a;this.name=this.stringify.name(o);this.type=i.EntityDeclaration;if(!l(s)){this.value=this.stringify.dtdEntityValue(s);this.internal=true}else{if(!s.pubID&&!s.sysID){throw new Error("Public and/or system identifiers are required for an external entity. "+this.debugInfo(o))}if(s.pubID&&!s.sysID){throw new Error("System identifier is required for a public external entity. "+this.debugInfo(o))}this.internal=false;if(s.pubID!=null){this.pubID=this.stringify.dtdPubID(s.pubID)}if(s.sysID!=null){this.sysID=this.stringify.dtdSysID(s.sysID)}if(s.nData!=null){this.nData=this.stringify.dtdNData(s.nData)}if(this.pe&&this.nData){throw new Error("Notation declaration is not allowed in a parameter entity. "+this.debugInfo(o))}}}Object.defineProperty(XMLDTDEntity.prototype,"publicId",{get:function(){return this.pubID}});Object.defineProperty(XMLDTDEntity.prototype,"systemId",{get:function(){return this.sysID}});Object.defineProperty(XMLDTDEntity.prototype,"notationName",{get:function(){return this.nData||null}});Object.defineProperty(XMLDTDEntity.prototype,"inputEncoding",{get:function(){return null}});Object.defineProperty(XMLDTDEntity.prototype,"xmlEncoding",{get:function(){return null}});Object.defineProperty(XMLDTDEntity.prototype,"xmlVersion",{get:function(){return null}});XMLDTDEntity.prototype.toString=function(r){return this.options.writer.dtdEntity(this,this.options.writer.filterOptions(r))};return XMLDTDEntity}(s)}).call(this)},958:function(r,i,a){(function(){var i,o,s,extend=function(r,i){for(var a in i){if(l.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},l={}.hasOwnProperty;s=a(4698);i=a(6768);r.exports=o=function(r){extend(XMLDTDNotation,r);function XMLDTDNotation(r,a,o){XMLDTDNotation.__super__.constructor.call(this,r);if(a==null){throw new Error("Missing DTD notation name. "+this.debugInfo(a))}if(!o.pubID&&!o.sysID){throw new Error("Public or system identifiers are required for an external entity. "+this.debugInfo(a))}this.name=this.stringify.name(a);this.type=i.NotationDeclaration;if(o.pubID!=null){this.pubID=this.stringify.dtdPubID(o.pubID)}if(o.sysID!=null){this.sysID=this.stringify.dtdSysID(o.sysID)}}Object.defineProperty(XMLDTDNotation.prototype,"publicId",{get:function(){return this.pubID}});Object.defineProperty(XMLDTDNotation.prototype,"systemId",{get:function(){return this.sysID}});XMLDTDNotation.prototype.toString=function(r){return this.options.writer.dtdNotation(this,this.options.writer.filterOptions(r))};return XMLDTDNotation}(s)}).call(this)},6557:function(r,i,a){(function(){var i,o,s,l,extend=function(r,i){for(var a in i){if(u.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},u={}.hasOwnProperty;l=a(6919).isObject;s=a(4698);i=a(6768);r.exports=o=function(r){extend(XMLDeclaration,r);function XMLDeclaration(r,a,o,s){var u;XMLDeclaration.__super__.constructor.call(this,r);if(l(a)){u=a,a=u.version,o=u.encoding,s=u.standalone}if(!a){a="1.0"}this.type=i.Declaration;this.version=this.stringify.xmlVersion(a);if(o!=null){this.encoding=this.stringify.xmlEncoding(o)}if(s!=null){this.standalone=this.stringify.xmlStandalone(s)}}XMLDeclaration.prototype.toString=function(r){return this.options.writer.declaration(this,this.options.writer.filterOptions(r))};return XMLDeclaration}(s)}).call(this)},8544:function(r,i,a){(function(){var i,o,s,l,u,v,b,y,x,extend=function(r,i){for(var a in i){if(A.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},A={}.hasOwnProperty;x=a(6919).isObject;y=a(4698);i=a(6768);o=a(4564);l=a(8546);s=a(7461);u=a(958);b=a(1229);r.exports=v=function(r){extend(XMLDocType,r);function XMLDocType(r,a,o){var s,l,u,v,b,y;XMLDocType.__super__.constructor.call(this,r);this.type=i.DocType;if(r.children){v=r.children;for(l=0,u=v.length;l<u;l++){s=v[l];if(s.type===i.Element){this.name=s.name;break}}}this.documentObject=r;if(x(a)){b=a,a=b.pubID,o=b.sysID}if(o==null){y=[a,o],o=y[0],a=y[1]}if(a!=null){this.pubID=this.stringify.dtdPubID(a)}if(o!=null){this.sysID=this.stringify.dtdSysID(o)}}Object.defineProperty(XMLDocType.prototype,"entities",{get:function(){var r,a,o,s,l;s={};l=this.children;for(a=0,o=l.length;a<o;a++){r=l[a];if(r.type===i.EntityDeclaration&&!r.pe){s[r.name]=r}}return new b(s)}});Object.defineProperty(XMLDocType.prototype,"notations",{get:function(){var r,a,o,s,l;s={};l=this.children;for(a=0,o=l.length;a<o;a++){r=l[a];if(r.type===i.NotationDeclaration){s[r.name]=r}}return new b(s)}});Object.defineProperty(XMLDocType.prototype,"publicId",{get:function(){return this.pubID}});Object.defineProperty(XMLDocType.prototype,"systemId",{get:function(){return this.sysID}});Object.defineProperty(XMLDocType.prototype,"internalSubset",{get:function(){throw new Error("This DOM method is not implemented."+this.debugInfo())}});XMLDocType.prototype.element=function(r,i){var a;a=new s(this,r,i);this.children.push(a);return this};XMLDocType.prototype.attList=function(r,i,a,s,l){var u;u=new o(this,r,i,a,s,l);this.children.push(u);return this};XMLDocType.prototype.entity=function(r,i){var a;a=new l(this,false,r,i);this.children.push(a);return this};XMLDocType.prototype.pEntity=function(r,i){var a;a=new l(this,true,r,i);this.children.push(a);return this};XMLDocType.prototype.notation=function(r,i){var a;a=new u(this,r,i);this.children.push(a);return this};XMLDocType.prototype.toString=function(r){return this.options.writer.docType(this,this.options.writer.filterOptions(r))};XMLDocType.prototype.ele=function(r,i){return this.element(r,i)};XMLDocType.prototype.att=function(r,i,a,o,s){return this.attList(r,i,a,o,s)};XMLDocType.prototype.ent=function(r,i){return this.entity(r,i)};XMLDocType.prototype.pent=function(r,i){return this.pEntity(r,i)};XMLDocType.prototype.not=function(r,i){return this.notation(r,i)};XMLDocType.prototype.up=function(){return this.root()||this.documentObject};XMLDocType.prototype.isEqualNode=function(r){if(!XMLDocType.__super__.isEqualNode.apply(this,arguments).isEqualNode(r)){return false}if(r.name!==this.name){return false}if(r.publicId!==this.publicId){return false}if(r.systemId!==this.systemId){return false}return true};return XMLDocType}(y)}).call(this)},8328:function(r,i,a){(function(){var i,o,s,l,u,v,b,y,extend=function(r,i){for(var a in i){if(x.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},x={}.hasOwnProperty;y=a(6919).isPlainObject;s=a(4481);o=a(3361);u=a(4698);i=a(6768);b=a(9510);v=a(5770);r.exports=l=function(r){extend(XMLDocument,r);function XMLDocument(r){XMLDocument.__super__.constructor.call(this,null);this.name="#document";this.type=i.Document;this.documentURI=null;this.domConfig=new o;r||(r={});if(!r.writer){r.writer=new v}this.options=r;this.stringify=new b(r)}Object.defineProperty(XMLDocument.prototype,"implementation",{value:new s});Object.defineProperty(XMLDocument.prototype,"doctype",{get:function(){var r,a,o,s;s=this.children;for(a=0,o=s.length;a<o;a++){r=s[a];if(r.type===i.DocType){return r}}return null}});Object.defineProperty(XMLDocument.prototype,"documentElement",{get:function(){return this.rootObject||null}});Object.defineProperty(XMLDocument.prototype,"inputEncoding",{get:function(){return null}});Object.defineProperty(XMLDocument.prototype,"strictErrorChecking",{get:function(){return false}});Object.defineProperty(XMLDocument.prototype,"xmlEncoding",{get:function(){if(this.children.length!==0&&this.children[0].type===i.Declaration){return this.children[0].encoding}else{return null}}});Object.defineProperty(XMLDocument.prototype,"xmlStandalone",{get:function(){if(this.children.length!==0&&this.children[0].type===i.Declaration){return this.children[0].standalone==="yes"}else{return false}}});Object.defineProperty(XMLDocument.prototype,"xmlVersion",{get:function(){if(this.children.length!==0&&this.children[0].type===i.Declaration){return this.children[0].version}else{return"1.0"}}});Object.defineProperty(XMLDocument.prototype,"URL",{get:function(){return this.documentURI}});Object.defineProperty(XMLDocument.prototype,"origin",{get:function(){return null}});Object.defineProperty(XMLDocument.prototype,"compatMode",{get:function(){return null}});Object.defineProperty(XMLDocument.prototype,"characterSet",{get:function(){return null}});Object.defineProperty(XMLDocument.prototype,"contentType",{get:function(){return null}});XMLDocument.prototype.end=function(r){var i;i={};if(!r){r=this.options.writer}else if(y(r)){i=r;r=this.options.writer}return r.document(this,r.filterOptions(i))};XMLDocument.prototype.toString=function(r){return this.options.writer.document(this,this.options.writer.filterOptions(r))};XMLDocument.prototype.createElement=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.createDocumentFragment=function(){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.createTextNode=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.createComment=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.createCDATASection=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.createProcessingInstruction=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.createAttribute=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.createEntityReference=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.getElementsByTagName=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.importNode=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.createElementNS=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.createAttributeNS=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.getElementsByTagNameNS=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.getElementById=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.adoptNode=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.normalizeDocument=function(){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.renameNode=function(r,i,a){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.getElementsByClassName=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.createEvent=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.createRange=function(){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.createNodeIterator=function(r,i,a){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLDocument.prototype.createTreeWalker=function(r,i,a){throw new Error("This DOM method is not implemented."+this.debugInfo())};return XMLDocument}(u)}).call(this)},1585:function(r,i,a){(function(){var i,o,s,l,u,v,b,y,x,A,E,M,L,P,T,I,O,S,k,D,z,R,B,V,j={}.hasOwnProperty;V=a(6919),R=V.isObject,z=V.isFunction,B=V.isPlainObject,D=V.getValue;i=a(6768);M=a(8328);P=a(255);l=a(545);u=a(6057);I=a(4609);k=a(3566);T=a(7448);A=a(6557);E=a(8544);v=a(4564);y=a(8546);b=a(7461);x=a(958);s=a(6427);S=a(9510);O=a(5770);o=a(8965);r.exports=L=function(){function XMLDocumentCB(r,a,o){var s;this.name="?xml";this.type=i.Document;r||(r={});s={};if(!r.writer){r.writer=new O}else if(B(r.writer)){s=r.writer;r.writer=new O}this.options=r;this.writer=r.writer;this.writerOptions=this.writer.filterOptions(s);this.stringify=new S(r);this.onDataCallback=a||function(){};this.onEndCallback=o||function(){};this.currentNode=null;this.currentLevel=-1;this.openTags={};this.documentStarted=false;this.documentCompleted=false;this.root=null}XMLDocumentCB.prototype.createChildNode=function(r){var a,o,s,l,u,v,b,y;switch(r.type){case i.CData:this.cdata(r.value);break;case i.Comment:this.comment(r.value);break;case i.Element:s={};b=r.attribs;for(o in b){if(!j.call(b,o))continue;a=b[o];s[o]=a.value}this.node(r.name,s);break;case i.Dummy:this.dummy();break;case i.Raw:this.raw(r.value);break;case i.Text:this.text(r.value);break;case i.ProcessingInstruction:this.instruction(r.target,r.value);break;default:throw new Error("This XML node type is not supported in a JS object: "+r.constructor.name)}y=r.children;for(u=0,v=y.length;u<v;u++){l=y[u];this.createChildNode(l);if(l.type===i.Element){this.up()}}return this};XMLDocumentCB.prototype.dummy=function(){return this};XMLDocumentCB.prototype.node=function(r,i,a){var o;if(r==null){throw new Error("Missing node name.")}if(this.root&&this.currentLevel===-1){throw new Error("Document can only have one root node. "+this.debugInfo(r))}this.openCurrent();r=D(r);if(i==null){i={}}i=D(i);if(!R(i)){o=[i,a],a=o[0],i=o[1]}this.currentNode=new P(this,r,i);this.currentNode.children=false;this.currentLevel++;this.openTags[this.currentLevel]=this.currentNode;if(a!=null){this.text(a)}return this};XMLDocumentCB.prototype.element=function(r,a,o){var s,l,u,v,b,y;if(this.currentNode&&this.currentNode.type===i.DocType){this.dtdElement.apply(this,arguments)}else{if(Array.isArray(r)||R(r)||z(r)){v=this.options.noValidation;this.options.noValidation=true;y=new M(this.options).element("TEMP_ROOT");y.element(r);this.options.noValidation=v;b=y.children;for(l=0,u=b.length;l<u;l++){s=b[l];this.createChildNode(s);if(s.type===i.Element){this.up()}}}else{this.node(r,a,o)}}return this};XMLDocumentCB.prototype.attribute=function(r,i){var a,o;if(!this.currentNode||this.currentNode.children){throw new Error("att() can only be used immediately after an ele() call in callback mode. "+this.debugInfo(r))}if(r!=null){r=D(r)}if(R(r)){for(a in r){if(!j.call(r,a))continue;o=r[a];this.attribute(a,o)}}else{if(z(i)){i=i.apply()}if(this.options.keepNullAttributes&&i==null){this.currentNode.attribs[r]=new s(this,r,"")}else if(i!=null){this.currentNode.attribs[r]=new s(this,r,i)}}return this};XMLDocumentCB.prototype.text=function(r){var i;this.openCurrent();i=new k(this,r);this.onData(this.writer.text(i,this.writerOptions,this.currentLevel+1),this.currentLevel+1);return this};XMLDocumentCB.prototype.cdata=function(r){var i;this.openCurrent();i=new l(this,r);this.onData(this.writer.cdata(i,this.writerOptions,this.currentLevel+1),this.currentLevel+1);return this};XMLDocumentCB.prototype.comment=function(r){var i;this.openCurrent();i=new u(this,r);this.onData(this.writer.comment(i,this.writerOptions,this.currentLevel+1),this.currentLevel+1);return this};XMLDocumentCB.prototype.raw=function(r){var i;this.openCurrent();i=new I(this,r);this.onData(this.writer.raw(i,this.writerOptions,this.currentLevel+1),this.currentLevel+1);return this};XMLDocumentCB.prototype.instruction=function(r,i){var a,o,s,l,u;this.openCurrent();if(r!=null){r=D(r)}if(i!=null){i=D(i)}if(Array.isArray(r)){for(a=0,l=r.length;a<l;a++){o=r[a];this.instruction(o)}}else if(R(r)){for(o in r){if(!j.call(r,o))continue;s=r[o];this.instruction(o,s)}}else{if(z(i)){i=i.apply()}u=new T(this,r,i);this.onData(this.writer.processingInstruction(u,this.writerOptions,this.currentLevel+1),this.currentLevel+1)}return this};XMLDocumentCB.prototype.declaration=function(r,i,a){var o;this.openCurrent();if(this.documentStarted){throw new Error("declaration() must be the first node.")}o=new A(this,r,i,a);this.onData(this.writer.declaration(o,this.writerOptions,this.currentLevel+1),this.currentLevel+1);return this};XMLDocumentCB.prototype.doctype=function(r,i,a){this.openCurrent();if(r==null){throw new Error("Missing root node name.")}if(this.root){throw new Error("dtd() must come before the root node.")}this.currentNode=new E(this,i,a);this.currentNode.rootNodeName=r;this.currentNode.children=false;this.currentLevel++;this.openTags[this.currentLevel]=this.currentNode;return this};XMLDocumentCB.prototype.dtdElement=function(r,i){var a;this.openCurrent();a=new b(this,r,i);this.onData(this.writer.dtdElement(a,this.writerOptions,this.currentLevel+1),this.currentLevel+1);return this};XMLDocumentCB.prototype.attList=function(r,i,a,o,s){var l;this.openCurrent();l=new v(this,r,i,a,o,s);this.onData(this.writer.dtdAttList(l,this.writerOptions,this.currentLevel+1),this.currentLevel+1);return this};XMLDocumentCB.prototype.entity=function(r,i){var a;this.openCurrent();a=new y(this,false,r,i);this.onData(this.writer.dtdEntity(a,this.writerOptions,this.currentLevel+1),this.currentLevel+1);return this};XMLDocumentCB.prototype.pEntity=function(r,i){var a;this.openCurrent();a=new y(this,true,r,i);this.onData(this.writer.dtdEntity(a,this.writerOptions,this.currentLevel+1),this.currentLevel+1);return this};XMLDocumentCB.prototype.notation=function(r,i){var a;this.openCurrent();a=new x(this,r,i);this.onData(this.writer.dtdNotation(a,this.writerOptions,this.currentLevel+1),this.currentLevel+1);return this};XMLDocumentCB.prototype.up=function(){if(this.currentLevel<0){throw new Error("The document node has no parent.")}if(this.currentNode){if(this.currentNode.children){this.closeNode(this.currentNode)}else{this.openNode(this.currentNode)}this.currentNode=null}else{this.closeNode(this.openTags[this.currentLevel])}delete this.openTags[this.currentLevel];this.currentLevel--;return this};XMLDocumentCB.prototype.end=function(){while(this.currentLevel>=0){this.up()}return this.onEnd()};XMLDocumentCB.prototype.openCurrent=function(){if(this.currentNode){this.currentNode.children=true;return this.openNode(this.currentNode)}};XMLDocumentCB.prototype.openNode=function(r){var a,s,l,u;if(!r.isOpen){if(!this.root&&this.currentLevel===0&&r.type===i.Element){this.root=r}s="";if(r.type===i.Element){this.writerOptions.state=o.OpenTag;s=this.writer.indent(r,this.writerOptions,this.currentLevel)+"<"+r.name;u=r.attribs;for(l in u){if(!j.call(u,l))continue;a=u[l];s+=this.writer.attribute(a,this.writerOptions,this.currentLevel)}s+=(r.children?">":"/>")+this.writer.endline(r,this.writerOptions,this.currentLevel);this.writerOptions.state=o.InsideTag}else{this.writerOptions.state=o.OpenTag;s=this.writer.indent(r,this.writerOptions,this.currentLevel)+"<!DOCTYPE "+r.rootNodeName;if(r.pubID&&r.sysID){s+=' PUBLIC "'+r.pubID+'" "'+r.sysID+'"'}else if(r.sysID){s+=' SYSTEM "'+r.sysID+'"'}if(r.children){s+=" [";this.writerOptions.state=o.InsideTag}else{this.writerOptions.state=o.CloseTag;s+=">"}s+=this.writer.endline(r,this.writerOptions,this.currentLevel)}this.onData(s,this.currentLevel);return r.isOpen=true}};XMLDocumentCB.prototype.closeNode=function(r){var a;if(!r.isClosed){a="";this.writerOptions.state=o.CloseTag;if(r.type===i.Element){a=this.writer.indent(r,this.writerOptions,this.currentLevel)+"</"+r.name+">"+this.writer.endline(r,this.writerOptions,this.currentLevel)}else{a=this.writer.indent(r,this.writerOptions,this.currentLevel)+"]>"+this.writer.endline(r,this.writerOptions,this.currentLevel)}this.writerOptions.state=o.None;this.onData(a,this.currentLevel);return r.isClosed=true}};XMLDocumentCB.prototype.onData=function(r,i){this.documentStarted=true;return this.onDataCallback(r,i+1)};XMLDocumentCB.prototype.onEnd=function(){this.documentCompleted=true;return this.onEndCallback()};XMLDocumentCB.prototype.debugInfo=function(r){if(r==null){return""}else{return"node: <"+r+">"}};XMLDocumentCB.prototype.ele=function(){return this.element.apply(this,arguments)};XMLDocumentCB.prototype.nod=function(r,i,a){return this.node(r,i,a)};XMLDocumentCB.prototype.txt=function(r){return this.text(r)};XMLDocumentCB.prototype.dat=function(r){return this.cdata(r)};XMLDocumentCB.prototype.com=function(r){return this.comment(r)};XMLDocumentCB.prototype.ins=function(r,i){return this.instruction(r,i)};XMLDocumentCB.prototype.dec=function(r,i,a){return this.declaration(r,i,a)};XMLDocumentCB.prototype.dtd=function(r,i,a){return this.doctype(r,i,a)};XMLDocumentCB.prototype.e=function(r,i,a){return this.element(r,i,a)};XMLDocumentCB.prototype.n=function(r,i,a){return this.node(r,i,a)};XMLDocumentCB.prototype.t=function(r){return this.text(r)};XMLDocumentCB.prototype.d=function(r){return this.cdata(r)};XMLDocumentCB.prototype.c=function(r){return this.comment(r)};XMLDocumentCB.prototype.r=function(r){return this.raw(r)};XMLDocumentCB.prototype.i=function(r,i){return this.instruction(r,i)};XMLDocumentCB.prototype.att=function(){if(this.currentNode&&this.currentNode.type===i.DocType){return this.attList.apply(this,arguments)}else{return this.attribute.apply(this,arguments)}};XMLDocumentCB.prototype.a=function(){if(this.currentNode&&this.currentNode.type===i.DocType){return this.attList.apply(this,arguments)}else{return this.attribute.apply(this,arguments)}};XMLDocumentCB.prototype.ent=function(r,i){return this.entity(r,i)};XMLDocumentCB.prototype.pent=function(r,i){return this.pEntity(r,i)};XMLDocumentCB.prototype.not=function(r,i){return this.notation(r,i)};return XMLDocumentCB}()}).call(this)},362:function(r,i,a){(function(){var i,o,s,extend=function(r,i){for(var a in i){if(l.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},l={}.hasOwnProperty;s=a(4698);i=a(6768);r.exports=o=function(r){extend(XMLDummy,r);function XMLDummy(r){XMLDummy.__super__.constructor.call(this,r);this.type=i.Dummy}XMLDummy.prototype.clone=function(){return Object.create(this)};XMLDummy.prototype.toString=function(r){return""};return XMLDummy}(s)}).call(this)},255:function(r,i,a){(function(){var i,o,s,l,u,v,b,y,x,extend=function(r,i){for(var a in i){if(A.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},A={}.hasOwnProperty;x=a(6919),y=x.isObject,b=x.isFunction,v=x.getValue;u=a(4698);i=a(6768);o=a(6427);l=a(1229);r.exports=s=function(r){extend(XMLElement,r);function XMLElement(r,a,o){var s,l,u,v;XMLElement.__super__.constructor.call(this,r);if(a==null){throw new Error("Missing element name. "+this.debugInfo())}this.name=this.stringify.name(a);this.type=i.Element;this.attribs={};this.schemaTypeInfo=null;if(o!=null){this.attribute(o)}if(r.type===i.Document){this.isRoot=true;this.documentObject=r;r.rootObject=this;if(r.children){v=r.children;for(l=0,u=v.length;l<u;l++){s=v[l];if(s.type===i.DocType){s.name=this.name;break}}}}}Object.defineProperty(XMLElement.prototype,"tagName",{get:function(){return this.name}});Object.defineProperty(XMLElement.prototype,"namespaceURI",{get:function(){return""}});Object.defineProperty(XMLElement.prototype,"prefix",{get:function(){return""}});Object.defineProperty(XMLElement.prototype,"localName",{get:function(){return this.name}});Object.defineProperty(XMLElement.prototype,"id",{get:function(){throw new Error("This DOM method is not implemented."+this.debugInfo())}});Object.defineProperty(XMLElement.prototype,"className",{get:function(){throw new Error("This DOM method is not implemented."+this.debugInfo())}});Object.defineProperty(XMLElement.prototype,"classList",{get:function(){throw new Error("This DOM method is not implemented."+this.debugInfo())}});Object.defineProperty(XMLElement.prototype,"attributes",{get:function(){if(!this.attributeMap||!this.attributeMap.nodes){this.attributeMap=new l(this.attribs)}return this.attributeMap}});XMLElement.prototype.clone=function(){var r,i,a,o;a=Object.create(this);if(a.isRoot){a.documentObject=null}a.attribs={};o=this.attribs;for(i in o){if(!A.call(o,i))continue;r=o[i];a.attribs[i]=r.clone()}a.children=[];this.children.forEach((function(r){var i;i=r.clone();i.parent=a;return a.children.push(i)}));return a};XMLElement.prototype.attribute=function(r,i){var a,s;if(r!=null){r=v(r)}if(y(r)){for(a in r){if(!A.call(r,a))continue;s=r[a];this.attribute(a,s)}}else{if(b(i)){i=i.apply()}if(this.options.keepNullAttributes&&i==null){this.attribs[r]=new o(this,r,"")}else if(i!=null){this.attribs[r]=new o(this,r,i)}}return this};XMLElement.prototype.removeAttribute=function(r){var i,a,o;if(r==null){throw new Error("Missing attribute name. "+this.debugInfo())}r=v(r);if(Array.isArray(r)){for(a=0,o=r.length;a<o;a++){i=r[a];delete this.attribs[i]}}else{delete this.attribs[r]}return this};XMLElement.prototype.toString=function(r){return this.options.writer.element(this,this.options.writer.filterOptions(r))};XMLElement.prototype.att=function(r,i){return this.attribute(r,i)};XMLElement.prototype.a=function(r,i){return this.attribute(r,i)};XMLElement.prototype.getAttribute=function(r){if(this.attribs.hasOwnProperty(r)){return this.attribs[r].value}else{return null}};XMLElement.prototype.setAttribute=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.getAttributeNode=function(r){if(this.attribs.hasOwnProperty(r)){return this.attribs[r]}else{return null}};XMLElement.prototype.setAttributeNode=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.removeAttributeNode=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.getElementsByTagName=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.getAttributeNS=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.setAttributeNS=function(r,i,a){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.removeAttributeNS=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.getAttributeNodeNS=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.setAttributeNodeNS=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.getElementsByTagNameNS=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.hasAttribute=function(r){return this.attribs.hasOwnProperty(r)};XMLElement.prototype.hasAttributeNS=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.setIdAttribute=function(r,i){if(this.attribs.hasOwnProperty(r)){return this.attribs[r].isId}else{return i}};XMLElement.prototype.setIdAttributeNS=function(r,i,a){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.setIdAttributeNode=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.getElementsByTagName=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.getElementsByTagNameNS=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.getElementsByClassName=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLElement.prototype.isEqualNode=function(r){var i,a,o;if(!XMLElement.__super__.isEqualNode.apply(this,arguments).isEqualNode(r)){return false}if(r.namespaceURI!==this.namespaceURI){return false}if(r.prefix!==this.prefix){return false}if(r.localName!==this.localName){return false}if(r.attribs.length!==this.attribs.length){return false}for(i=a=0,o=this.attribs.length-1;0<=o?a<=o:a>=o;i=0<=o?++a:--a){if(!this.attribs[i].isEqualNode(r.attribs[i])){return false}}return true};return XMLElement}(u)}).call(this)},1229:function(r){(function(){var i;r.exports=i=function(){function XMLNamedNodeMap(r){this.nodes=r}Object.defineProperty(XMLNamedNodeMap.prototype,"length",{get:function(){return Object.keys(this.nodes).length||0}});XMLNamedNodeMap.prototype.clone=function(){return this.nodes=null};XMLNamedNodeMap.prototype.getNamedItem=function(r){return this.nodes[r]};XMLNamedNodeMap.prototype.setNamedItem=function(r){var i;i=this.nodes[r.nodeName];this.nodes[r.nodeName]=r;return i||null};XMLNamedNodeMap.prototype.removeNamedItem=function(r){var i;i=this.nodes[r];delete this.nodes[r];return i||null};XMLNamedNodeMap.prototype.item=function(r){return this.nodes[Object.keys(this.nodes)[r]]||null};XMLNamedNodeMap.prototype.getNamedItemNS=function(r,i){throw new Error("This DOM method is not implemented.")};XMLNamedNodeMap.prototype.setNamedItemNS=function(r){throw new Error("This DOM method is not implemented.")};XMLNamedNodeMap.prototype.removeNamedItemNS=function(r,i){throw new Error("This DOM method is not implemented.")};return XMLNamedNodeMap}()}).call(this)},4698:function(r,i,a){(function(){var i,o,s,l,u,v,b,y,x,A,E,M,L,P,T,I,O,S,k,D={}.hasOwnProperty;k=a(6919),S=k.isObject,O=k.isFunction,I=k.isEmpty,T=k.getValue;y=null;s=null;l=null;u=null;v=null;L=null;P=null;M=null;b=null;o=null;E=null;x=null;i=null;r.exports=A=function(){function XMLNode(r){this.parent=r;if(this.parent){this.options=this.parent.options;this.stringify=this.parent.stringify}this.value=null;this.children=[];this.baseURI=null;if(!y){y=a(255);s=a(545);l=a(6057);u=a(6557);v=a(8544);L=a(4609);P=a(3566);M=a(7448);b=a(362);o=a(6768);E=a(9139);x=a(1229);i=a(9152)}}Object.defineProperty(XMLNode.prototype,"nodeName",{get:function(){return this.name}});Object.defineProperty(XMLNode.prototype,"nodeType",{get:function(){return this.type}});Object.defineProperty(XMLNode.prototype,"nodeValue",{get:function(){return this.value}});Object.defineProperty(XMLNode.prototype,"parentNode",{get:function(){return this.parent}});Object.defineProperty(XMLNode.prototype,"childNodes",{get:function(){if(!this.childNodeList||!this.childNodeList.nodes){this.childNodeList=new E(this.children)}return this.childNodeList}});Object.defineProperty(XMLNode.prototype,"firstChild",{get:function(){return this.children[0]||null}});Object.defineProperty(XMLNode.prototype,"lastChild",{get:function(){return this.children[this.children.length-1]||null}});Object.defineProperty(XMLNode.prototype,"previousSibling",{get:function(){var r;r=this.parent.children.indexOf(this);return this.parent.children[r-1]||null}});Object.defineProperty(XMLNode.prototype,"nextSibling",{get:function(){var r;r=this.parent.children.indexOf(this);return this.parent.children[r+1]||null}});Object.defineProperty(XMLNode.prototype,"ownerDocument",{get:function(){return this.document()||null}});Object.defineProperty(XMLNode.prototype,"textContent",{get:function(){var r,i,a,s,l;if(this.nodeType===o.Element||this.nodeType===o.DocumentFragment){l="";s=this.children;for(i=0,a=s.length;i<a;i++){r=s[i];if(r.textContent){l+=r.textContent}}return l}else{return null}},set:function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())}});XMLNode.prototype.setParent=function(r){var i,a,o,s,l;this.parent=r;if(r){this.options=r.options;this.stringify=r.stringify}s=this.children;l=[];for(a=0,o=s.length;a<o;a++){i=s[a];l.push(i.setParent(this))}return l};XMLNode.prototype.element=function(r,i,a){var o,s,l,u,v,b,y,x,A,E,M;b=null;if(i===null&&a==null){A=[{},null],i=A[0],a=A[1]}if(i==null){i={}}i=T(i);if(!S(i)){E=[i,a],a=E[0],i=E[1]}if(r!=null){r=T(r)}if(Array.isArray(r)){for(l=0,y=r.length;l<y;l++){s=r[l];b=this.element(s)}}else if(O(r)){b=this.element(r.apply())}else if(S(r)){for(v in r){if(!D.call(r,v))continue;M=r[v];if(O(M)){M=M.apply()}if(!this.options.ignoreDecorators&&this.stringify.convertAttKey&&v.indexOf(this.stringify.convertAttKey)===0){b=this.attribute(v.substr(this.stringify.convertAttKey.length),M)}else if(!this.options.separateArrayItems&&Array.isArray(M)&&I(M)){b=this.dummy()}else if(S(M)&&I(M)){b=this.element(v)}else if(!this.options.keepNullNodes&&M==null){b=this.dummy()}else if(!this.options.separateArrayItems&&Array.isArray(M)){for(u=0,x=M.length;u<x;u++){s=M[u];o={};o[v]=s;b=this.element(o)}}else if(S(M)){if(!this.options.ignoreDecorators&&this.stringify.convertTextKey&&v.indexOf(this.stringify.convertTextKey)===0){b=this.element(M)}else{b=this.element(v);b.element(M)}}else{b=this.element(v,M)}}}else if(!this.options.keepNullNodes&&a===null){b=this.dummy()}else{if(!this.options.ignoreDecorators&&this.stringify.convertTextKey&&r.indexOf(this.stringify.convertTextKey)===0){b=this.text(a)}else if(!this.options.ignoreDecorators&&this.stringify.convertCDataKey&&r.indexOf(this.stringify.convertCDataKey)===0){b=this.cdata(a)}else if(!this.options.ignoreDecorators&&this.stringify.convertCommentKey&&r.indexOf(this.stringify.convertCommentKey)===0){b=this.comment(a)}else if(!this.options.ignoreDecorators&&this.stringify.convertRawKey&&r.indexOf(this.stringify.convertRawKey)===0){b=this.raw(a)}else if(!this.options.ignoreDecorators&&this.stringify.convertPIKey&&r.indexOf(this.stringify.convertPIKey)===0){b=this.instruction(r.substr(this.stringify.convertPIKey.length),a)}else{b=this.node(r,i,a)}}if(b==null){throw new Error("Could not create any elements with: "+r+". "+this.debugInfo())}return b};XMLNode.prototype.insertBefore=function(r,i,a){var o,s,l,u,v;if(r!=null?r.type:void 0){l=r;u=i;l.setParent(this);if(u){s=children.indexOf(u);v=children.splice(s);children.push(l);Array.prototype.push.apply(children,v)}else{children.push(l)}return l}else{if(this.isRoot){throw new Error("Cannot insert elements at root level. "+this.debugInfo(r))}s=this.parent.children.indexOf(this);v=this.parent.children.splice(s);o=this.parent.element(r,i,a);Array.prototype.push.apply(this.parent.children,v);return o}};XMLNode.prototype.insertAfter=function(r,i,a){var o,s,l;if(this.isRoot){throw new Error("Cannot insert elements at root level. "+this.debugInfo(r))}s=this.parent.children.indexOf(this);l=this.parent.children.splice(s+1);o=this.parent.element(r,i,a);Array.prototype.push.apply(this.parent.children,l);return o};XMLNode.prototype.remove=function(){var r,i;if(this.isRoot){throw new Error("Cannot remove the root element. "+this.debugInfo())}r=this.parent.children.indexOf(this);[].splice.apply(this.parent.children,[r,r-r+1].concat(i=[])),i;return this.parent};XMLNode.prototype.node=function(r,i,a){var o,s;if(r!=null){r=T(r)}i||(i={});i=T(i);if(!S(i)){s=[i,a],a=s[0],i=s[1]}o=new y(this,r,i);if(a!=null){o.text(a)}this.children.push(o);return o};XMLNode.prototype.text=function(r){var i;if(S(r)){this.element(r)}i=new P(this,r);this.children.push(i);return this};XMLNode.prototype.cdata=function(r){var i;i=new s(this,r);this.children.push(i);return this};XMLNode.prototype.comment=function(r){var i;i=new l(this,r);this.children.push(i);return this};XMLNode.prototype.commentBefore=function(r){var i,a,o;a=this.parent.children.indexOf(this);o=this.parent.children.splice(a);i=this.parent.comment(r);Array.prototype.push.apply(this.parent.children,o);return this};XMLNode.prototype.commentAfter=function(r){var i,a,o;a=this.parent.children.indexOf(this);o=this.parent.children.splice(a+1);i=this.parent.comment(r);Array.prototype.push.apply(this.parent.children,o);return this};XMLNode.prototype.raw=function(r){var i;i=new L(this,r);this.children.push(i);return this};XMLNode.prototype.dummy=function(){var r;r=new b(this);return r};XMLNode.prototype.instruction=function(r,i){var a,o,s,l,u;if(r!=null){r=T(r)}if(i!=null){i=T(i)}if(Array.isArray(r)){for(l=0,u=r.length;l<u;l++){a=r[l];this.instruction(a)}}else if(S(r)){for(a in r){if(!D.call(r,a))continue;o=r[a];this.instruction(a,o)}}else{if(O(i)){i=i.apply()}s=new M(this,r,i);this.children.push(s)}return this};XMLNode.prototype.instructionBefore=function(r,i){var a,o,s;o=this.parent.children.indexOf(this);s=this.parent.children.splice(o);a=this.parent.instruction(r,i);Array.prototype.push.apply(this.parent.children,s);return this};XMLNode.prototype.instructionAfter=function(r,i){var a,o,s;o=this.parent.children.indexOf(this);s=this.parent.children.splice(o+1);a=this.parent.instruction(r,i);Array.prototype.push.apply(this.parent.children,s);return this};XMLNode.prototype.declaration=function(r,i,a){var s,l;s=this.document();l=new u(s,r,i,a);if(s.children.length===0){s.children.unshift(l)}else if(s.children[0].type===o.Declaration){s.children[0]=l}else{s.children.unshift(l)}return s.root()||s};XMLNode.prototype.dtd=function(r,i){var a,s,l,u,b,y,x,A,E,M;s=this.document();l=new v(s,r,i);E=s.children;for(u=b=0,x=E.length;b<x;u=++b){a=E[u];if(a.type===o.DocType){s.children[u]=l;return l}}M=s.children;for(u=y=0,A=M.length;y<A;u=++y){a=M[u];if(a.isRoot){s.children.splice(u,0,l);return l}}s.children.push(l);return l};XMLNode.prototype.up=function(){if(this.isRoot){throw new Error("The root node has no parent. Use doc() if you need to get the document object.")}return this.parent};XMLNode.prototype.root=function(){var r;r=this;while(r){if(r.type===o.Document){return r.rootObject}else if(r.isRoot){return r}else{r=r.parent}}};XMLNode.prototype.document=function(){var r;r=this;while(r){if(r.type===o.Document){return r}else{r=r.parent}}};XMLNode.prototype.end=function(r){return this.document().end(r)};XMLNode.prototype.prev=function(){var r;r=this.parent.children.indexOf(this);if(r<1){throw new Error("Already at the first node. "+this.debugInfo())}return this.parent.children[r-1]};XMLNode.prototype.next=function(){var r;r=this.parent.children.indexOf(this);if(r===-1||r===this.parent.children.length-1){throw new Error("Already at the last node. "+this.debugInfo())}return this.parent.children[r+1]};XMLNode.prototype.importDocument=function(r){var i;i=r.root().clone();i.parent=this;i.isRoot=false;this.children.push(i);return this};XMLNode.prototype.debugInfo=function(r){var i,a;r=r||this.name;if(r==null&&!((i=this.parent)!=null?i.name:void 0)){return""}else if(r==null){return"parent: <"+this.parent.name+">"}else if(!((a=this.parent)!=null?a.name:void 0)){return"node: <"+r+">"}else{return"node: <"+r+">, parent: <"+this.parent.name+">"}};XMLNode.prototype.ele=function(r,i,a){return this.element(r,i,a)};XMLNode.prototype.nod=function(r,i,a){return this.node(r,i,a)};XMLNode.prototype.txt=function(r){return this.text(r)};XMLNode.prototype.dat=function(r){return this.cdata(r)};XMLNode.prototype.com=function(r){return this.comment(r)};XMLNode.prototype.ins=function(r,i){return this.instruction(r,i)};XMLNode.prototype.doc=function(){return this.document()};XMLNode.prototype.dec=function(r,i,a){return this.declaration(r,i,a)};XMLNode.prototype.e=function(r,i,a){return this.element(r,i,a)};XMLNode.prototype.n=function(r,i,a){return this.node(r,i,a)};XMLNode.prototype.t=function(r){return this.text(r)};XMLNode.prototype.d=function(r){return this.cdata(r)};XMLNode.prototype.c=function(r){return this.comment(r)};XMLNode.prototype.r=function(r){return this.raw(r)};XMLNode.prototype.i=function(r,i){return this.instruction(r,i)};XMLNode.prototype.u=function(){return this.up()};XMLNode.prototype.importXMLBuilder=function(r){return this.importDocument(r)};XMLNode.prototype.replaceChild=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLNode.prototype.removeChild=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLNode.prototype.appendChild=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLNode.prototype.hasChildNodes=function(){return this.children.length!==0};XMLNode.prototype.cloneNode=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLNode.prototype.normalize=function(){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLNode.prototype.isSupported=function(r,i){return true};XMLNode.prototype.hasAttributes=function(){return this.attribs.length!==0};XMLNode.prototype.compareDocumentPosition=function(r){var a,o;a=this;if(a===r){return 0}else if(this.document()!==r.document()){o=i.Disconnected|i.ImplementationSpecific;if(Math.random()<.5){o|=i.Preceding}else{o|=i.Following}return o}else if(a.isAncestor(r)){return i.Contains|i.Preceding}else if(a.isDescendant(r)){return i.Contains|i.Following}else if(a.isPreceding(r)){return i.Preceding}else{return i.Following}};XMLNode.prototype.isSameNode=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLNode.prototype.lookupPrefix=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLNode.prototype.isDefaultNamespace=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLNode.prototype.lookupNamespaceURI=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLNode.prototype.isEqualNode=function(r){var i,a,o;if(r.nodeType!==this.nodeType){return false}if(r.children.length!==this.children.length){return false}for(i=a=0,o=this.children.length-1;0<=o?a<=o:a>=o;i=0<=o?++a:--a){if(!this.children[i].isEqualNode(r.children[i])){return false}}return true};XMLNode.prototype.getFeature=function(r,i){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLNode.prototype.setUserData=function(r,i,a){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLNode.prototype.getUserData=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLNode.prototype.contains=function(r){if(!r){return false}return r===this||this.isDescendant(r)};XMLNode.prototype.isDescendant=function(r){var i,a,o,s,l;l=this.children;for(o=0,s=l.length;o<s;o++){i=l[o];if(r===i){return true}a=i.isDescendant(r);if(a){return true}}return false};XMLNode.prototype.isAncestor=function(r){return r.isDescendant(this)};XMLNode.prototype.isPreceding=function(r){var i,a;i=this.treePosition(r);a=this.treePosition(this);if(i===-1||a===-1){return false}else{return i<a}};XMLNode.prototype.isFollowing=function(r){var i,a;i=this.treePosition(r);a=this.treePosition(this);if(i===-1||a===-1){return false}else{return i>a}};XMLNode.prototype.treePosition=function(r){var i,a;a=0;i=false;this.foreachTreeNode(this.document(),(function(o){a++;if(!i&&o===r){return i=true}}));if(i){return a}else{return-1}};XMLNode.prototype.foreachTreeNode=function(r,i){var a,o,s,l,u;r||(r=this.document());l=r.children;for(o=0,s=l.length;o<s;o++){a=l[o];if(u=i(a)){return u}else{u=this.foreachTreeNode(a,i);if(u){return u}}}};return XMLNode}()}).call(this)},9139:function(r){(function(){var i;r.exports=i=function(){function XMLNodeList(r){this.nodes=r}Object.defineProperty(XMLNodeList.prototype,"length",{get:function(){return this.nodes.length||0}});XMLNodeList.prototype.clone=function(){return this.nodes=null};XMLNodeList.prototype.item=function(r){return this.nodes[r]||null};return XMLNodeList}()}).call(this)},7448:function(r,i,a){(function(){var i,o,s,extend=function(r,i){for(var a in i){if(l.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},l={}.hasOwnProperty;i=a(6768);o=a(3196);r.exports=s=function(r){extend(XMLProcessingInstruction,r);function XMLProcessingInstruction(r,a,o){XMLProcessingInstruction.__super__.constructor.call(this,r);if(a==null){throw new Error("Missing instruction target. "+this.debugInfo())}this.type=i.ProcessingInstruction;this.target=this.stringify.insTarget(a);this.name=this.target;if(o){this.value=this.stringify.insValue(o)}}XMLProcessingInstruction.prototype.clone=function(){return Object.create(this)};XMLProcessingInstruction.prototype.toString=function(r){return this.options.writer.processingInstruction(this,this.options.writer.filterOptions(r))};XMLProcessingInstruction.prototype.isEqualNode=function(r){if(!XMLProcessingInstruction.__super__.isEqualNode.apply(this,arguments).isEqualNode(r)){return false}if(r.target!==this.target){return false}return true};return XMLProcessingInstruction}(o)}).call(this)},4609:function(r,i,a){(function(){var i,o,s,extend=function(r,i){for(var a in i){if(l.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},l={}.hasOwnProperty;i=a(6768);o=a(4698);r.exports=s=function(r){extend(XMLRaw,r);function XMLRaw(r,a){XMLRaw.__super__.constructor.call(this,r);if(a==null){throw new Error("Missing raw text. "+this.debugInfo())}this.type=i.Raw;this.value=this.stringify.raw(a)}XMLRaw.prototype.clone=function(){return Object.create(this)};XMLRaw.prototype.toString=function(r){return this.options.writer.raw(this,this.options.writer.filterOptions(r))};return XMLRaw}(o)}).call(this)},8558:function(r,i,a){(function(){var i,o,s,l,extend=function(r,i){for(var a in i){if(u.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},u={}.hasOwnProperty;i=a(6768);l=a(9015);o=a(8965);r.exports=s=function(r){extend(XMLStreamWriter,r);function XMLStreamWriter(r,i){this.stream=r;XMLStreamWriter.__super__.constructor.call(this,i)}XMLStreamWriter.prototype.endline=function(r,i,a){if(r.isLastRootNode&&i.state===o.CloseTag){return""}else{return XMLStreamWriter.__super__.endline.call(this,r,i,a)}};XMLStreamWriter.prototype.document=function(r,i){var a,o,s,l,u,v,b,y,x;b=r.children;for(o=s=0,u=b.length;s<u;o=++s){a=b[o];a.isLastRootNode=o===r.children.length-1}i=this.filterOptions(i);y=r.children;x=[];for(l=0,v=y.length;l<v;l++){a=y[l];x.push(this.writeChildNode(a,i,0))}return x};XMLStreamWriter.prototype.attribute=function(r,i,a){return this.stream.write(XMLStreamWriter.__super__.attribute.call(this,r,i,a))};XMLStreamWriter.prototype.cdata=function(r,i,a){return this.stream.write(XMLStreamWriter.__super__.cdata.call(this,r,i,a))};XMLStreamWriter.prototype.comment=function(r,i,a){return this.stream.write(XMLStreamWriter.__super__.comment.call(this,r,i,a))};XMLStreamWriter.prototype.declaration=function(r,i,a){return this.stream.write(XMLStreamWriter.__super__.declaration.call(this,r,i,a))};XMLStreamWriter.prototype.docType=function(r,i,a){var s,l,u,v;a||(a=0);this.openNode(r,i,a);i.state=o.OpenTag;this.stream.write(this.indent(r,i,a));this.stream.write("<!DOCTYPE "+r.root().name);if(r.pubID&&r.sysID){this.stream.write(' PUBLIC "'+r.pubID+'" "'+r.sysID+'"')}else if(r.sysID){this.stream.write(' SYSTEM "'+r.sysID+'"')}if(r.children.length>0){this.stream.write(" [");this.stream.write(this.endline(r,i,a));i.state=o.InsideTag;v=r.children;for(l=0,u=v.length;l<u;l++){s=v[l];this.writeChildNode(s,i,a+1)}i.state=o.CloseTag;this.stream.write("]")}i.state=o.CloseTag;this.stream.write(i.spaceBeforeSlash+">");this.stream.write(this.endline(r,i,a));i.state=o.None;return this.closeNode(r,i,a)};XMLStreamWriter.prototype.element=function(r,a,s){var l,v,b,y,x,A,E,M,L,P;s||(s=0);this.openNode(r,a,s);a.state=o.OpenTag;this.stream.write(this.indent(r,a,s)+"<"+r.name);L=r.attribs;for(E in L){if(!u.call(L,E))continue;l=L[E];this.attribute(l,a,s)}b=r.children.length;y=b===0?null:r.children[0];if(b===0||r.children.every((function(r){return(r.type===i.Text||r.type===i.Raw)&&r.value===""}))){if(a.allowEmpty){this.stream.write(">");a.state=o.CloseTag;this.stream.write("</"+r.name+">")}else{a.state=o.CloseTag;this.stream.write(a.spaceBeforeSlash+"/>")}}else if(a.pretty&&b===1&&(y.type===i.Text||y.type===i.Raw)&&y.value!=null){this.stream.write(">");a.state=o.InsideTag;a.suppressPrettyCount++;M=true;this.writeChildNode(y,a,s+1);a.suppressPrettyCount--;M=false;a.state=o.CloseTag;this.stream.write("</"+r.name+">")}else{this.stream.write(">"+this.endline(r,a,s));a.state=o.InsideTag;P=r.children;for(x=0,A=P.length;x<A;x++){v=P[x];this.writeChildNode(v,a,s+1)}a.state=o.CloseTag;this.stream.write(this.indent(r,a,s)+"</"+r.name+">")}this.stream.write(this.endline(r,a,s));a.state=o.None;return this.closeNode(r,a,s)};XMLStreamWriter.prototype.processingInstruction=function(r,i,a){return this.stream.write(XMLStreamWriter.__super__.processingInstruction.call(this,r,i,a))};XMLStreamWriter.prototype.raw=function(r,i,a){return this.stream.write(XMLStreamWriter.__super__.raw.call(this,r,i,a))};XMLStreamWriter.prototype.text=function(r,i,a){return this.stream.write(XMLStreamWriter.__super__.text.call(this,r,i,a))};XMLStreamWriter.prototype.dtdAttList=function(r,i,a){return this.stream.write(XMLStreamWriter.__super__.dtdAttList.call(this,r,i,a))};XMLStreamWriter.prototype.dtdElement=function(r,i,a){return this.stream.write(XMLStreamWriter.__super__.dtdElement.call(this,r,i,a))};XMLStreamWriter.prototype.dtdEntity=function(r,i,a){return this.stream.write(XMLStreamWriter.__super__.dtdEntity.call(this,r,i,a))};XMLStreamWriter.prototype.dtdNotation=function(r,i,a){return this.stream.write(XMLStreamWriter.__super__.dtdNotation.call(this,r,i,a))};return XMLStreamWriter}(l)}).call(this)},5770:function(r,i,a){(function(){var i,o,extend=function(r,i){for(var a in i){if(s.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},s={}.hasOwnProperty;o=a(9015);r.exports=i=function(r){extend(XMLStringWriter,r);function XMLStringWriter(r){XMLStringWriter.__super__.constructor.call(this,r)}XMLStringWriter.prototype.document=function(r,i){var a,o,s,l,u;i=this.filterOptions(i);l="";u=r.children;for(o=0,s=u.length;o<s;o++){a=u[o];l+=this.writeChildNode(a,i,0)}if(i.pretty&&l.slice(-i.newline.length)===i.newline){l=l.slice(0,-i.newline.length)}return l};return XMLStringWriter}(o)}).call(this)},9510:function(r){(function(){var i,bind=function(r,i){return function(){return r.apply(i,arguments)}},a={}.hasOwnProperty;r.exports=i=function(){function XMLStringifier(r){this.assertLegalName=bind(this.assertLegalName,this);this.assertLegalChar=bind(this.assertLegalChar,this);var i,o,s;r||(r={});this.options=r;if(!this.options.version){this.options.version="1.0"}o=r.stringify||{};for(i in o){if(!a.call(o,i))continue;s=o[i];this[i]=s}}XMLStringifier.prototype.name=function(r){if(this.options.noValidation){return r}return this.assertLegalName(""+r||"")};XMLStringifier.prototype.text=function(r){if(this.options.noValidation){return r}return this.assertLegalChar(this.textEscape(""+r||""))};XMLStringifier.prototype.cdata=function(r){if(this.options.noValidation){return r}r=""+r||"";r=r.replace("]]>","]]]]><![CDATA[>");return this.assertLegalChar(r)};XMLStringifier.prototype.comment=function(r){if(this.options.noValidation){return r}r=""+r||"";if(r.match(/--/)){throw new Error("Comment text cannot contain double-hypen: "+r)}return this.assertLegalChar(r)};XMLStringifier.prototype.raw=function(r){if(this.options.noValidation){return r}return""+r||""};XMLStringifier.prototype.attValue=function(r){if(this.options.noValidation){return r}return this.assertLegalChar(this.attEscape(r=""+r||""))};XMLStringifier.prototype.insTarget=function(r){if(this.options.noValidation){return r}return this.assertLegalChar(""+r||"")};XMLStringifier.prototype.insValue=function(r){if(this.options.noValidation){return r}r=""+r||"";if(r.match(/\?>/)){throw new Error("Invalid processing instruction value: "+r)}return this.assertLegalChar(r)};XMLStringifier.prototype.xmlVersion=function(r){if(this.options.noValidation){return r}r=""+r||"";if(!r.match(/1\.[0-9]+/)){throw new Error("Invalid version number: "+r)}return r};XMLStringifier.prototype.xmlEncoding=function(r){if(this.options.noValidation){return r}r=""+r||"";if(!r.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)){throw new Error("Invalid encoding: "+r)}return this.assertLegalChar(r)};XMLStringifier.prototype.xmlStandalone=function(r){if(this.options.noValidation){return r}if(r){return"yes"}else{return"no"}};XMLStringifier.prototype.dtdPubID=function(r){if(this.options.noValidation){return r}return this.assertLegalChar(""+r||"")};XMLStringifier.prototype.dtdSysID=function(r){if(this.options.noValidation){return r}return this.assertLegalChar(""+r||"")};XMLStringifier.prototype.dtdElementValue=function(r){if(this.options.noValidation){return r}return this.assertLegalChar(""+r||"")};XMLStringifier.prototype.dtdAttType=function(r){if(this.options.noValidation){return r}return this.assertLegalChar(""+r||"")};XMLStringifier.prototype.dtdAttDefault=function(r){if(this.options.noValidation){return r}return this.assertLegalChar(""+r||"")};XMLStringifier.prototype.dtdEntityValue=function(r){if(this.options.noValidation){return r}return this.assertLegalChar(""+r||"")};XMLStringifier.prototype.dtdNData=function(r){if(this.options.noValidation){return r}return this.assertLegalChar(""+r||"")};XMLStringifier.prototype.convertAttKey="@";XMLStringifier.prototype.convertPIKey="?";XMLStringifier.prototype.convertTextKey="#text";XMLStringifier.prototype.convertCDataKey="#cdata";XMLStringifier.prototype.convertCommentKey="#comment";XMLStringifier.prototype.convertRawKey="#raw";XMLStringifier.prototype.assertLegalChar=function(r){var i,a;if(this.options.noValidation){return r}i="";if(this.options.version==="1.0"){i=/[\0-\x08\x0B\f\x0E-\x1F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;if(a=r.match(i)){throw new Error("Invalid character in string: "+r+" at index "+a.index)}}else if(this.options.version==="1.1"){i=/[\0\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;if(a=r.match(i)){throw new Error("Invalid character in string: "+r+" at index "+a.index)}}return r};XMLStringifier.prototype.assertLegalName=function(r){var i;if(this.options.noValidation){return r}this.assertLegalChar(r);i=/^([:A-Z_a-z\xC0-\xD6\xD8-\xF6\xF8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])([\x2D\.0-:A-Z_a-z\xB7\xC0-\xD6\xD8-\xF6\xF8-\u037D\u037F-\u1FFF\u200C\u200D\u203F\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]|[\uD800-\uDB7F][\uDC00-\uDFFF])*$/;if(!r.match(i)){throw new Error("Invalid character in name")}return r};XMLStringifier.prototype.textEscape=function(r){var i;if(this.options.noValidation){return r}i=this.options.noDoubleEncoding?/(?!&\S+;)&/g:/&/g;return r.replace(i,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\r/g,"&#xD;")};XMLStringifier.prototype.attEscape=function(r){var i;if(this.options.noValidation){return r}i=this.options.noDoubleEncoding?/(?!&\S+;)&/g:/&/g;return r.replace(i,"&amp;").replace(/</g,"&lt;").replace(/"/g,"&quot;").replace(/\t/g,"&#x9;").replace(/\n/g,"&#xA;").replace(/\r/g,"&#xD;")};return XMLStringifier}()}).call(this)},3566:function(r,i,a){(function(){var i,o,s,extend=function(r,i){for(var a in i){if(l.call(i,a))r[a]=i[a]}function ctor(){this.constructor=r}ctor.prototype=i.prototype;r.prototype=new ctor;r.__super__=i.prototype;return r},l={}.hasOwnProperty;i=a(6768);o=a(3196);r.exports=s=function(r){extend(XMLText,r);function XMLText(r,a){XMLText.__super__.constructor.call(this,r);if(a==null){throw new Error("Missing element text. "+this.debugInfo())}this.name="#text";this.type=i.Text;this.value=this.stringify.text(a)}Object.defineProperty(XMLText.prototype,"isElementContentWhitespace",{get:function(){throw new Error("This DOM method is not implemented."+this.debugInfo())}});Object.defineProperty(XMLText.prototype,"wholeText",{get:function(){var r,i,a;a="";i=this.previousSibling;while(i){a=i.data+a;i=i.previousSibling}a+=this.data;r=this.nextSibling;while(r){a=a+r.data;r=r.nextSibling}return a}});XMLText.prototype.clone=function(){return Object.create(this)};XMLText.prototype.toString=function(r){return this.options.writer.text(this,this.options.writer.filterOptions(r))};XMLText.prototype.splitText=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};XMLText.prototype.replaceWholeText=function(r){throw new Error("This DOM method is not implemented."+this.debugInfo())};return XMLText}(o)}).call(this)},9015:function(r,i,a){(function(){var i,o,s,l,u,v,b,y,x,A,E,M,L,P,T,I,O,S={}.hasOwnProperty;O=a(6919).assign;i=a(6768);x=a(6557);A=a(8544);s=a(545);l=a(6057);M=a(255);P=a(4609);T=a(3566);L=a(7448);E=a(362);u=a(4564);v=a(7461);b=a(8546);y=a(958);o=a(8965);r.exports=I=function(){function XMLWriterBase(r){var i,a,o;r||(r={});this.options=r;a=r.writer||{};for(i in a){if(!S.call(a,i))continue;o=a[i];this["_"+i]=this[i];this[i]=o}}XMLWriterBase.prototype.filterOptions=function(r){var i,a,s,l,u,v,b,y;r||(r={});r=O({},this.options,r);i={writer:this};i.pretty=r.pretty||false;i.allowEmpty=r.allowEmpty||false;i.indent=(a=r.indent)!=null?a:"  ";i.newline=(s=r.newline)!=null?s:"\n";i.offset=(l=r.offset)!=null?l:0;i.dontPrettyTextNodes=(u=(v=r.dontPrettyTextNodes)!=null?v:r.dontprettytextnodes)!=null?u:0;i.spaceBeforeSlash=(b=(y=r.spaceBeforeSlash)!=null?y:r.spacebeforeslash)!=null?b:"";if(i.spaceBeforeSlash===true){i.spaceBeforeSlash=" "}i.suppressPrettyCount=0;i.user={};i.state=o.None;return i};XMLWriterBase.prototype.indent=function(r,i,a){var o;if(!i.pretty||i.suppressPrettyCount){return""}else if(i.pretty){o=(a||0)+i.offset+1;if(o>0){return new Array(o).join(i.indent)}}return""};XMLWriterBase.prototype.endline=function(r,i,a){if(!i.pretty||i.suppressPrettyCount){return""}else{return i.newline}};XMLWriterBase.prototype.attribute=function(r,i,a){var o;this.openAttribute(r,i,a);o=" "+r.name+'="'+r.value+'"';this.closeAttribute(r,i,a);return o};XMLWriterBase.prototype.cdata=function(r,i,a){var s;this.openNode(r,i,a);i.state=o.OpenTag;s=this.indent(r,i,a)+"<![CDATA[";i.state=o.InsideTag;s+=r.value;i.state=o.CloseTag;s+="]]>"+this.endline(r,i,a);i.state=o.None;this.closeNode(r,i,a);return s};XMLWriterBase.prototype.comment=function(r,i,a){var s;this.openNode(r,i,a);i.state=o.OpenTag;s=this.indent(r,i,a)+"\x3c!-- ";i.state=o.InsideTag;s+=r.value;i.state=o.CloseTag;s+=" --\x3e"+this.endline(r,i,a);i.state=o.None;this.closeNode(r,i,a);return s};XMLWriterBase.prototype.declaration=function(r,i,a){var s;this.openNode(r,i,a);i.state=o.OpenTag;s=this.indent(r,i,a)+"<?xml";i.state=o.InsideTag;s+=' version="'+r.version+'"';if(r.encoding!=null){s+=' encoding="'+r.encoding+'"'}if(r.standalone!=null){s+=' standalone="'+r.standalone+'"'}i.state=o.CloseTag;s+=i.spaceBeforeSlash+"?>";s+=this.endline(r,i,a);i.state=o.None;this.closeNode(r,i,a);return s};XMLWriterBase.prototype.docType=function(r,i,a){var s,l,u,v,b;a||(a=0);this.openNode(r,i,a);i.state=o.OpenTag;v=this.indent(r,i,a);v+="<!DOCTYPE "+r.root().name;if(r.pubID&&r.sysID){v+=' PUBLIC "'+r.pubID+'" "'+r.sysID+'"'}else if(r.sysID){v+=' SYSTEM "'+r.sysID+'"'}if(r.children.length>0){v+=" [";v+=this.endline(r,i,a);i.state=o.InsideTag;b=r.children;for(l=0,u=b.length;l<u;l++){s=b[l];v+=this.writeChildNode(s,i,a+1)}i.state=o.CloseTag;v+="]"}i.state=o.CloseTag;v+=i.spaceBeforeSlash+">";v+=this.endline(r,i,a);i.state=o.None;this.closeNode(r,i,a);return v};XMLWriterBase.prototype.element=function(r,a,s){var l,u,v,b,y,x,A,E,M,L,P,T,I,O;s||(s=0);L=false;P="";this.openNode(r,a,s);a.state=o.OpenTag;P+=this.indent(r,a,s)+"<"+r.name;T=r.attribs;for(M in T){if(!S.call(T,M))continue;l=T[M];P+=this.attribute(l,a,s)}v=r.children.length;b=v===0?null:r.children[0];if(v===0||r.children.every((function(r){return(r.type===i.Text||r.type===i.Raw)&&r.value===""}))){if(a.allowEmpty){P+=">";a.state=o.CloseTag;P+="</"+r.name+">"+this.endline(r,a,s)}else{a.state=o.CloseTag;P+=a.spaceBeforeSlash+"/>"+this.endline(r,a,s)}}else if(a.pretty&&v===1&&(b.type===i.Text||b.type===i.Raw)&&b.value!=null){P+=">";a.state=o.InsideTag;a.suppressPrettyCount++;L=true;P+=this.writeChildNode(b,a,s+1);a.suppressPrettyCount--;L=false;a.state=o.CloseTag;P+="</"+r.name+">"+this.endline(r,a,s)}else{if(a.dontPrettyTextNodes){I=r.children;for(y=0,A=I.length;y<A;y++){u=I[y];if((u.type===i.Text||u.type===i.Raw)&&u.value!=null){a.suppressPrettyCount++;L=true;break}}}P+=">"+this.endline(r,a,s);a.state=o.InsideTag;O=r.children;for(x=0,E=O.length;x<E;x++){u=O[x];P+=this.writeChildNode(u,a,s+1)}a.state=o.CloseTag;P+=this.indent(r,a,s)+"</"+r.name+">";if(L){a.suppressPrettyCount--}P+=this.endline(r,a,s);a.state=o.None}this.closeNode(r,a,s);return P};XMLWriterBase.prototype.writeChildNode=function(r,a,o){switch(r.type){case i.CData:return this.cdata(r,a,o);case i.Comment:return this.comment(r,a,o);case i.Element:return this.element(r,a,o);case i.Raw:return this.raw(r,a,o);case i.Text:return this.text(r,a,o);case i.ProcessingInstruction:return this.processingInstruction(r,a,o);case i.Dummy:return"";case i.Declaration:return this.declaration(r,a,o);case i.DocType:return this.docType(r,a,o);case i.AttributeDeclaration:return this.dtdAttList(r,a,o);case i.ElementDeclaration:return this.dtdElement(r,a,o);case i.EntityDeclaration:return this.dtdEntity(r,a,o);case i.NotationDeclaration:return this.dtdNotation(r,a,o);default:throw new Error("Unknown XML node type: "+r.constructor.name)}};XMLWriterBase.prototype.processingInstruction=function(r,i,a){var s;this.openNode(r,i,a);i.state=o.OpenTag;s=this.indent(r,i,a)+"<?";i.state=o.InsideTag;s+=r.target;if(r.value){s+=" "+r.value}i.state=o.CloseTag;s+=i.spaceBeforeSlash+"?>";s+=this.endline(r,i,a);i.state=o.None;this.closeNode(r,i,a);return s};XMLWriterBase.prototype.raw=function(r,i,a){var s;this.openNode(r,i,a);i.state=o.OpenTag;s=this.indent(r,i,a);i.state=o.InsideTag;s+=r.value;i.state=o.CloseTag;s+=this.endline(r,i,a);i.state=o.None;this.closeNode(r,i,a);return s};XMLWriterBase.prototype.text=function(r,i,a){var s;this.openNode(r,i,a);i.state=o.OpenTag;s=this.indent(r,i,a);i.state=o.InsideTag;s+=r.value;i.state=o.CloseTag;s+=this.endline(r,i,a);i.state=o.None;this.closeNode(r,i,a);return s};XMLWriterBase.prototype.dtdAttList=function(r,i,a){var s;this.openNode(r,i,a);i.state=o.OpenTag;s=this.indent(r,i,a)+"<!ATTLIST";i.state=o.InsideTag;s+=" "+r.elementName+" "+r.attributeName+" "+r.attributeType;if(r.defaultValueType!=="#DEFAULT"){s+=" "+r.defaultValueType}if(r.defaultValue){s+=' "'+r.defaultValue+'"'}i.state=o.CloseTag;s+=i.spaceBeforeSlash+">"+this.endline(r,i,a);i.state=o.None;this.closeNode(r,i,a);return s};XMLWriterBase.prototype.dtdElement=function(r,i,a){var s;this.openNode(r,i,a);i.state=o.OpenTag;s=this.indent(r,i,a)+"<!ELEMENT";i.state=o.InsideTag;s+=" "+r.name+" "+r.value;i.state=o.CloseTag;s+=i.spaceBeforeSlash+">"+this.endline(r,i,a);i.state=o.None;this.closeNode(r,i,a);return s};XMLWriterBase.prototype.dtdEntity=function(r,i,a){var s;this.openNode(r,i,a);i.state=o.OpenTag;s=this.indent(r,i,a)+"<!ENTITY";i.state=o.InsideTag;if(r.pe){s+=" %"}s+=" "+r.name;if(r.value){s+=' "'+r.value+'"'}else{if(r.pubID&&r.sysID){s+=' PUBLIC "'+r.pubID+'" "'+r.sysID+'"'}else if(r.sysID){s+=' SYSTEM "'+r.sysID+'"'}if(r.nData){s+=" NDATA "+r.nData}}i.state=o.CloseTag;s+=i.spaceBeforeSlash+">"+this.endline(r,i,a);i.state=o.None;this.closeNode(r,i,a);return s};XMLWriterBase.prototype.dtdNotation=function(r,i,a){var s;this.openNode(r,i,a);i.state=o.OpenTag;s=this.indent(r,i,a)+"<!NOTATION";i.state=o.InsideTag;s+=" "+r.name;if(r.pubID&&r.sysID){s+=' PUBLIC "'+r.pubID+'" "'+r.sysID+'"'}else if(r.pubID){s+=' PUBLIC "'+r.pubID+'"'}else if(r.sysID){s+=' SYSTEM "'+r.sysID+'"'}i.state=o.CloseTag;s+=i.spaceBeforeSlash+">"+this.endline(r,i,a);i.state=o.None;this.closeNode(r,i,a);return s};XMLWriterBase.prototype.openNode=function(r,i,a){};XMLWriterBase.prototype.closeNode=function(r,i,a){};XMLWriterBase.prototype.openAttribute=function(r,i,a){};XMLWriterBase.prototype.closeAttribute=function(r,i,a){};return XMLWriterBase}()}).call(this)},9851:function(r,i,a){(function(){var i,o,s,l,u,v,b,y,x,A;A=a(6919),y=A.assign,x=A.isFunction;s=a(4481);l=a(8328);u=a(1585);b=a(5770);v=a(8558);i=a(6768);o=a(8965);r.exports.create=function(r,i,a,o){var s,u;if(r==null){throw new Error("Root element needs a name.")}o=y({},i,a,o);s=new l(o);u=s.element(r);if(!o.headless){s.declaration(o);if(o.pubID!=null||o.sysID!=null){s.dtd(o)}}return u};r.exports.begin=function(r,i,a){var o;if(x(r)){o=[r,i],i=o[0],a=o[1];r={}}if(i){return new u(r,i,a)}else{return new l(r)}};r.exports.stringWriter=function(r){return new b(r)};r.exports.streamWriter=function(r,i){return new v(r,i)};r.exports.implementation=new s;r.exports.nodeType=i;r.exports.writerState=o}).call(this)},9491:r=>{"use strict";r.exports=require("assert")},4300:r=>{"use strict";r.exports=require("buffer")},2361:r=>{"use strict";r.exports=require("events")},7147:r=>{"use strict";r.exports=require("fs")},3685:r=>{"use strict";r.exports=require("http")},5687:r=>{"use strict";r.exports=require("https")},1017:r=>{"use strict";r.exports=require("path")},3477:r=>{"use strict";r.exports=require("querystring")},2781:r=>{"use strict";r.exports=require("stream")},1576:r=>{"use strict";r.exports=require("string_decoder")},9512:r=>{"use strict";r.exports=require("timers")},7310:r=>{"use strict";r.exports=require("url")},3837:r=>{"use strict";r.exports=require("util")},9796:r=>{"use strict";r.exports=require("zlib")},3384:r=>{"use strict";r.exports=JSON.parse('{"persons.png":"","empty.png":"iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR4AWP4+P71fwAJawPL5uR/CAAAAABJRU5ErkJggg=="}')},5799:r=>{"use strict";r.exports=JSON.parse('{"application/andrew-inset":["ez"],"application/applixware":["aw"],"application/atom+xml":["atom"],"application/atomcat+xml":["atomcat"],"application/atomsvc+xml":["atomsvc"],"application/bdoc":["bdoc"],"application/ccxml+xml":["ccxml"],"application/cdmi-capability":["cdmia"],"application/cdmi-container":["cdmic"],"application/cdmi-domain":["cdmid"],"application/cdmi-object":["cdmio"],"application/cdmi-queue":["cdmiq"],"application/cu-seeme":["cu"],"application/dash+xml":["mpd"],"application/davmount+xml":["davmount"],"application/docbook+xml":["dbk"],"application/dssc+der":["dssc"],"application/dssc+xml":["xdssc"],"application/ecmascript":["ecma"],"application/emma+xml":["emma"],"application/epub+zip":["epub"],"application/exi":["exi"],"application/font-tdpfr":["pfr"],"application/font-woff":[],"application/font-woff2":[],"application/geo+json":["geojson"],"application/gml+xml":["gml"],"application/gpx+xml":["gpx"],"application/gxf":["gxf"],"application/gzip":["gz"],"application/hyperstudio":["stk"],"application/inkml+xml":["ink","inkml"],"application/ipfix":["ipfix"],"application/java-archive":["jar","war","ear"],"application/java-serialized-object":["ser"],"application/java-vm":["class"],"application/javascript":["js","mjs"],"application/json":["json","map"],"application/json5":["json5"],"application/jsonml+json":["jsonml"],"application/ld+json":["jsonld"],"application/lost+xml":["lostxml"],"application/mac-binhex40":["hqx"],"application/mac-compactpro":["cpt"],"application/mads+xml":["mads"],"application/manifest+json":["webmanifest"],"application/marc":["mrc"],"application/marcxml+xml":["mrcx"],"application/mathematica":["ma","nb","mb"],"application/mathml+xml":["mathml"],"application/mbox":["mbox"],"application/mediaservercontrol+xml":["mscml"],"application/metalink+xml":["metalink"],"application/metalink4+xml":["meta4"],"application/mets+xml":["mets"],"application/mods+xml":["mods"],"application/mp21":["m21","mp21"],"application/mp4":["mp4s","m4p"],"application/msword":["doc","dot"],"application/mxf":["mxf"],"application/octet-stream":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"],"application/oda":["oda"],"application/oebps-package+xml":["opf"],"application/ogg":["ogx"],"application/omdoc+xml":["omdoc"],"application/onenote":["onetoc","onetoc2","onetmp","onepkg"],"application/oxps":["oxps"],"application/patch-ops-error+xml":["xer"],"application/pdf":["pdf"],"application/pgp-encrypted":["pgp"],"application/pgp-signature":["asc","sig"],"application/pics-rules":["prf"],"application/pkcs10":["p10"],"application/pkcs7-mime":["p7m","p7c"],"application/pkcs7-signature":["p7s"],"application/pkcs8":["p8"],"application/pkix-attr-cert":["ac"],"application/pkix-cert":["cer"],"application/pkix-crl":["crl"],"application/pkix-pkipath":["pkipath"],"application/pkixcmp":["pki"],"application/pls+xml":["pls"],"application/postscript":["ai","eps","ps"],"application/prs.cww":["cww"],"application/pskc+xml":["pskcxml"],"application/raml+yaml":["raml"],"application/rdf+xml":["rdf"],"application/reginfo+xml":["rif"],"application/relax-ng-compact-syntax":["rnc"],"application/resource-lists+xml":["rl"],"application/resource-lists-diff+xml":["rld"],"application/rls-services+xml":["rs"],"application/rpki-ghostbusters":["gbr"],"application/rpki-manifest":["mft"],"application/rpki-roa":["roa"],"application/rsd+xml":["rsd"],"application/rss+xml":["rss"],"application/rtf":["rtf"],"application/sbml+xml":["sbml"],"application/scvp-cv-request":["scq"],"application/scvp-cv-response":["scs"],"application/scvp-vp-request":["spq"],"application/scvp-vp-response":["spp"],"application/sdp":["sdp"],"application/set-payment-initiation":["setpay"],"application/set-registration-initiation":["setreg"],"application/shf+xml":["shf"],"application/smil+xml":["smi","smil"],"application/sparql-query":["rq"],"application/sparql-results+xml":["srx"],"application/srgs":["gram"],"application/srgs+xml":["grxml"],"application/sru+xml":["sru"],"application/ssdl+xml":["ssdl"],"application/ssml+xml":["ssml"],"application/tei+xml":["tei","teicorpus"],"application/thraud+xml":["tfi"],"application/timestamped-data":["tsd"],"application/vnd.3gpp.pic-bw-large":["plb"],"application/vnd.3gpp.pic-bw-small":["psb"],"application/vnd.3gpp.pic-bw-var":["pvb"],"application/vnd.3gpp2.tcap":["tcap"],"application/vnd.3m.post-it-notes":["pwn"],"application/vnd.accpac.simply.aso":["aso"],"application/vnd.accpac.simply.imp":["imp"],"application/vnd.acucobol":["acu"],"application/vnd.acucorp":["atc","acutc"],"application/vnd.adobe.air-application-installer-package+zip":["air"],"application/vnd.adobe.formscentral.fcdt":["fcdt"],"application/vnd.adobe.fxp":["fxp","fxpl"],"application/vnd.adobe.xdp+xml":["xdp"],"application/vnd.adobe.xfdf":["xfdf"],"application/vnd.ahead.space":["ahead"],"application/vnd.airzip.filesecure.azf":["azf"],"application/vnd.airzip.filesecure.azs":["azs"],"application/vnd.amazon.ebook":["azw"],"application/vnd.americandynamics.acc":["acc"],"application/vnd.amiga.ami":["ami"],"application/vnd.android.package-archive":["apk"],"application/vnd.anser-web-certificate-issue-initiation":["cii"],"application/vnd.anser-web-funds-transfer-initiation":["fti"],"application/vnd.antix.game-component":["atx"],"application/vnd.apple.installer+xml":["mpkg"],"application/vnd.apple.mpegurl":["m3u8"],"application/vnd.apple.pkpass":["pkpass"],"application/vnd.aristanetworks.swi":["swi"],"application/vnd.astraea-software.iota":["iota"],"application/vnd.audiograph":["aep"],"application/vnd.blueice.multipass":["mpm"],"application/vnd.bmi":["bmi"],"application/vnd.businessobjects":["rep"],"application/vnd.chemdraw+xml":["cdxml"],"application/vnd.chipnuts.karaoke-mmd":["mmd"],"application/vnd.cinderella":["cdy"],"application/vnd.claymore":["cla"],"application/vnd.cloanto.rp9":["rp9"],"application/vnd.clonk.c4group":["c4g","c4d","c4f","c4p","c4u"],"application/vnd.cluetrust.cartomobile-config":["c11amc"],"application/vnd.cluetrust.cartomobile-config-pkg":["c11amz"],"application/vnd.commonspace":["csp"],"application/vnd.contact.cmsg":["cdbcmsg"],"application/vnd.cosmocaller":["cmc"],"application/vnd.crick.clicker":["clkx"],"application/vnd.crick.clicker.keyboard":["clkk"],"application/vnd.crick.clicker.palette":["clkp"],"application/vnd.crick.clicker.template":["clkt"],"application/vnd.crick.clicker.wordbank":["clkw"],"application/vnd.criticaltools.wbs+xml":["wbs"],"application/vnd.ctc-posml":["pml"],"application/vnd.cups-ppd":["ppd"],"application/vnd.curl.car":["car"],"application/vnd.curl.pcurl":["pcurl"],"application/vnd.dart":["dart"],"application/vnd.data-vision.rdz":["rdz"],"application/vnd.dece.data":["uvf","uvvf","uvd","uvvd"],"application/vnd.dece.ttml+xml":["uvt","uvvt"],"application/vnd.dece.unspecified":["uvx","uvvx"],"application/vnd.dece.zip":["uvz","uvvz"],"application/vnd.denovo.fcselayout-link":["fe_launch"],"application/vnd.dna":["dna"],"application/vnd.dolby.mlp":["mlp"],"application/vnd.dpgraph":["dpg"],"application/vnd.dreamfactory":["dfac"],"application/vnd.ds-keypoint":["kpxx"],"application/vnd.dvb.ait":["ait"],"application/vnd.dvb.service":["svc"],"application/vnd.dynageo":["geo"],"application/vnd.ecowin.chart":["mag"],"application/vnd.enliven":["nml"],"application/vnd.epson.esf":["esf"],"application/vnd.epson.msf":["msf"],"application/vnd.epson.quickanime":["qam"],"application/vnd.epson.salt":["slt"],"application/vnd.epson.ssf":["ssf"],"application/vnd.eszigno3+xml":["es3","et3"],"application/vnd.ezpix-album":["ez2"],"application/vnd.ezpix-package":["ez3"],"application/vnd.fdf":["fdf"],"application/vnd.fdsn.mseed":["mseed"],"application/vnd.fdsn.seed":["seed","dataless"],"application/vnd.flographit":["gph"],"application/vnd.fluxtime.clip":["ftc"],"application/vnd.framemaker":["fm","frame","maker","book"],"application/vnd.frogans.fnc":["fnc"],"application/vnd.frogans.ltf":["ltf"],"application/vnd.fsc.weblaunch":["fsc"],"application/vnd.fujitsu.oasys":["oas"],"application/vnd.fujitsu.oasys2":["oa2"],"application/vnd.fujitsu.oasys3":["oa3"],"application/vnd.fujitsu.oasysgp":["fg5"],"application/vnd.fujitsu.oasysprs":["bh2"],"application/vnd.fujixerox.ddd":["ddd"],"application/vnd.fujixerox.docuworks":["xdw"],"application/vnd.fujixerox.docuworks.binder":["xbd"],"application/vnd.fuzzysheet":["fzs"],"application/vnd.genomatix.tuxedo":["txd"],"application/vnd.geogebra.file":["ggb"],"application/vnd.geogebra.tool":["ggt"],"application/vnd.geometry-explorer":["gex","gre"],"application/vnd.geonext":["gxt"],"application/vnd.geoplan":["g2w"],"application/vnd.geospace":["g3w"],"application/vnd.gmx":["gmx"],"application/vnd.google-apps.document":["gdoc"],"application/vnd.google-apps.presentation":["gslides"],"application/vnd.google-apps.spreadsheet":["gsheet"],"application/vnd.google-earth.kml+xml":["kml"],"application/vnd.google-earth.kmz":["kmz"],"application/vnd.grafeq":["gqf","gqs"],"application/vnd.groove-account":["gac"],"application/vnd.groove-help":["ghf"],"application/vnd.groove-identity-message":["gim"],"application/vnd.groove-injector":["grv"],"application/vnd.groove-tool-message":["gtm"],"application/vnd.groove-tool-template":["tpl"],"application/vnd.groove-vcard":["vcg"],"application/vnd.hal+xml":["hal"],"application/vnd.handheld-entertainment+xml":["zmm"],"application/vnd.hbci":["hbci"],"application/vnd.hhe.lesson-player":["les"],"application/vnd.hp-hpgl":["hpgl"],"application/vnd.hp-hpid":["hpid"],"application/vnd.hp-hps":["hps"],"application/vnd.hp-jlyt":["jlt"],"application/vnd.hp-pcl":["pcl"],"application/vnd.hp-pclxl":["pclxl"],"application/vnd.hydrostatix.sof-data":["sfd-hdstx"],"application/vnd.ibm.minipay":["mpy"],"application/vnd.ibm.modcap":["afp","listafp","list3820"],"application/vnd.ibm.rights-management":["irm"],"application/vnd.ibm.secure-container":["sc"],"application/vnd.iccprofile":["icc","icm"],"application/vnd.igloader":["igl"],"application/vnd.immervision-ivp":["ivp"],"application/vnd.immervision-ivu":["ivu"],"application/vnd.insors.igm":["igm"],"application/vnd.intercon.formnet":["xpw","xpx"],"application/vnd.intergeo":["i2g"],"application/vnd.intu.qbo":["qbo"],"application/vnd.intu.qfx":["qfx"],"application/vnd.ipunplugged.rcprofile":["rcprofile"],"application/vnd.irepository.package+xml":["irp"],"application/vnd.is-xpr":["xpr"],"application/vnd.isac.fcs":["fcs"],"application/vnd.jam":["jam"],"application/vnd.jcp.javame.midlet-rms":["rms"],"application/vnd.jisp":["jisp"],"application/vnd.joost.joda-archive":["joda"],"application/vnd.kahootz":["ktz","ktr"],"application/vnd.kde.karbon":["karbon"],"application/vnd.kde.kchart":["chrt"],"application/vnd.kde.kformula":["kfo"],"application/vnd.kde.kivio":["flw"],"application/vnd.kde.kontour":["kon"],"application/vnd.kde.kpresenter":["kpr","kpt"],"application/vnd.kde.kspread":["ksp"],"application/vnd.kde.kword":["kwd","kwt"],"application/vnd.kenameaapp":["htke"],"application/vnd.kidspiration":["kia"],"application/vnd.kinar":["kne","knp"],"application/vnd.koan":["skp","skd","skt","skm"],"application/vnd.kodak-descriptor":["sse"],"application/vnd.las.las+xml":["lasxml"],"application/vnd.llamagraphics.life-balance.desktop":["lbd"],"application/vnd.llamagraphics.life-balance.exchange+xml":["lbe"],"application/vnd.lotus-1-2-3":["123"],"application/vnd.lotus-approach":["apr"],"application/vnd.lotus-freelance":["pre"],"application/vnd.lotus-notes":["nsf"],"application/vnd.lotus-organizer":["org"],"application/vnd.lotus-screencam":["scm"],"application/vnd.lotus-wordpro":["lwp"],"application/vnd.macports.portpkg":["portpkg"],"application/vnd.mcd":["mcd"],"application/vnd.medcalcdata":["mc1"],"application/vnd.mediastation.cdkey":["cdkey"],"application/vnd.mfer":["mwf"],"application/vnd.mfmp":["mfm"],"application/vnd.micrografx.flo":["flo"],"application/vnd.micrografx.igx":["igx"],"application/vnd.mif":["mif"],"application/vnd.mobius.daf":["daf"],"application/vnd.mobius.dis":["dis"],"application/vnd.mobius.mbk":["mbk"],"application/vnd.mobius.mqy":["mqy"],"application/vnd.mobius.msl":["msl"],"application/vnd.mobius.plc":["plc"],"application/vnd.mobius.txf":["txf"],"application/vnd.mophun.application":["mpn"],"application/vnd.mophun.certificate":["mpc"],"application/vnd.mozilla.xul+xml":["xul"],"application/vnd.ms-artgalry":["cil"],"application/vnd.ms-cab-compressed":["cab"],"application/vnd.ms-excel":["xls","xlm","xla","xlc","xlt","xlw"],"application/vnd.ms-excel.addin.macroenabled.12":["xlam"],"application/vnd.ms-excel.sheet.binary.macroenabled.12":["xlsb"],"application/vnd.ms-excel.sheet.macroenabled.12":["xlsm"],"application/vnd.ms-excel.template.macroenabled.12":["xltm"],"application/vnd.ms-fontobject":["eot"],"application/vnd.ms-htmlhelp":["chm"],"application/vnd.ms-ims":["ims"],"application/vnd.ms-lrm":["lrm"],"application/vnd.ms-officetheme":["thmx"],"application/vnd.ms-outlook":["msg"],"application/vnd.ms-pki.seccat":["cat"],"application/vnd.ms-pki.stl":["stl"],"application/vnd.ms-powerpoint":["ppt","pps","pot"],"application/vnd.ms-powerpoint.addin.macroenabled.12":["ppam"],"application/vnd.ms-powerpoint.presentation.macroenabled.12":["pptm"],"application/vnd.ms-powerpoint.slide.macroenabled.12":["sldm"],"application/vnd.ms-powerpoint.slideshow.macroenabled.12":["ppsm"],"application/vnd.ms-powerpoint.template.macroenabled.12":["potm"],"application/vnd.ms-project":["mpp","mpt"],"application/vnd.ms-word.document.macroenabled.12":["docm"],"application/vnd.ms-word.template.macroenabled.12":["dotm"],"application/vnd.ms-works":["wps","wks","wcm","wdb"],"application/vnd.ms-wpl":["wpl"],"application/vnd.ms-xpsdocument":["xps"],"application/vnd.mseq":["mseq"],"application/vnd.musician":["mus"],"application/vnd.muvee.style":["msty"],"application/vnd.mynfc":["taglet"],"application/vnd.neurolanguage.nlu":["nlu"],"application/vnd.nitf":["ntf","nitf"],"application/vnd.noblenet-directory":["nnd"],"application/vnd.noblenet-sealer":["nns"],"application/vnd.noblenet-web":["nnw"],"application/vnd.nokia.n-gage.data":["ngdat"],"application/vnd.nokia.n-gage.symbian.install":["n-gage"],"application/vnd.nokia.radio-preset":["rpst"],"application/vnd.nokia.radio-presets":["rpss"],"application/vnd.novadigm.edm":["edm"],"application/vnd.novadigm.edx":["edx"],"application/vnd.novadigm.ext":["ext"],"application/vnd.oasis.opendocument.chart":["odc"],"application/vnd.oasis.opendocument.chart-template":["otc"],"application/vnd.oasis.opendocument.database":["odb"],"application/vnd.oasis.opendocument.formula":["odf"],"application/vnd.oasis.opendocument.formula-template":["odft"],"application/vnd.oasis.opendocument.graphics":["odg"],"application/vnd.oasis.opendocument.graphics-template":["otg"],"application/vnd.oasis.opendocument.image":["odi"],"application/vnd.oasis.opendocument.image-template":["oti"],"application/vnd.oasis.opendocument.presentation":["odp"],"application/vnd.oasis.opendocument.presentation-template":["otp"],"application/vnd.oasis.opendocument.spreadsheet":["ods"],"application/vnd.oasis.opendocument.spreadsheet-template":["ots"],"application/vnd.oasis.opendocument.text":["odt"],"application/vnd.oasis.opendocument.text-master":["odm"],"application/vnd.oasis.opendocument.text-template":["ott"],"application/vnd.oasis.opendocument.text-web":["oth"],"application/vnd.olpc-sugar":["xo"],"application/vnd.oma.dd2+xml":["dd2"],"application/vnd.openofficeorg.extension":["oxt"],"application/vnd.openxmlformats-officedocument.presentationml.presentation":["pptx"],"application/vnd.openxmlformats-officedocument.presentationml.slide":["sldx"],"application/vnd.openxmlformats-officedocument.presentationml.slideshow":["ppsx"],"application/vnd.openxmlformats-officedocument.presentationml.template":["potx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":["xlsx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.template":["xltx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.document":["docx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.template":["dotx"],"application/vnd.osgeo.mapguide.package":["mgp"],"application/vnd.osgi.dp":["dp"],"application/vnd.osgi.subsystem":["esa"],"application/vnd.palm":["pdb","pqa","oprc"],"application/vnd.pawaafile":["paw"],"application/vnd.pg.format":["str"],"application/vnd.pg.osasli":["ei6"],"application/vnd.picsel":["efif"],"application/vnd.pmi.widget":["wg"],"application/vnd.pocketlearn":["plf"],"application/vnd.powerbuilder6":["pbd"],"application/vnd.previewsystems.box":["box"],"application/vnd.proteus.magazine":["mgz"],"application/vnd.publishare-delta-tree":["qps"],"application/vnd.pvi.ptid1":["ptid"],"application/vnd.quark.quarkxpress":["qxd","qxt","qwd","qwt","qxl","qxb"],"application/vnd.realvnc.bed":["bed"],"application/vnd.recordare.musicxml":["mxl"],"application/vnd.recordare.musicxml+xml":["musicxml"],"application/vnd.rig.cryptonote":["cryptonote"],"application/vnd.rim.cod":["cod"],"application/vnd.rn-realmedia":["rm"],"application/vnd.rn-realmedia-vbr":["rmvb"],"application/vnd.route66.link66+xml":["link66"],"application/vnd.sailingtracker.track":["st"],"application/vnd.seemail":["see"],"application/vnd.sema":["sema"],"application/vnd.semd":["semd"],"application/vnd.semf":["semf"],"application/vnd.shana.informed.formdata":["ifm"],"application/vnd.shana.informed.formtemplate":["itp"],"application/vnd.shana.informed.interchange":["iif"],"application/vnd.shana.informed.package":["ipk"],"application/vnd.simtech-mindmapper":["twd","twds"],"application/vnd.smaf":["mmf"],"application/vnd.smart.teacher":["teacher"],"application/vnd.solent.sdkm+xml":["sdkm","sdkd"],"application/vnd.spotfire.dxp":["dxp"],"application/vnd.spotfire.sfs":["sfs"],"application/vnd.stardivision.calc":["sdc"],"application/vnd.stardivision.draw":["sda"],"application/vnd.stardivision.impress":["sdd"],"application/vnd.stardivision.math":["smf"],"application/vnd.stardivision.writer":["sdw","vor"],"application/vnd.stardivision.writer-global":["sgl"],"application/vnd.stepmania.package":["smzip"],"application/vnd.stepmania.stepchart":["sm"],"application/vnd.sun.wadl+xml":["wadl"],"application/vnd.sun.xml.calc":["sxc"],"application/vnd.sun.xml.calc.template":["stc"],"application/vnd.sun.xml.draw":["sxd"],"application/vnd.sun.xml.draw.template":["std"],"application/vnd.sun.xml.impress":["sxi"],"application/vnd.sun.xml.impress.template":["sti"],"application/vnd.sun.xml.math":["sxm"],"application/vnd.sun.xml.writer":["sxw"],"application/vnd.sun.xml.writer.global":["sxg"],"application/vnd.sun.xml.writer.template":["stw"],"application/vnd.sus-calendar":["sus","susp"],"application/vnd.svd":["svd"],"application/vnd.symbian.install":["sis","sisx"],"application/vnd.syncml+xml":["xsm"],"application/vnd.syncml.dm+wbxml":["bdm"],"application/vnd.syncml.dm+xml":["xdm"],"application/vnd.tao.intent-module-archive":["tao"],"application/vnd.tcpdump.pcap":["pcap","cap","dmp"],"application/vnd.tmobile-livetv":["tmo"],"application/vnd.trid.tpt":["tpt"],"application/vnd.triscape.mxs":["mxs"],"application/vnd.trueapp":["tra"],"application/vnd.ufdl":["ufd","ufdl"],"application/vnd.uiq.theme":["utz"],"application/vnd.umajin":["umj"],"application/vnd.unity":["unityweb"],"application/vnd.uoml+xml":["uoml"],"application/vnd.vcx":["vcx"],"application/vnd.visio":["vsd","vst","vss","vsw"],"application/vnd.visionary":["vis"],"application/vnd.vsf":["vsf"],"application/vnd.wap.wbxml":["wbxml"],"application/vnd.wap.wmlc":["wmlc"],"application/vnd.wap.wmlscriptc":["wmlsc"],"application/vnd.webturbo":["wtb"],"application/vnd.wolfram.player":["nbp"],"application/vnd.wordperfect":["wpd"],"application/vnd.wqd":["wqd"],"application/vnd.wt.stf":["stf"],"application/vnd.xara":["xar"],"application/vnd.xfdl":["xfdl"],"application/vnd.yamaha.hv-dic":["hvd"],"application/vnd.yamaha.hv-script":["hvs"],"application/vnd.yamaha.hv-voice":["hvp"],"application/vnd.yamaha.openscoreformat":["osf"],"application/vnd.yamaha.openscoreformat.osfpvg+xml":["osfpvg"],"application/vnd.yamaha.smaf-audio":["saf"],"application/vnd.yamaha.smaf-phrase":["spf"],"application/vnd.yellowriver-custom-menu":["cmp"],"application/vnd.zul":["zir","zirz"],"application/vnd.zzazz.deck+xml":["zaz"],"application/voicexml+xml":["vxml"],"application/wasm":["wasm"],"application/widget":["wgt"],"application/winhlp":["hlp"],"application/wsdl+xml":["wsdl"],"application/wspolicy+xml":["wspolicy"],"application/x-7z-compressed":["7z"],"application/x-abiword":["abw"],"application/x-ace-compressed":["ace"],"application/x-apple-diskimage":[],"application/x-arj":["arj"],"application/x-authorware-bin":["aab","x32","u32","vox"],"application/x-authorware-map":["aam"],"application/x-authorware-seg":["aas"],"application/x-bcpio":["bcpio"],"application/x-bdoc":[],"application/x-bittorrent":["torrent"],"application/x-blorb":["blb","blorb"],"application/x-bzip":["bz"],"application/x-bzip2":["bz2","boz"],"application/x-cbr":["cbr","cba","cbt","cbz","cb7"],"application/x-cdlink":["vcd"],"application/x-cfs-compressed":["cfs"],"application/x-chat":["chat"],"application/x-chess-pgn":["pgn"],"application/x-chrome-extension":["crx"],"application/x-cocoa":["cco"],"application/x-conference":["nsc"],"application/x-cpio":["cpio"],"application/x-csh":["csh"],"application/x-debian-package":["udeb"],"application/x-dgc-compressed":["dgc"],"application/x-director":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"],"application/x-doom":["wad"],"application/x-dtbncx+xml":["ncx"],"application/x-dtbook+xml":["dtb"],"application/x-dtbresource+xml":["res"],"application/x-dvi":["dvi"],"application/x-envoy":["evy"],"application/x-eva":["eva"],"application/x-font-bdf":["bdf"],"application/x-font-ghostscript":["gsf"],"application/x-font-linux-psf":["psf"],"application/x-font-pcf":["pcf"],"application/x-font-snf":["snf"],"application/x-font-type1":["pfa","pfb","pfm","afm"],"application/x-freearc":["arc"],"application/x-futuresplash":["spl"],"application/x-gca-compressed":["gca"],"application/x-glulx":["ulx"],"application/x-gnumeric":["gnumeric"],"application/x-gramps-xml":["gramps"],"application/x-gtar":["gtar"],"application/x-hdf":["hdf"],"application/x-httpd-php":["php"],"application/x-install-instructions":["install"],"application/x-iso9660-image":[],"application/x-java-archive-diff":["jardiff"],"application/x-java-jnlp-file":["jnlp"],"application/x-latex":["latex"],"application/x-lua-bytecode":["luac"],"application/x-lzh-compressed":["lzh","lha"],"application/x-makeself":["run"],"application/x-mie":["mie"],"application/x-mobipocket-ebook":["prc","mobi"],"application/x-ms-application":["application"],"application/x-ms-shortcut":["lnk"],"application/x-ms-wmd":["wmd"],"application/x-ms-wmz":["wmz"],"application/x-ms-xbap":["xbap"],"application/x-msaccess":["mdb"],"application/x-msbinder":["obd"],"application/x-mscardfile":["crd"],"application/x-msclip":["clp"],"application/x-msdos-program":[],"application/x-msdownload":["com","bat"],"application/x-msmediaview":["mvb","m13","m14"],"application/x-msmetafile":["wmf","emf","emz"],"application/x-msmoney":["mny"],"application/x-mspublisher":["pub"],"application/x-msschedule":["scd"],"application/x-msterminal":["trm"],"application/x-mswrite":["wri"],"application/x-netcdf":["nc","cdf"],"application/x-ns-proxy-autoconfig":["pac"],"application/x-nzb":["nzb"],"application/x-perl":["pl","pm"],"application/x-pilot":[],"application/x-pkcs12":["p12","pfx"],"application/x-pkcs7-certificates":["p7b","spc"],"application/x-pkcs7-certreqresp":["p7r"],"application/x-rar-compressed":["rar"],"application/x-redhat-package-manager":["rpm"],"application/x-research-info-systems":["ris"],"application/x-sea":["sea"],"application/x-sh":["sh"],"application/x-shar":["shar"],"application/x-shockwave-flash":["swf"],"application/x-silverlight-app":["xap"],"application/x-sql":["sql"],"application/x-stuffit":["sit"],"application/x-stuffitx":["sitx"],"application/x-subrip":["srt"],"application/x-sv4cpio":["sv4cpio"],"application/x-sv4crc":["sv4crc"],"application/x-t3vm-image":["t3"],"application/x-tads":["gam"],"application/x-tar":["tar"],"application/x-tcl":["tcl","tk"],"application/x-tex":["tex"],"application/x-tex-tfm":["tfm"],"application/x-texinfo":["texinfo","texi"],"application/x-tgif":["obj"],"application/x-ustar":["ustar"],"application/x-virtualbox-hdd":["hdd"],"application/x-virtualbox-ova":["ova"],"application/x-virtualbox-ovf":["ovf"],"application/x-virtualbox-vbox":["vbox"],"application/x-virtualbox-vbox-extpack":["vbox-extpack"],"application/x-virtualbox-vdi":["vdi"],"application/x-virtualbox-vhd":["vhd"],"application/x-virtualbox-vmdk":["vmdk"],"application/x-wais-source":["src"],"application/x-web-app-manifest+json":["webapp"],"application/x-x509-ca-cert":["der","crt","pem"],"application/x-xfig":["fig"],"application/x-xliff+xml":["xlf"],"application/x-xpinstall":["xpi"],"application/x-xz":["xz"],"application/x-zmachine":["z1","z2","z3","z4","z5","z6","z7","z8"],"application/xaml+xml":["xaml"],"application/xcap-diff+xml":["xdf"],"application/xenc+xml":["xenc"],"application/xhtml+xml":["xhtml","xht"],"application/xml":["xml","xsl","xsd","rng"],"application/xml-dtd":["dtd"],"application/xop+xml":["xop"],"application/xproc+xml":["xpl"],"application/xslt+xml":["xslt"],"application/xspf+xml":["xspf"],"application/xv+xml":["mxml","xhvml","xvml","xvm"],"application/yang":["yang"],"application/yin+xml":["yin"],"application/zip":["zip"],"audio/3gpp":[],"audio/adpcm":["adp"],"audio/basic":["au","snd"],"audio/midi":["mid","midi","kar","rmi"],"audio/mp3":[],"audio/mp4":["m4a","mp4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx"],"audio/s3m":["s3m"],"audio/silk":["sil"],"audio/vnd.dece.audio":["uva","uvva"],"audio/vnd.digital-winds":["eol"],"audio/vnd.dra":["dra"],"audio/vnd.dts":["dts"],"audio/vnd.dts.hd":["dtshd"],"audio/vnd.lucent.voice":["lvp"],"audio/vnd.ms-playready.media.pya":["pya"],"audio/vnd.nuera.ecelp4800":["ecelp4800"],"audio/vnd.nuera.ecelp7470":["ecelp7470"],"audio/vnd.nuera.ecelp9600":["ecelp9600"],"audio/vnd.rip":["rip"],"audio/wav":["wav"],"audio/wave":[],"audio/webm":["weba"],"audio/x-aac":["aac"],"audio/x-aiff":["aif","aiff","aifc"],"audio/x-caf":["caf"],"audio/x-flac":["flac"],"audio/x-m4a":[],"audio/x-matroska":["mka"],"audio/x-mpegurl":["m3u"],"audio/x-ms-wax":["wax"],"audio/x-ms-wma":["wma"],"audio/x-pn-realaudio":["ram","ra"],"audio/x-pn-realaudio-plugin":["rmp"],"audio/x-realaudio":[],"audio/x-wav":[],"audio/xm":["xm"],"chemical/x-cdx":["cdx"],"chemical/x-cif":["cif"],"chemical/x-cmdf":["cmdf"],"chemical/x-cml":["cml"],"chemical/x-csml":["csml"],"chemical/x-xyz":["xyz"],"font/collection":["ttc"],"font/otf":["otf"],"font/ttf":["ttf"],"font/woff":["woff"],"font/woff2":["woff2"],"image/apng":["apng"],"image/bmp":["bmp"],"image/cgm":["cgm"],"image/g3fax":["g3"],"image/gif":["gif"],"image/ief":["ief"],"image/jp2":["jp2","jpg2"],"image/jpeg":["jpeg","jpg","jpe"],"image/jpm":["jpm"],"image/jpx":["jpx","jpf"],"image/ktx":["ktx"],"image/png":["png"],"image/prs.btif":["btif"],"image/sgi":["sgi"],"image/svg+xml":["svg","svgz"],"image/tiff":["tiff","tif"],"image/vnd.adobe.photoshop":["psd"],"image/vnd.dece.graphic":["uvi","uvvi","uvg","uvvg"],"image/vnd.djvu":["djvu","djv"],"image/vnd.dvb.subtitle":[],"image/vnd.dwg":["dwg"],"image/vnd.dxf":["dxf"],"image/vnd.fastbidsheet":["fbs"],"image/vnd.fpx":["fpx"],"image/vnd.fst":["fst"],"image/vnd.fujixerox.edmics-mmr":["mmr"],"image/vnd.fujixerox.edmics-rlc":["rlc"],"image/vnd.ms-modi":["mdi"],"image/vnd.ms-photo":["wdp"],"image/vnd.net-fpx":["npx"],"image/vnd.wap.wbmp":["wbmp"],"image/vnd.xiff":["xif"],"image/webp":["webp"],"image/x-3ds":["3ds"],"image/x-cmu-raster":["ras"],"image/x-cmx":["cmx"],"image/x-freehand":["fh","fhc","fh4","fh5","fh7"],"image/x-icon":["ico"],"image/x-jng":["jng"],"image/x-mrsid-image":["sid"],"image/x-ms-bmp":[],"image/x-pcx":["pcx"],"image/x-pict":["pic","pct"],"image/x-portable-anymap":["pnm"],"image/x-portable-bitmap":["pbm"],"image/x-portable-graymap":["pgm"],"image/x-portable-pixmap":["ppm"],"image/x-rgb":["rgb"],"image/x-tga":["tga"],"image/x-xbitmap":["xbm"],"image/x-xpixmap":["xpm"],"image/x-xwindowdump":["xwd"],"message/rfc822":["eml","mime"],"model/gltf+json":["gltf"],"model/gltf-binary":["glb"],"model/iges":["igs","iges"],"model/mesh":["msh","mesh","silo"],"model/vnd.collada+xml":["dae"],"model/vnd.dwf":["dwf"],"model/vnd.gdl":["gdl"],"model/vnd.gtw":["gtw"],"model/vnd.mts":["mts"],"model/vnd.vtu":["vtu"],"model/vrml":["wrl","vrml"],"model/x3d+binary":["x3db","x3dbz"],"model/x3d+vrml":["x3dv","x3dvz"],"model/x3d+xml":["x3d","x3dz"],"text/cache-manifest":["appcache","manifest"],"text/calendar":["ics","ifb"],"text/coffeescript":["coffee","litcoffee"],"text/css":["css"],"text/csv":["csv"],"text/hjson":["hjson"],"text/html":["html","htm","shtml"],"text/jade":["jade"],"text/jsx":["jsx"],"text/less":["less"],"text/markdown":["markdown","md"],"text/mathml":["mml"],"text/n3":["n3"],"text/plain":["txt","text","conf","def","list","log","in","ini"],"text/prs.lines.tag":["dsc"],"text/richtext":["rtx"],"text/rtf":[],"text/sgml":["sgml","sgm"],"text/slim":["slim","slm"],"text/stylus":["stylus","styl"],"text/tab-separated-values":["tsv"],"text/troff":["t","tr","roff","man","me","ms"],"text/turtle":["ttl"],"text/uri-list":["uri","uris","urls"],"text/vcard":["vcard"],"text/vnd.curl":["curl"],"text/vnd.curl.dcurl":["dcurl"],"text/vnd.curl.mcurl":["mcurl"],"text/vnd.curl.scurl":["scurl"],"text/vnd.dvb.subtitle":["sub"],"text/vnd.fly":["fly"],"text/vnd.fmi.flexstor":["flx"],"text/vnd.graphviz":["gv"],"text/vnd.in3d.3dml":["3dml"],"text/vnd.in3d.spot":["spot"],"text/vnd.sun.j2me.app-descriptor":["jad"],"text/vnd.wap.wml":["wml"],"text/vnd.wap.wmlscript":["wmls"],"text/vtt":["vtt"],"text/x-asm":["s","asm"],"text/x-c":["c","cc","cxx","cpp","h","hh","dic"],"text/x-component":["htc"],"text/x-fortran":["f","for","f77","f90"],"text/x-handlebars-template":["hbs"],"text/x-java-source":["java"],"text/x-lua":["lua"],"text/x-markdown":["mkd"],"text/x-nfo":["nfo"],"text/x-opml":["opml"],"text/x-org":[],"text/x-pascal":["p","pas"],"text/x-processing":["pde"],"text/x-sass":["sass"],"text/x-scss":["scss"],"text/x-setext":["etx"],"text/x-sfv":["sfv"],"text/x-suse-ymp":["ymp"],"text/x-uuencode":["uu"],"text/x-vcalendar":["vcs"],"text/x-vcard":["vcf"],"text/xml":[],"text/yaml":["yaml","yml"],"video/3gpp":["3gp","3gpp"],"video/3gpp2":["3g2"],"video/h261":["h261"],"video/h263":["h263"],"video/h264":["h264"],"video/jpeg":["jpgv"],"video/jpm":["jpgm"],"video/mj2":["mj2","mjp2"],"video/mp2t":["ts"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/vnd.dece.hd":["uvh","uvvh"],"video/vnd.dece.mobile":["uvm","uvvm"],"video/vnd.dece.pd":["uvp","uvvp"],"video/vnd.dece.sd":["uvs","uvvs"],"video/vnd.dece.video":["uvv","uvvv"],"video/vnd.dvb.file":["dvb"],"video/vnd.fvt":["fvt"],"video/vnd.mpegurl":["mxu","m4u"],"video/vnd.ms-playready.media.pyv":["pyv"],"video/vnd.uvvu.mp4":["uvu","uvvu"],"video/vnd.vivo":["viv"],"video/webm":["webm"],"video/x-f4v":["f4v"],"video/x-fli":["fli"],"video/x-flv":["flv"],"video/x-m4v":["m4v"],"video/x-matroska":["mkv","mk3d","mks"],"video/x-mng":["mng"],"video/x-ms-asf":["asf","asx"],"video/x-ms-vob":["vob"],"video/x-ms-wm":["wm"],"video/x-ms-wmv":["wmv"],"video/x-ms-wmx":["wmx"],"video/x-ms-wvx":["wvx"],"video/x-msvideo":["avi"],"video/x-sgi-movie":["movie"],"video/x-smv":["smv"],"x-conference/x-cooltalk":["ice"]}')}};var i={};function __nccwpck_require__(a){var o=i[a];if(o!==undefined){return o.exports}var s=i[a]={exports:{}};var l=true;try{r[a].call(s.exports,s,s.exports,__nccwpck_require__);l=false}finally{if(l)delete i[a]}return s.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var a={};(()=>{"use strict";var r=a;const i=__nccwpck_require__(7388),o=__nccwpck_require__(6536);r.main=async(r,i)=>{console.log("event : ",r);const a=r.queryStringParameters||r.body||r;const s=a.type||"png";const l=`image/${s}`;let u=await o.draw({msg:a.msg||"请不要回答！\n请不要回答！！\n否则你们将有危险！！！"}).then((r=>r.getBufferAsync(l))).then((r=>r.toString("base64")));return r.queryStringParameters||r.body?{mpserverlessComposedResponse:true,isBase64Encoded:true,statusCode:200,headers:{"content-type":l,"content-disposition":"inline"},body:u}:{data:`data:${l};base64, ${u}`}}})();module.exports=a})();